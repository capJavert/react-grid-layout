{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-grid-layout.min.js","webpack:///webpack/bootstrap e0b524d27a6d997735ca","webpack:///external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack:///./node_modules/prop-types/index.js","webpack:///./lib/utils.js","webpack:///./node_modules/lodash.isequal/index.js","webpack:///./lib/ReactGridLayout.jsx","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/react-draggable/dist/react-draggable.js","webpack:///external {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\",\"root\":\"ReactDOM\"}","webpack:///./node_modules/react-resizable/build/Resizable.js","webpack:///./lib/responsiveUtils.js","webpack:///./index-dev.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./lib/GridItem.jsx","webpack:///./node_modules/react-resizable/index.js","webpack:///./node_modules/react-resizable/build/cloneElement.js","webpack:///./node_modules/react-resizable/build/ResizableBox.js","webpack:///./lib/ResponsiveReactGridLayout.jsx","webpack:///./lib/components/WidthProvider.jsx"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_7__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_objectWithoutProperties","keys","target","indexOf","bottom","layout","max","bottomY","len","length","y","h","cloneLayout","newLayout","Array","cloneLayoutItem","layoutItem","w","x","minW","minH","maxH","moved","isStatic","static","isDraggable","isResizable","nested","items","nestedHeight","rest","_extends","childrenEqual","a","b","_lodash2","React","Children","map","key","collides","l1","l2","compact","compactType","cols","compareWith","getStatics","sorted","sortLayoutItems","out","compactItem","push","resolveCompactionCollision","item","moveToCoord","axis","sizeProp","heightWidth","itemIndex","otherItem","fullLayout","compactV","compactH","Math","min","getFirstCollision","correctBounds","bounds","collidesWith","getLayoutItem","id","getAllCollisions","filter","moveElement","isUserAction","preventCollision","log","String","oldX","oldY","reverse","collisions","collision","moveElementAwayFromCollision","itemToMove","fakeItem","undefined","perc","num","setTransform","_ref","top","left","width","height","translate","transform","WebkitTransform","MozTransform","msTransform","OTransform","position","setTopLeft","_ref2","sortLayoutItemsByColRow","sortLayoutItemsByRowCol","concat","sort","synchronizeLayoutWithChildren","initialLayout","children","forEach","child","exists","isProduction","props","_grid","console","warn","g","validateLayout","contextName","arguments","subProps","isArray","Error","j","autoBindHandlers","el","fns","bind","_console","DEBUG","apply","noop","assign","source","_lodash","_react","_react2","process","global","arrayFilter","array","predicate","index","resIndex","result","value","arrayPush","values","offset","arraySome","baseTimes","iteratee","cacheHas","cache","has","getValue","mapToArray","size","setToArray","set","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","data","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","string","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","add","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","LARGE_ARRAY_SIZE","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isBuffer","isType","isTypedArray","skipIndexes","isIndex","eq","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","undefinedTag","nullTag","symToStringTag","getRawTag","objectToString","baseIsArguments","isObjectLike","argsTag","baseIsEqual","other","bitmask","customizer","stack","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","getTag","othTag","objectTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","COMPARE_PARTIAL_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsNative","isObject","isMasked","isFunction","reIsNative","reIsHostCtor","test","toSource","baseIsTypedArray","isLength","typedArrayTags","baseKeys","isPrototype","nativeKeys","isPartial","arrLength","othLength","stacked","seen","COMPARE_UNORDERED_FLAG","arrValue","othValue","compared","othIndex","tag","dataViewTag","byteLength","byteOffset","buffer","arrayBufferTag","Uint8Array","boolTag","dateTag","numberTag","errorTag","message","regexpTag","stringTag","mapTag","convert","setTag","symbolTag","symbolValueOf","objProps","getAllKeys","objLength","skipCtor","objValue","objCtor","constructor","othCtor","getSymbols","isKeyable","getNative","isOwn","unmasked","e","nativeObjectToString","MAX_SAFE_INTEGER","reIsUint","type","func","maskSrcKey","Ctor","objectProto","funcToString","isArrayLike","isEqual","funcTag","genTag","asyncTag","proxyTag","stubArray","stubFalse","reRegExpChar","freeGlobal","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","nodeUtil","binding","nodeIsTypedArray","arrayProto","funcProto","coreJsData","toString","uid","exec","IE_PROTO","RegExp","replace","Buffer","Symbol","propertyIsEnumerable","toStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","arg","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","valueOf","symbol","ArrayBuffer","resolve","ctorString","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","_propTypes","_propTypes2","_classnames","_classnames2","_utils","_GridItem","_GridItem2","ReactGridLayout","_React$Component","context","_this","_initialiseProps","itemRefs","createRef","componentDidMount","_this2","_props","setState","mounted","onLayoutMaybeChanged","state","intersectionRoot","document","getElementById","parentElement","options","rootMargin","threshold","observer","IntersectionObserver","intersectionCallback","current","observe","UNSAFE_componentWillReceiveProps","nextProps","_this3","newLayoutBase","oldLayout","newRefs","existingRef","containerHeight","autoSize","nbRow","containerPaddingY","containerPadding","margin","rowHeight","verticalCompact","onDragStart","node","dragItemIntersecting","oldDragItem","onDrag","placeholder","activeDrag","onDragStop","_ref3","_this4","_props2","window","shiftKeyPressed","movedLayout","onMoveToParent","dragItemIntersectionDirection","disconnect","nestedCollision","find","onMoveFromParent","onLayoutChange","onResizeStart","_ref4","oldResizeItem","onResize","_ref5","_state","_props3","hasCollisions","leastX","Infinity","leastY","Number","isFinite","onResizeStop","_ref6","_state2","_props4","maxRows","useCSSTransforms","createElement","className","containerWidth","processGridItem","_props5","draggableCancel","draggableHandle","draggable","Boolean","resizable","cancel","handle","usePercentages","maxW","ref","render","_this5","_props6","style","mergedClassName","mergedStyle","Component","displayName","propTypes","PropTypes","number","bool","oneOf","arrayOf","propName","defaultProps","_this6","isIntersecting","boundingClientRect","componentDidUpdate","getBoundingClientRect","gridItem","nestedId","direction","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","classNames","classes","argType","inner","hasOwn","join","ReactDOM","createCommonjsModule","fn","makeEmptyFunction","invariant","condition","format","f","validateFormat","error","args","argIndex","framesToPop","toObject","val","checkPropTypes","typeSpecs","location","componentName","getStack","typeSpecName","invariant$1","ReactPropTypesSecret$1","ex","warning$1","loggedTypeFailures","findInArray","callback","isNum","isNaN","int","parseInt","dontSetMe","browserPrefixToKey","prop","prefix","kebabToTitleCase","str","shouldCapitalize","toUpperCase","matchesSelector","selector","matchesSelectorFunc","method","matchesSelectorAndParentsTo","baseNode","parentNode","addEvent","event","handler","attachEvent","addEventListener","removeEvent","detachEvent","removeEventListener","outerHeight","clientHeight","computedStyle","ownerDocument","defaultView","getComputedStyle","borderTopWidth","borderBottomWidth","outerWidth","clientWidth","borderLeftWidth","borderRightWidth","innerHeight","paddingTop","paddingBottom","innerWidth","paddingLeft","paddingRight","offsetXYFromParent","evt","offsetParent","isBody","body","offsetParentRect","clientX","scrollLeft","clientY","scrollTop","createCSSTransform","browserPrefix","createSVGTransform","getTouch","identifier","targetTouches","t","changedTouches","getTouchIdentifier","addUserSelectStyles","doc","styleEl","innerHTML","getElementsByTagName","appendChild","addClassName","removeUserSelectStyles","removeClassName","selection","empty","getSelection","removeAllRanges","styleHacks","childStyle","touchAction","classList","match","remove","getBoundPosition","cloneBounds","findDOMNode","ownerWindow","boundNode","querySelector","HTMLElement","nodeStyle","boundNodeStyle","offsetLeft","marginLeft","offsetTop","marginTop","right","marginRight","marginBottom","snapToGrid","grid","pendingX","pendingY","round","canDragX","canDragY","getControlPosition","touchIdentifier","draggableCore","touchObj","createCoreData","isStart","lastX","deltaX","deltaY","lastY","createDraggableData","coreData","scale","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","emptyFunction_1","invariant_1","warning","printWarning","_len","_key","_len2","_key2","warning_1","propIsEnumerable","objectAssign","test1","getOwnPropertyNames","test2","fromCharCode","test3","split","letter","err","from","symbols","to","ReactPropTypesSecret_1","checkPropTypes_1","factoryWithTypeCheckers","isValidElement","throwOnDirectAccess","getIteratorFn","maybeIterable","iteratorFn","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","is","PropTypeError","createChainableTypeChecker","validate","checkType","isRequired","propFullName","secret","ANONYMOUS","cacheKey","manualPropTypeCallCache","manualPropTypeWarningCount","chainedCheckType","createPrimitiveTypeChecker","expectedType","propValue","getPropType","getPreciseType","createArrayOfTypeChecker","typeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","getClassName","createEnumTypeChecker","expectedValues","JSON","stringify","createObjectOfTypeChecker","propType","createUnionTypeChecker","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","createShapeTypeChecker","shapeTypes","createStrictShapeTypeChecker","allKeys","isNode","every","step","iterator","next","done","isSymbol","Date","ReactPropTypes","any","element","instanceOf","objectOf","oneOfType","shape","exact","REACT_ELEMENT_TYPE","for","$$typeof","classnames","prefixes","documentElement","classCallCheck","createClass","defineProperties","descriptor","protoProps","staticProps","inherits","possibleConstructorReturn","slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","eventsFor","touch","start","move","stop","mouse","dragEventFor","DraggableCore","_temp","_ret","getPrototypeOf","dragging","NaN","handleDragStart","onMouseDown","allowAnyClick","button","thisNode","disabled","Node","coreEvent","onStart","enableUserSelectHack","handleDrag","handleDragStop","preventDefault","_deltaX","_deltaY","_snapToGrid","_snapToGrid2","MouseEvent","createEvent","initMouseEvent","onStop","onMouseUp","onTouchStart","onTouchEnd","cloneElement","only","Draggable","dragged","uiData","newState","_x","_y","slackX","slackY","_getBoundPosition","_getBoundPosition2","newStateX","newStateY","_this$props$position","_x2","_y2","defaultPosition","isElementSVG","SVGElement","_classNames","svgTransform","controlled","transformOpts","defaultClassName","defaultClassNameDragging","defaultClassNameDragged","_reactDraggable","_cloneElement","_cloneElement2","Resizable","resizing","slackW","slackH","componentWillReceiveProps","lockAspectRatio","aspectRatio","runConstraints","minConstraints","maxConstraints","ratio","oldW","oldH","resizeHandler","handlerName","widthChanged","heightChanged","_runConstraints","persist","draggableOpts","handleSize","getBreakpointFromWidth","breakpoints","sortBreakpoints","matching","breakpointName","getColsFromBreakpoint","breakpoint","findOrGenerateResponsiveLayout","layouts","lastBreakpoint","breakpointsSorted","breakpointsAbove","slice","utils","Responsive","WidthProvider","ReactPropTypesSecret","shim","getShim","eval","webpackPolyfill","deprecate","paths","_reactResizable","GridItem","calcColWidth","calcPosition","colWidth","calcXY","calcWH","createStyle","pos","mixinDraggable","onDragHandler","mixinResizable","maxWidth","mins","maxes","onResizeHandler","newPosition","parentRect","clientRect","_calcXY","_props7","_calcWH","_props8","newChild","react-draggable","react-draggable-dragging","cssTransforms","ResizableBox","_Resizable","_Resizable2","_responsiveUtils","_ReactGridLayout","_ReactGridLayout2","ResponsiveReactGridLayout","generateInitialState","_extends2","colNo","onWidthChange","newBreakpoint","newCols","onBreakpointChange","lg","md","sm","xs","xxs","ComposedComponent","_class","_temp2","onWindowResize","offsetWidth","componentWillUnmount","measureBeforeMount","_reactDom","_reactDom2"],"mappings":"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","file":"react-grid-layout.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactGridLayout\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactGridLayout\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactGridLayout\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactGridLayout\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(11)();\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.noop = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.bottom = bottom;\nexports.cloneLayout = cloneLayout;\nexports.cloneLayoutItem = cloneLayoutItem;\nexports.childrenEqual = childrenEqual;\nexports.collides = collides;\nexports.compact = compact;\nexports.compactItem = compactItem;\nexports.correctBounds = correctBounds;\nexports.getLayoutItem = getLayoutItem;\nexports.getFirstCollision = getFirstCollision;\nexports.getAllCollisions = getAllCollisions;\nexports.getStatics = getStatics;\nexports.moveElement = moveElement;\nexports.moveElementAwayFromCollision = moveElementAwayFromCollision;\nexports.perc = perc;\nexports.setTransform = setTransform;\nexports.setTopLeft = setTopLeft;\nexports.sortLayoutItems = sortLayoutItems;\nexports.sortLayoutItemsByRowCol = sortLayoutItemsByRowCol;\nexports.sortLayoutItemsByColRow = sortLayoutItemsByColRow;\nexports.synchronizeLayoutWithChildren = synchronizeLayoutWithChildren;\nexports.validateLayout = validateLayout;\nexports.autoBindHandlers = autoBindHandlers;\n\nvar _lodash = __webpack_require__(3);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n// All callbacks are of the signature (layout, oldItem, newItem, placeholder, e).\nvar isProduction = \"production\" === \"production\";\nvar DEBUG = false;\n\n/**\n * Return the bottom coordinate of the layout.\n *\n * @param  {Array} layout Layout array.\n * @return {Number}       Bottom coordinate.\n */\nfunction bottom(layout) {\n  var max = 0,\n      bottomY = void 0;\n  for (var _i = 0, len = layout.length; _i < len; _i++) {\n    bottomY = layout[_i].y + layout[_i].h;\n    if (bottomY > max) max = bottomY;\n  }\n  return max;\n}\n\nfunction cloneLayout(layout) {\n  var newLayout = Array(layout.length);\n  for (var _i2 = 0, len = layout.length; _i2 < len; _i2++) {\n    newLayout[_i2] = cloneLayoutItem(layout[_i2]);\n  }\n  return newLayout;\n}\n\n// Fast path to cloning, since this is monomorphic\nfunction cloneLayoutItem(layoutItem) {\n  var w = layoutItem.w,\n      h = layoutItem.h,\n      x = layoutItem.x,\n      y = layoutItem.y,\n      i = layoutItem.i,\n      minW = layoutItem.minW,\n      minH = layoutItem.minH,\n      maxH = layoutItem.maxH,\n      moved = layoutItem.moved,\n      isStatic = layoutItem.static,\n      isDraggable = layoutItem.isDraggable,\n      isResizable = layoutItem.isResizable,\n      nested = layoutItem.nested,\n      items = layoutItem.items,\n      nestedHeight = layoutItem.nestedHeight,\n      rest = _objectWithoutProperties(layoutItem, [\"w\", \"h\", \"x\", \"y\", \"i\", \"minW\", \"minH\", \"maxH\", \"moved\", \"static\", \"isDraggable\", \"isResizable\", \"nested\", \"items\", \"nestedHeight\"]);\n\n  return _extends({\n    w: w,\n    h: h,\n    x: x,\n    y: y,\n    i: i,\n    minW: minW,\n    minH: minH,\n    maxH: maxH,\n    moved: moved,\n    static: isStatic,\n    isDraggable: isDraggable,\n    isResizable: isResizable,\n    nested: nested,\n    items: items,\n    nestedHeight: nestedHeight\n  }, rest);\n}\n\n/**\n * Comparing React `children` is a bit difficult. This is a good way to compare them.\n * This will catch differences in keys, order, and length.\n */\nfunction childrenEqual(a, b) {\n  return (0, _lodash2.default)(_react2.default.Children.map(a, function (c) {\n    return c.key;\n  }), _react2.default.Children.map(b, function (c) {\n    return c.key;\n  }));\n}\n\n/**\n * Given two layoutitems, check if they collide.\n */\nfunction collides(l1, l2) {\n  if (l1.i === l2.i) return false; // same element\n  if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\n  if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\n  if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\n  if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\n  return true; // boxes overlap\n}\n\n/**\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\n * between items.\n *\n * @param  {Array} layout Layout.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}       Compacted Layout.\n */\nfunction compact(layout, compactType, cols) {\n  // Statics go in the compareWith array right away so items flow around them.\n  var compareWith = getStatics(layout);\n  // We go through the items by row and column.\n  var sorted = sortLayoutItems(layout, compactType);\n  // Holding for new items.\n  var out = Array(layout.length);\n\n  for (var _i3 = 0, len = sorted.length; _i3 < len; _i3++) {\n    var l = cloneLayoutItem(sorted[_i3]);\n\n    // Don't move static elements\n    if (!l.static) {\n      l = compactItem(compareWith, l, compactType, cols, sorted);\n\n      // Add to comparison array. We only collide with items before this one.\n      // Statics are already in this array.\n      compareWith.push(l);\n    }\n\n    // Add to output array to make sure they still come out in the right order.\n    out[layout.indexOf(sorted[_i3])] = l;\n\n    // Clear moved flag, if it exists.\n    l.moved = false;\n  }\n\n  return out;\n}\n\nvar heightWidth = { x: \"w\", y: \"h\" };\n/**\n * Before moving item down, it will check if the movement will cause collisions and move those items down before.\n */\nfunction resolveCompactionCollision(layout, item, moveToCoord, axis) {\n  var sizeProp = heightWidth[axis];\n  item[axis] += 1;\n  var itemIndex = layout.map(function (layoutItem) {\n    return layoutItem.i;\n  }).indexOf(item.i);\n\n  // Go through each item we collide with.\n  for (var _i4 = itemIndex + 1; _i4 < layout.length; _i4++) {\n    var otherItem = layout[_i4];\n    // Ignore static items\n    if (otherItem.static) continue;\n\n    // Optimization: we can break early if we know we're past this el\n    // We can do this b/c it's a sorted layout\n    if (otherItem.y > item.y + item.h) break;\n\n    if (collides(item, otherItem)) {\n      resolveCompactionCollision(layout, otherItem, moveToCoord + item[sizeProp], axis);\n    }\n  }\n\n  item[axis] = moveToCoord;\n}\n\n/**\n * Compact an item in the layout.\n */\nfunction compactItem(compareWith, l, compactType, cols, fullLayout) {\n  var compactV = compactType === \"vertical\";\n  var compactH = compactType === \"horizontal\";\n  if (compactV) {\n    // Bottom 'y' possible is the bottom of the layout.\n    // This allows you to do nice stuff like specify {y: Infinity}\n    // This is here because the layout must be sorted in order to get the correct bottom `y`.\n    l.y = Math.min(bottom(compareWith), l.y);\n    // Move the element up as far as it can go without colliding.\n    while (l.y > 0 && !getFirstCollision(compareWith, l)) {\n      l.y--;\n    }\n  } else if (compactH) {\n    l.y = Math.min(bottom(compareWith), l.y);\n    // Move the element left as far as it can go without colliding.\n    while (l.x > 0 && !getFirstCollision(compareWith, l)) {\n      l.x--;\n    }\n  }\n\n  // Move it down, and keep moving it down if it's colliding.\n  var collides = void 0;\n  while (collides = getFirstCollision(compareWith, l)) {\n    if (compactH) {\n      resolveCompactionCollision(fullLayout, l, collides.x + collides.w, \"x\");\n    } else {\n      resolveCompactionCollision(fullLayout, l, collides.y + collides.h, \"y\");\n    }\n    // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\n    if (compactH && l.x + l.w > cols) {\n      l.x = cols - l.w;\n      l.y++;\n    }\n  }\n  return l;\n}\n\n/**\n * Given a layout, make sure all elements fit within its bounds.\n *\n * @param  {Array} layout Layout array.\n * @param  {Number} bounds Number of columns.\n */\nfunction correctBounds(layout, bounds) {\n  var collidesWith = getStatics(layout);\n  for (var _i5 = 0, len = layout.length; _i5 < len; _i5++) {\n    var l = layout[_i5];\n    // Overflows right\n    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;\n    // Overflows left\n    if (l.x < 0) {\n      l.x = 0;\n      l.w = bounds.cols;\n    }\n    if (!l.static) collidesWith.push(l);else {\n      // If this is static and collides with other statics, we must move it down.\n      // We have to do something nicer than just letting them overlap.\n      while (getFirstCollision(collidesWith, l)) {\n        l.y++;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * Get a layout item by ID. Used so we can override later on if necessary.\n *\n * @param  {Array}  layout Layout array.\n * @param  {String} id     ID\n * @return {LayoutItem}    Item at ID.\n */\nfunction getLayoutItem(layout, id) {\n  for (var _i6 = 0, len = layout.length; _i6 < len; _i6++) {\n    if (layout[_i6].i === id) return layout[_i6];\n  }\n}\n\n/**\n * Returns the first item this layout collides with.\n * It doesn't appear to matter which order we approach this from, although\n * perhaps that is the wrong thing to do.\n *\n * @param  {Object} layoutItem Layout item.\n * @return {Object|undefined}  A colliding layout item, or undefined.\n */\nfunction getFirstCollision(layout, layoutItem) {\n  for (var _i7 = 0, len = layout.length; _i7 < len; _i7++) {\n    if (collides(layout[_i7], layoutItem)) return layout[_i7];\n  }\n}\n\nfunction getAllCollisions(layout, layoutItem) {\n  return layout.filter(function (l) {\n    return collides(l, layoutItem);\n  });\n}\n\n/**\n * Get all static elements.\n * @param  {Array} layout Array of layout objects.\n * @return {Array}        Array of static layout items..\n */\nfunction getStatics(layout) {\n  return layout.filter(function (l) {\n    return l.static;\n  });\n}\n\n/**\n * Move an element. Responsible for doing cascading movements of other elements.\n *\n * @param  {Array}      layout            Full layout to modify.\n * @param  {LayoutItem} l                 element to move.\n * @param  {Number}     [x]               X position in grid units.\n * @param  {Number}     [y]               Y position in grid units.\n */\nfunction moveElement(layout, l, x, y, isUserAction, preventCollision, compactType, cols) {\n  if (l.static) return layout;\n\n  // Short-circuit if nothing to do.\n  if (l.y === y && l.x === x) return layout;\n\n  log(\"Moving element \" + l.i + \" to [\" + String(x) + \",\" + String(y) + \"] from [\" + l.x + \",\" + l.y + \"]\");\n  var oldX = l.x;\n  var oldY = l.y;\n\n  // This is quite a bit faster than extending the object\n  if (typeof x === 'number') l.x = x;\n  if (typeof y === 'number') l.y = y;\n  l.moved = true;\n\n  // If this collides with anything, move it.\n  // When doing this comparison, we have to sort the items we compare with\n  // to ensure, in the case of multiple collisions, that we're getting the\n  // nearest collision.\n  var sorted = sortLayoutItems(layout, compactType);\n  var movingUp = compactType === \"vertical\" && typeof y === 'number' ? oldY >= y : compactType === \"horizontal\" && typeof x === 'number' ? oldX >= x : false;\n  if (movingUp) sorted = sorted.reverse();\n  var collisions = getAllCollisions(sorted, l);\n\n  // There was a collision; abort\n  if (preventCollision && collisions.length) {\n    log(\"Collision prevented on \" + l.i + \", reverting.\");\n    l.x = oldX;\n    l.y = oldY;\n    l.moved = false;\n    return layout;\n  }\n\n  // Move each item that collides away from this element.\n  for (var _i8 = 0, len = collisions.length; _i8 < len; _i8++) {\n    var collision = collisions[_i8];\n    log(\"Resolving collision between \" + l.i + \" at [\" + l.x + \",\" + l.y + \"] and \" + collision.i + \" at [\" + collision.x + \",\" + collision.y + \"]\");\n\n    // Short circuit so we can't infinite loop\n    if (collision.moved) continue;\n\n    // Don't move static items - we have to move *this* element away\n    if (collision.static) {\n      layout = moveElementAwayFromCollision(layout, collision, l, isUserAction, compactType, cols);\n    } else {\n      layout = moveElementAwayFromCollision(layout, l, collision, isUserAction, compactType, cols);\n    }\n  }\n\n  return layout;\n}\n\n/**\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\n * We attempt to move it up if there's room, otherwise it goes below.\n *\n * @param  {Array} layout            Full layout to modify.\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\n */\nfunction moveElementAwayFromCollision(layout, collidesWith, itemToMove, isUserAction, compactType, cols) {\n  var compactH = compactType === \"horizontal\";\n  // Compact vertically if not set to horizontal\n  var compactV = compactType !== \"horizontal\";\n  var preventCollision = false; // we're already colliding\n\n  // If there is enough space above the collision to put this element, move it there.\n  // We only do this on the main collision as this can get funky in cascades and cause\n  // unwanted swapping behavior.\n  if (isUserAction) {\n    // Reset isUserAction flag because we're not in the main collision anymore.\n    isUserAction = false;\n\n    // Make a mock item so we don't modify the item here, only modify in moveElement.\n    var fakeItem = {\n      x: compactH ? Math.max(collidesWith.x - itemToMove.w, 0) : itemToMove.x,\n      y: compactV ? Math.max(collidesWith.y - itemToMove.h, 0) : itemToMove.y,\n      w: itemToMove.w,\n      h: itemToMove.h,\n      i: \"-1\"\n    };\n\n    // No collision? If so, we can go up there; otherwise, we'll end up moving down as normal\n    if (!getFirstCollision(layout, fakeItem)) {\n      log(\"Doing reverse collision on \" + itemToMove.i + \" up to [\" + fakeItem.x + \",\" + fakeItem.y + \"].\");\n      return moveElement(layout, itemToMove, compactH ? fakeItem.x : undefined, compactV ? fakeItem.y : undefined, isUserAction, preventCollision, compactType, cols);\n    }\n  }\n\n  return moveElement(layout, itemToMove, compactH ? itemToMove.x + 1 : undefined, compactV ? itemToMove.y + 1 : undefined, isUserAction, preventCollision, compactType, cols);\n}\n\n/**\n * Helper to convert a number to a percentage string.\n *\n * @param  {Number} num Any number\n * @return {String}     That number as a percentage.\n */\nfunction perc(num) {\n  return num * 100 + \"%\";\n}\n\nfunction setTransform(_ref) {\n  var top = _ref.top,\n      left = _ref.left,\n      width = _ref.width,\n      height = _ref.height;\n\n  // Replace unitless items with px\n  var translate = \"translate(\" + left + \"px,\" + top + \"px)\";\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: width + \"px\",\n    height: height + \"px\",\n    position: \"absolute\"\n  };\n}\n\nfunction setTopLeft(_ref2) {\n  var top = _ref2.top,\n      left = _ref2.left,\n      width = _ref2.width,\n      height = _ref2.height;\n\n  return {\n    top: top + \"px\",\n    left: left + \"px\",\n    width: width + \"px\",\n    height: height + \"px\",\n    position: \"absolute\"\n  };\n}\n\n/**\n * Get layout items sorted from top left to right and down.\n *\n * @return {Array} Array of layout objects.\n * @return {Array}        Layout, sorted static items first.\n */\nfunction sortLayoutItems(layout, compactType) {\n  if (compactType === \"horizontal\") return sortLayoutItemsByColRow(layout);else return sortLayoutItemsByRowCol(layout);\n}\n\nfunction sortLayoutItemsByRowCol(layout) {\n  return [].concat(layout).sort(function (a, b) {\n    if (a.y > b.y || a.y === b.y && a.x > b.x) {\n      return 1;\n    } else if (a.y === b.y && a.x === b.x) {\n      // Without this, we can get different sort results in IE vs. Chrome/FF\n      return 0;\n    }\n    return -1;\n  });\n}\n\nfunction sortLayoutItemsByColRow(layout) {\n  return [].concat(layout).sort(function (a, b) {\n    if (a.x > b.x || a.x === b.x && a.y > b.y) {\n      return 1;\n    }\n    return -1;\n  });\n}\n\n/**\n * Generate a layout using the initialLayout and children as a template.\n * Missing entries will be added, extraneous ones will be truncated.\n *\n * @param  {Array}  initialLayout Layout passed in through props.\n * @param  {String} breakpoint    Current responsive breakpoint.\n * @param  {?String} compact      Compaction option.\n * @return {Array}                Working layout.\n */\nfunction synchronizeLayoutWithChildren(initialLayout, children, cols, compactType) {\n  initialLayout = initialLayout || [];\n\n  // Generate one layout item per child.\n  var layout = [];\n  _react2.default.Children.forEach(children, function (child, i) {\n    // Don't overwrite if it already exists.\n    var exists = getLayoutItem(initialLayout, String(child.key));\n    if (exists) {\n      layout[i] = cloneLayoutItem(exists);\n    } else {\n      if (!isProduction && child.props._grid) {\n        console.warn(\"`_grid` properties on children have been deprecated as of React 15.2. \" + // eslint-disable-line\n        \"Please use `data-grid` or add your properties directly to the `layout`.\");\n      }\n      var g = child.props[\"data-grid\"] || child.props._grid;\n\n      // Hey, this item has a data-grid property, use it.\n      if (g) {\n        if (!isProduction) {\n          validateLayout([g], \"ReactGridLayout.children\");\n        }\n        layout[i] = cloneLayoutItem(_extends({}, g, { i: child.key }));\n      } else {\n        // Nothing provided: ensure this is added to the bottom\n        layout[i] = cloneLayoutItem({\n          w: 1,\n          h: 1,\n          x: 0,\n          y: bottom(layout),\n          i: String(child.key)\n        });\n      }\n    }\n  });\n\n  // Correct the layout.\n  layout = correctBounds(layout, { cols: cols });\n  layout = compact(layout, compactType, cols);\n\n  return layout;\n}\n\n/**\n * Validate a layout. Throws errors.\n *\n * @param  {Array}  layout        Array of layout items.\n * @param  {String} [contextName] Context name for errors.\n * @throw  {Error}                Validation error.\n */\nfunction validateLayout(layout) {\n  var contextName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Layout\";\n\n  var subProps = [\"x\", \"y\", \"w\", \"h\"];\n  if (!Array.isArray(layout)) throw new Error(contextName + \" must be an array!\");\n  for (var _i9 = 0, len = layout.length; _i9 < len; _i9++) {\n    var item = layout[_i9];\n    for (var j = 0; j < subProps.length; j++) {\n      if (typeof item[subProps[j]] !== \"number\") {\n        throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + _i9 + \"].\" + subProps[j] + \" must be a number!\");\n      }\n    }\n    if (item.i && typeof item.i !== \"string\") {\n      throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + _i9 + \"].i must be a string!\");\n    }\n    if (item.static !== undefined && typeof item.static !== \"boolean\") {\n      throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + _i9 + \"].static must be a boolean!\");\n    }\n  }\n}\n\n// Flow can't really figure this out, so we just use Object\nfunction autoBindHandlers(el, fns) {\n  fns.forEach(function (key) {\n    return el[key] = el[key].bind(el);\n  });\n}\n\nfunction log() {\n  var _console;\n\n  if (!DEBUG) return;\n  // eslint-disable-next-line no-console\n  (_console = console).log.apply(_console, arguments);\n}\n\nvar noop = exports.noop = function noop() {};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)(module)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = __webpack_require__(3);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _classnames = __webpack_require__(5);\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utils = __webpack_require__(2);\n\nvar _GridItem = __webpack_require__(15);\n\nvar _GridItem2 = _interopRequireDefault(_GridItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// End Types\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\n// Types\nvar ReactGridLayout = function (_React$Component) {\n  _inherits(ReactGridLayout, _React$Component);\n\n  // TODO publish internal ReactClass displayName transform\n  function ReactGridLayout(props, context) {\n    _classCallCheck(this, ReactGridLayout);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    (0, _utils.autoBindHandlers)(_this, [\"onDragStart\", \"onDrag\", \"onDragStop\", \"onResizeStart\", \"onResize\", \"onResizeStop\"]);\n\n    if (props.nested) {\n      _react2.default.Children.forEach(props.children, function (child) {\n        _this.itemRefs[child.key] = _react2.default.createRef();\n      });\n    }\n    return _this;\n  }\n\n  ReactGridLayout.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var _props = this.props,\n        id = _props.id,\n        nested = _props.nested;\n\n    this.setState({ mounted: true });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n\n    // add observers to items\n    this.intersectionRoot = document.getElementById(id).parentElement;\n    var options = {\n      root: this.intersectionRoot,\n      rootMargin: '0px 0px 0px 0px',\n      threshold: 0.0\n    };\n\n    this.observer = new IntersectionObserver(this.intersectionCallback, options);\n\n    if (nested) {\n      Object.keys(this.itemRefs).forEach(function (key) {\n        if (_this2.itemRefs[key].current) {\n          _this2.observer.observe(_this2.itemRefs[key].current);\n        }\n      });\n    }\n  };\n\n  ReactGridLayout.prototype.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    var _this3 = this;\n\n    var newLayoutBase = void 0;\n    // Legacy support for compactType\n    // Allow parent to set layout directly.\n    if (!(0, _lodash2.default)(nextProps.layout, this.props.layout) || nextProps.compactType !== this.props.compactType) {\n      newLayoutBase = nextProps.layout;\n    } else if (!(0, _utils.childrenEqual)(this.props.children, nextProps.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = this.state.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      var newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, this.compactType(nextProps));\n      var _oldLayout = this.state.layout;\n\n      var _nested = this.props.nested;\n\n      var newRefs = {};\n      if (_nested) {\n        // add refs for new elements\n        newLayout.forEach(function (item) {\n          var existingRef = _this3.itemRefs[item.i];\n\n          if (!existingRef) {\n            newRefs[item.i] = _react2.default.createRef();\n          } else {\n            newRefs[item.i] = existingRef;\n          }\n        });\n\n        this.itemRefs = newRefs;\n      }\n\n      this.setState({ layout: newLayout });\n      this.onLayoutMaybeChanged(newLayout, _oldLayout);\n    }\n  };\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n\n\n  ReactGridLayout.prototype.containerHeight = function containerHeight() {\n    if (!this.props.autoSize) return;\n    var nbRow = (0, _utils.bottom)(this.state.layout);\n    var containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + \"px\";\n  };\n\n  ReactGridLayout.prototype.compactType = function compactType(props) {\n    if (!props) props = this.props;\n    return props.verticalCompact === false ? null : props.compactType;\n  };\n\n  /**\n   * When dragging starts\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDragStart = function onDragStart(i, x, y, _ref) {\n    var e = _ref.e,\n        node = _ref.node;\n\n    // invalidate last drag item intersection status\n    this.dragItemIntersecting = true;\n\n    var layout = this.state.layout;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    this.setState({\n      oldDragItem: (0, _utils.cloneLayoutItem)(l),\n      oldLayout: this.state.layout\n    });\n\n    return this.props.onDragStart(layout, l, l, null, e, node);\n  };\n\n  /**\n   * Each drag movement create a new dragelement and move the element to the dragged location\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDrag = function onDrag(i, x, y, _ref2) {\n    var e = _ref2.e,\n        node = _ref2.node;\n    var oldDragItem = this.state.oldDragItem;\n    var layout = this.state.layout;\n    var cols = this.props.cols;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    // Create placeholder (display only)\n    var placeholder = {\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      placeholder: true,\n      i: i\n    };\n\n    // Move the element to the dragged location.\n    var isUserAction = true;\n    layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, this.props.preventCollision, this.compactType(), cols);\n\n    this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n\n    this.setState({\n      layout: (0, _utils.compact)(layout, this.compactType(), cols),\n      activeDrag: placeholder\n    });\n  };\n\n  /**\n   * When dragging stops, figure out which position the element is closest to and update its x and y.\n   * @param  {String} i Index of the child.\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDragStop = function onDragStop(i, x, y, _ref3) {\n    var _this4 = this;\n\n    var e = _ref3.e,\n        node = _ref3.node;\n    var oldDragItem = this.state.oldDragItem;\n    var layout = this.state.layout;\n    var _props2 = this.props,\n        cols = _props2.cols,\n        preventCollision = _props2.preventCollision,\n        nested = _props2.nested,\n        id = _props2.id;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    if (window.shiftKeyPressed && !nested && !l.nested) {\n      // shift key is pressed check if item should go to nested grid\n      var sorted = (0, _utils.sortLayoutItems)(layout, this.compactType());\n      var collisions = (0, _utils.getAllCollisions)(sorted, node);\n\n      var nestedCollision = collisions.find(function (item) {\n        return item.nested;\n      });\n\n      if (nestedCollision) {\n        this.setState({\n          activeDrag: null,\n          oldDragItem: null,\n          oldLayout: null\n        });\n\n        var movedLayout = this.onMoveFromParent(l, nestedCollision.i);\n        if (movedLayout) {\n          layout = movedLayout;\n        }\n      }\n    } else if (window.shiftKeyPressed && !this.dragItemIntersecting && !l.nested) {\n      this.setState({\n        activeDrag: null,\n        oldDragItem: null,\n        oldLayout: null\n      });\n\n      var _movedLayout = this.onMoveToParent(l, id, this.dragItemIntersectionDirection);\n      if (_movedLayout) {\n        layout = _movedLayout;\n\n        delete this.itemRefs[i];\n\n        // reconenct all observers because items are remounted\n        // TODO find a better way to preserve refs across remounts\n        this.observer.disconnect();\n\n        Object.keys(this.itemRefs).forEach(function (key) {\n          if (_this4.itemRefs[key].current) {\n            _this4.observer.observe(_this4.itemRefs[key].current);\n          }\n        });\n      }\n    } else {\n      // Move the element here\n      var isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, this.compactType(), cols);\n\n      this.props.onDragStop(layout, oldDragItem, l, null, e, node);\n\n      // Set state\n      var newLayout = (0, _utils.compact)(layout, this.compactType(), cols);\n      var _oldLayout2 = this.state.oldLayout;\n\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldDragItem: null,\n        oldLayout: null\n      });\n\n      this.onLayoutMaybeChanged(newLayout, _oldLayout2);\n    }\n  };\n\n  ReactGridLayout.prototype.onLayoutMaybeChanged = function onLayoutMaybeChanged(newLayout, oldLayout) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!(0, _lodash2.default)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  };\n\n  ReactGridLayout.prototype.onResizeStart = function onResizeStart(i, w, h, _ref4) {\n    var e = _ref4.e,\n        node = _ref4.node;\n    var layout = this.state.layout;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    this.setState({\n      oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n      oldLayout: this.state.layout\n    });\n\n    this.props.onResizeStart(layout, l, l, null, e, node);\n  };\n\n  ReactGridLayout.prototype.onResize = function onResize(i, w, h, _ref5) {\n    var e = _ref5.e,\n        node = _ref5.node;\n    var _state = this.state,\n        layout = _state.layout,\n        oldResizeItem = _state.oldResizeItem;\n    var _props3 = this.props,\n        cols = _props3.cols,\n        preventCollision = _props3.preventCollision;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    // Something like quad tree should be used\n    // to find collisions faster\n    var hasCollisions = void 0;\n    if (preventCollision) {\n      var collisions = (0, _utils.getAllCollisions)(layout, _extends({}, l, { w: w, h: h })).filter(function (layoutItem) {\n        return layoutItem.i !== l.i;\n      });\n      hasCollisions = collisions.length > 0;\n\n      // If we're colliding, we need adjust the placeholder.\n      if (hasCollisions) {\n        // adjust w && h to maximum allowed space\n        var leastX = Infinity,\n            leastY = Infinity;\n        collisions.forEach(function (layoutItem) {\n          if (layoutItem.x > l.x) leastX = Math.min(leastX, layoutItem.x);\n          if (layoutItem.y > l.y) leastY = Math.min(leastY, layoutItem.y);\n        });\n\n        if (Number.isFinite(leastX)) l.w = leastX - l.x;\n        if (Number.isFinite(leastY)) l.h = leastY - l.y;\n      }\n    }\n\n    if (!hasCollisions) {\n      // Set new width and height.\n      l.w = w;\n      l.h = h;\n    }\n\n    // Create placeholder element (display only)\n    var placeholder = {\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      static: true,\n      i: i\n    };\n\n    this.props.onResize(layout, oldResizeItem, l, placeholder, e, node);\n\n    // Re-compact the layout and set the drag placeholder.\n    this.setState({\n      layout: (0, _utils.compact)(layout, this.compactType(), cols),\n      activeDrag: placeholder\n    });\n  };\n\n  ReactGridLayout.prototype.onResizeStop = function onResizeStop(i, w, h, _ref6) {\n    var e = _ref6.e,\n        node = _ref6.node;\n    var _state2 = this.state,\n        layout = _state2.layout,\n        oldResizeItem = _state2.oldResizeItem;\n    var cols = this.props.cols;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n\n    this.props.onResizeStop(layout, oldResizeItem, l, null, e, node);\n\n    // Set state\n    var newLayout = (0, _utils.compact)(layout, this.compactType(), cols);\n    var oldLayout = this.state.oldLayout;\n\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldResizeItem: null,\n      oldLayout: null\n    });\n\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  };\n\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n\n\n  ReactGridLayout.prototype.placeholder = function placeholder() {\n    var activeDrag = this.state.activeDrag;\n\n    if (!activeDrag) return null;\n    var _props4 = this.props,\n        width = _props4.width,\n        cols = _props4.cols,\n        margin = _props4.margin,\n        containerPadding = _props4.containerPadding,\n        rowHeight = _props4.rowHeight,\n        maxRows = _props4.maxRows,\n        useCSSTransforms = _props4.useCSSTransforms;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n\n    return _react2.default.createElement(\n      _GridItem2.default,\n      {\n        w: activeDrag.w,\n        h: activeDrag.h,\n        x: activeDrag.x,\n        y: activeDrag.y,\n        i: activeDrag.i,\n        className: \"react-grid-placeholder\",\n        containerWidth: width,\n        cols: cols,\n        margin: margin,\n        containerPadding: containerPadding || margin,\n        maxRows: maxRows,\n        rowHeight: rowHeight,\n        isDraggable: false,\n        isResizable: false,\n        useCSSTransforms: useCSSTransforms\n      },\n      _react2.default.createElement(\"div\", null)\n    );\n  };\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n  ReactGridLayout.prototype.processGridItem = function processGridItem(child) {\n    if (!child || !child.key) return;\n    var l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n\n    var _props5 = this.props,\n        width = _props5.width,\n        cols = _props5.cols,\n        margin = _props5.margin,\n        containerPadding = _props5.containerPadding,\n        rowHeight = _props5.rowHeight,\n        maxRows = _props5.maxRows,\n        isDraggable = _props5.isDraggable,\n        isResizable = _props5.isResizable,\n        useCSSTransforms = _props5.useCSSTransforms,\n        draggableCancel = _props5.draggableCancel,\n        draggableHandle = _props5.draggableHandle;\n    var mounted = this.state.mounted;\n\n    // Parse 'static'. Any properties defined directly on the grid item will take precedence.\n\n    var draggable = Boolean(!l.static && isDraggable && (l.isDraggable || l.isDraggable == null));\n    var resizable = Boolean(!l.static && isResizable && (l.isResizable || l.isResizable == null));\n\n    return _react2.default.createElement(\n      _GridItem2.default,\n      {\n        className: l.nested ? 'react-grid-item-nested' : null,\n        containerWidth: width,\n        cols: cols,\n        margin: margin,\n        containerPadding: containerPadding || margin,\n        maxRows: maxRows,\n        rowHeight: rowHeight,\n        cancel: draggableCancel,\n        handle: draggableHandle,\n        onDragStop: this.onDragStop,\n        onDragStart: this.onDragStart,\n        onDrag: this.onDrag,\n        onResizeStart: this.onResizeStart,\n        onResize: this.onResize,\n        onResizeStop: this.onResizeStop,\n        isDraggable: draggable,\n        isResizable: resizable,\n        useCSSTransforms: useCSSTransforms && mounted,\n        usePercentages: !mounted,\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        i: l.i,\n        minH: l.minH,\n        minW: l.minW,\n        maxH: l.maxH,\n        maxW: l.maxW,\n        \"static\": l.static\n      },\n      _react2.default.createElement(\n        \"div\",\n        { ref: this.itemRefs[String(l.i)] },\n        child\n      )\n    );\n  };\n\n  ReactGridLayout.prototype.render = function render() {\n    var _this5 = this;\n\n    var _props6 = this.props,\n        id = _props6.id,\n        className = _props6.className,\n        style = _props6.style,\n        height = _props6.height;\n\n\n    var mergedClassName = (0, _classnames2.default)(\"react-grid-layout\", className);\n    var mergedStyle = _extends({\n      height: height ? height + \"px\" : this.containerHeight()\n    }, style);\n\n    return _react2.default.createElement(\n      \"div\",\n      { id: id, className: mergedClassName, style: mergedStyle },\n      _react2.default.Children.map(this.props.children, function (child) {\n        return _this5.processGridItem(child);\n      }),\n      this.placeholder()\n    );\n  };\n\n  return ReactGridLayout;\n}(_react2.default.Component);\n\nReactGridLayout.displayName = \"ReactGridLayout\";\nReactGridLayout.propTypes = {\n  //\n  // Basic props\n  //\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes2.default.bool,\n  // # of cols.\n  cols: _propTypes2.default.number,\n  nested: _propTypes2.default.bool,\n\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes2.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes2.default.string,\n\n  // Deprecated\n  verticalCompact: function verticalCompact(props) {\n    if (props.verticalCompact === false && \"production\" !== \"production\") {\n      console.warn(\n      // eslint-disable-line no-console\n      \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" + 'Use `compactType`: \"horizontal\" | \"vertical\" | null.');\n    }\n  },\n  // Choose vertical or hotizontal compaction\n  compactType: _propTypes2.default.oneOf([\"vertical\", \"horizontal\"]),\n\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function layout(props) {\n    var layout = props.layout;\n    // I hope you're setting the data-grid property on the grid items\n    if (layout === undefined) return;\n    (0, _utils.validateLayout)(layout, \"layout\");\n  },\n\n  //\n  // Grid Dimensions\n  //\n\n  // Margin between items [x, y] in px\n  margin: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  // Padding inside the container [x, y] in px\n  containerPadding: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes2.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes2.default.number,\n\n  //\n  // Flags\n  //\n  isDraggable: _propTypes2.default.bool,\n  isResizable: _propTypes2.default.bool,\n  // If true, grid items won't change position when being dragged over.\n  preventCollision: _propTypes2.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes2.default.bool,\n\n  //\n  // Callbacks\n  //\n\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes2.default.func,\n\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes2.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes2.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes2.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes2.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes2.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes2.default.func,\n\n  //\n  // Custom nested Callbacks\n  //\n\n  onMoveToParent: _propTypes2.default.func,\n  onMoveFromParent: _propTypes2.default.func,\n\n  //\n  // Key modifiers\n  //\n  shiftKeyPressed: _propTypes2.default.bool, // TODO use this prop instead of window.shiftKeyPressed\n\n  //\n  // Other validations\n  //\n\n  // Children must not have duplicate keys.\n  children: function children(props, propName) {\n    var children = props[propName];\n\n    // Check children keys for duplicates. Throw if found.\n    var keys = {};\n    _react2.default.Children.forEach(children, function (child) {\n      if (keys[child.key]) {\n        throw new Error('Duplicate child key \"' + child.key + '\" found! This will cause problems in ReactGridLayout.');\n      }\n      keys[child.key] = true;\n    });\n  }\n};\nReactGridLayout.defaultProps = {\n  autoSize: true,\n  cols: 12,\n  className: \"\",\n  style: {},\n  draggableHandle: \"\",\n  draggableCancel: \"\",\n  containerPadding: null,\n  rowHeight: 150,\n  maxRows: Infinity, // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isDraggable: true,\n  isResizable: true,\n  useCSSTransforms: true,\n  verticalCompact: true,\n  compactType: \"vertical\",\n  preventCollision: false,\n  onLayoutChange: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragStop: _utils.noop,\n  onResizeStart: _utils.noop,\n  onResize: _utils.noop,\n  onResizeStop: _utils.noop\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this6 = this;\n\n  this.state = {\n    activeDrag: null,\n    layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols,\n    // Legacy support for verticalCompact: false\n    this.compactType()),\n    mounted: false,\n    oldDragItem: null,\n    oldLayout: null,\n    oldResizeItem: null\n  };\n  this.itemRefs = {};\n  this.observer = null;\n  this.dragItemIntersecting = true;\n\n  this.intersectionCallback = function (entries /*, observer*/) {\n    entries.forEach(function (entry) {\n      if (entry.target.className.indexOf('react-draggable-dragging') > -1) {\n        _this6.dragItemIntersecting = entry.isIntersecting;\n\n        if (!entry.isIntersecting) {\n          _this6.dragItemIntersectionDirection = entry.boundingClientRect.top > _this6.boundingClientRect.top + _this6.boundingClientRect.height ? 'bottom' : 'top';\n        }\n      }\n    });\n  };\n\n  this.componentDidUpdate = function () {\n    _this6.observer.disconnect();\n\n    Object.keys(_this6.itemRefs).forEach(function (key) {\n      if (_this6.itemRefs[key].current) {\n        _this6.observer.observe(_this6.itemRefs[key].current);\n      }\n    });\n\n    _this6.boundingClientRect = _this6.intersectionRoot.getBoundingClientRect();\n  };\n\n  this.onMoveToParent = function (gridItem, nestedId, direction) {\n    var onMoveToParent = _this6.props.onMoveToParent;\n\n\n    if (onMoveToParent) {\n      return onMoveToParent(gridItem, nestedId, direction);\n    }\n\n    return null;\n  };\n\n  this.onMoveFromParent = function (gridItem, nestedId) {\n    var onMoveFromParent = _this6.props.onMoveFromParent;\n\n\n    if (onMoveFromParent) {\n      return onMoveFromParent(gridItem, nestedId);\n    }\n\n    return null;\n  };\n};\n\nexports.default = ReactGridLayout;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n\t true ? module.exports = factory(__webpack_require__(7), __webpack_require__(0)) :\n\ttypeof define === 'function' && define.amd ? define(['react-dom', 'react'], factory) :\n\t(global.ReactDraggable = factory(global.ReactDOM,global.React));\n}(this, (function (ReactDOM,React) { 'use strict';\n\n\tReactDOM = ReactDOM && ReactDOM.hasOwnProperty('default') ? ReactDOM['default'] : ReactDOM;\n\tReact = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\n\tvar emptyFunction_1 = emptyFunction;\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\n\tvar validateFormat = function validateFormat(format) {};\n\n\t{\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\n\tvar invariant_1 = invariant;\n\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\n\tvar warning = emptyFunction_1;\n\n\t{\n\t  var printWarning = function printWarning(format) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\n\t    var argIndex = 0;\n\t    var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t      return args[argIndex++];\n\t    });\n\t    if (typeof console !== 'undefined') {\n\t      console.error(message);\n\t    }\n\t    try {\n\t      // --- Welcome to debugging React ---\n\t      // This error was thrown as a convenience so that you can use this stack\n\t      // to find the callsite that caused this warning to fire.\n\t      throw new Error(message);\n\t    } catch (x) {}\n\t  };\n\n\t  warning = function warning(condition, format) {\n\t    if (format === undefined) {\n\t      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t    }\n\n\t    if (format.indexOf('Failed Composite propType: ') === 0) {\n\t      return; // Ignore CompositeComponent proptype check.\n\t    }\n\n\t    if (!condition) {\n\t      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t        args[_key2 - 2] = arguments[_key2];\n\t      }\n\n\t      printWarning.apply(undefined, [format].concat(args));\n\t    }\n\t  };\n\t}\n\n\tvar warning_1 = warning;\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\n\t\treturn Object(val);\n\t}\n\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn to;\n\t};\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\n\tvar ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\n\t{\n\t  var invariant$1 = invariant_1;\n\t  var warning$1 = warning_1;\n\t  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;\n\t  var loggedTypeFailures = {};\n\t}\n\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?Function} getStack Returns the component stack.\n\t * @private\n\t */\n\tfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n\t  {\n\t    for (var typeSpecName in typeSpecs) {\n\t      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t        var error;\n\t        // Prop type validation may throw. In case they do, we don't want to\n\t        // fail the render phase where it didn't fail before. So we log it.\n\t        // After these have been cleaned up, we'll let them throw.\n\t        try {\n\t          // This is intentionally an invariant that gets caught. It's the same\n\t          // behavior as without this statement except with a better message.\n\t          invariant$1(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n\t          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);\n\t        } catch (ex) {\n\t          error = ex;\n\t        }\n\t        warning$1(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\t        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t          // Only monitor this failure once because there tends to be a lot of the\n\t          // same error.\n\t          loggedTypeFailures[error.message] = true;\n\n\t          var stack = getStack ? getStack() : '';\n\n\t          warning$1(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n\tvar checkPropTypes_1 = checkPropTypes;\n\n\tvar factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {\n\t  /* global Symbol */\n\t  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n\t  /**\n\t   * Returns the iterator method function contained on the iterable object.\n\t   *\n\t   * Be sure to invoke the function with the iterable as context:\n\t   *\n\t   *     var iteratorFn = getIteratorFn(myIterable);\n\t   *     if (iteratorFn) {\n\t   *       var iterator = iteratorFn.call(myIterable);\n\t   *       ...\n\t   *     }\n\t   *\n\t   * @param {?object} maybeIterable\n\t   * @return {?function}\n\t   */\n\t  function getIteratorFn(maybeIterable) {\n\t    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\n\t  /**\n\t   * Collection of methods that allow declaration and validation of props that are\n\t   * supplied to React components. Example usage:\n\t   *\n\t   *   var Props = require('ReactPropTypes');\n\t   *   var MyArticle = React.createClass({\n\t   *     propTypes: {\n\t   *       // An optional string prop named \"description\".\n\t   *       description: Props.string,\n\t   *\n\t   *       // A required enum prop named \"category\".\n\t   *       category: Props.oneOf(['News','Photos']).isRequired,\n\t   *\n\t   *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t   *       dialog: Props.instanceOf(Dialog).isRequired\n\t   *     },\n\t   *     render: function() { ... }\n\t   *   });\n\t   *\n\t   * A more formal specification of how these methods are used:\n\t   *\n\t   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t   *   decl := ReactPropTypes.{type}(.isRequired)?\n\t   *\n\t   * Each and every declaration produces a function with the same signature. This\n\t   * allows the creation of custom validation functions. For example:\n\t   *\n\t   *  var MyLink = React.createClass({\n\t   *    propTypes: {\n\t   *      // An optional string or URI prop named \"href\".\n\t   *      href: function(props, propName, componentName) {\n\t   *        var propValue = props[propName];\n\t   *        if (propValue != null && typeof propValue !== 'string' &&\n\t   *            !(propValue instanceof URI)) {\n\t   *          return new Error(\n\t   *            'Expected a string or an URI for ' + propName + ' in ' +\n\t   *            componentName\n\t   *          );\n\t   *        }\n\t   *      }\n\t   *    },\n\t   *    render: function() {...}\n\t   *  });\n\t   *\n\t   * @internal\n\t   */\n\n\t  var ANONYMOUS = '<<anonymous>>';\n\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\t  var ReactPropTypes = {\n\t    array: createPrimitiveTypeChecker('array'),\n\t    bool: createPrimitiveTypeChecker('boolean'),\n\t    func: createPrimitiveTypeChecker('function'),\n\t    number: createPrimitiveTypeChecker('number'),\n\t    object: createPrimitiveTypeChecker('object'),\n\t    string: createPrimitiveTypeChecker('string'),\n\t    symbol: createPrimitiveTypeChecker('symbol'),\n\n\t    any: createAnyTypeChecker(),\n\t    arrayOf: createArrayOfTypeChecker,\n\t    element: createElementTypeChecker(),\n\t    instanceOf: createInstanceTypeChecker,\n\t    node: createNodeChecker(),\n\t    objectOf: createObjectOfTypeChecker,\n\t    oneOf: createEnumTypeChecker,\n\t    oneOfType: createUnionTypeChecker,\n\t    shape: createShapeTypeChecker,\n\t    exact: createStrictShapeTypeChecker,\n\t  };\n\n\t  /**\n\t   * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t   */\n\t  /*eslint-disable no-self-compare*/\n\t  function is(x, y) {\n\t    // SameValue algorithm\n\t    if (x === y) {\n\t      // Steps 1-5, 7-10\n\t      // Steps 6.b-6.e: +0 != -0\n\t      return x !== 0 || 1 / x === 1 / y;\n\t    } else {\n\t      // Step 6.a: NaN == NaN\n\t      return x !== x && y !== y;\n\t    }\n\t  }\n\t  /*eslint-enable no-self-compare*/\n\n\t  /**\n\t   * We use an Error-like object for backward compatibility as people may call\n\t   * PropTypes directly and inspect their output. However, we don't use real\n\t   * Errors anymore. We don't inspect their stack anyway, and creating them\n\t   * is prohibitively expensive if they are created too often, such as what\n\t   * happens in oneOfType() for any type before the one that matched.\n\t   */\n\t  function PropTypeError(message) {\n\t    this.message = message;\n\t    this.stack = '';\n\t  }\n\t  // Make `instanceof Error` still work for returned errors.\n\t  PropTypeError.prototype = Error.prototype;\n\n\t  function createChainableTypeChecker(validate) {\n\t    {\n\t      var manualPropTypeCallCache = {};\n\t      var manualPropTypeWarningCount = 0;\n\t    }\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t      componentName = componentName || ANONYMOUS;\n\t      propFullName = propFullName || propName;\n\n\t      if (secret !== ReactPropTypesSecret_1) {\n\t        if (throwOnDirectAccess) {\n\t          // New behavior only for users of `prop-types` package\n\t          invariant_1(\n\t            false,\n\t            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t            'Use `PropTypes.checkPropTypes()` to call them. ' +\n\t            'Read more at http://fb.me/use-check-prop-types'\n\t          );\n\t        } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n\t          // Old behavior for people using React.PropTypes\n\t          var cacheKey = componentName + ':' + propName;\n\t          if (\n\t            !manualPropTypeCallCache[cacheKey] &&\n\t            // Avoid spamming the console because they are often not actionable except for lib authors\n\t            manualPropTypeWarningCount < 3\n\t          ) {\n\t            warning_1(\n\t              false,\n\t              'You are manually calling a React.PropTypes validation ' +\n\t              'function for the `%s` prop on `%s`. This is deprecated ' +\n\t              'and will throw in the standalone `prop-types` package. ' +\n\t              'You may be seeing this warning due to a third-party PropTypes ' +\n\t              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n\t              propFullName,\n\t              componentName\n\t            );\n\t            manualPropTypeCallCache[cacheKey] = true;\n\t            manualPropTypeWarningCount++;\n\t          }\n\t        }\n\t      }\n\t      if (props[propName] == null) {\n\t        if (isRequired) {\n\t          if (props[propName] === null) {\n\t            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n\t          }\n\t          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n\t        }\n\t        return null;\n\t      } else {\n\t        return validate(props, propName, componentName, location, propFullName);\n\t      }\n\t    }\n\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\n\t    return chainedCheckType;\n\t  }\n\n\t  function createPrimitiveTypeChecker(expectedType) {\n\t    function validate(props, propName, componentName, location, propFullName, secret) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== expectedType) {\n\t        // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t        // check, but we can offer a more precise error message here rather than\n\t        // 'of type `object`'.\n\t        var preciseType = getPreciseType(propValue);\n\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createAnyTypeChecker() {\n\t    return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);\n\t  }\n\n\t  function createArrayOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      if (!Array.isArray(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t      }\n\t      for (var i = 0; i < propValue.length; i++) {\n\t        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createElementTypeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      if (!isValidElement(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createInstanceTypeChecker(expectedClass) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!(props[propName] instanceof expectedClass)) {\n\t        var expectedClassName = expectedClass.name || ANONYMOUS;\n\t        var actualClassName = getClassName(props[propName]);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createEnumTypeChecker(expectedValues) {\n\t    if (!Array.isArray(expectedValues)) {\n\t      warning_1(false, 'Invalid argument supplied to oneOf, expected an instance of array.');\n\t      return emptyFunction_1.thatReturnsNull;\n\t    }\n\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      for (var i = 0; i < expectedValues.length; i++) {\n\t        if (is(propValue, expectedValues[i])) {\n\t          return null;\n\t        }\n\t      }\n\n\t      var valuesString = JSON.stringify(expectedValues);\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createObjectOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t      }\n\t      for (var key in propValue) {\n\t        if (propValue.hasOwnProperty(key)) {\n\t          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t          if (error instanceof Error) {\n\t            return error;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createUnionTypeChecker(arrayOfTypeCheckers) {\n\t    if (!Array.isArray(arrayOfTypeCheckers)) {\n\t      warning_1(false, 'Invalid argument supplied to oneOfType, expected an instance of array.');\n\t      return emptyFunction_1.thatReturnsNull;\n\t    }\n\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (typeof checker !== 'function') {\n\t        warning_1(\n\t          false,\n\t          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n\t          'received %s at index %s.',\n\t          getPostfixForTypeWarning(checker),\n\t          i\n\t        );\n\t        return emptyFunction_1.thatReturnsNull;\n\t      }\n\t    }\n\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t        var checker = arrayOfTypeCheckers[i];\n\t        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n\t          return null;\n\t        }\n\t      }\n\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createNodeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!isNode(props[propName])) {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      for (var key in shapeTypes) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          continue;\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createStrictShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      // We need to check all keys in case some are required but missing from\n\t      // props.\n\t      var allKeys = objectAssign({}, props[propName], shapeTypes);\n\t      for (var key in allKeys) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          return new PropTypeError(\n\t            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n\t            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n\t            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n\t          );\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function isNode(propValue) {\n\t    switch (typeof propValue) {\n\t      case 'number':\n\t      case 'string':\n\t      case 'undefined':\n\t        return true;\n\t      case 'boolean':\n\t        return !propValue;\n\t      case 'object':\n\t        if (Array.isArray(propValue)) {\n\t          return propValue.every(isNode);\n\t        }\n\t        if (propValue === null || isValidElement(propValue)) {\n\t          return true;\n\t        }\n\n\t        var iteratorFn = getIteratorFn(propValue);\n\t        if (iteratorFn) {\n\t          var iterator = iteratorFn.call(propValue);\n\t          var step;\n\t          if (iteratorFn !== propValue.entries) {\n\t            while (!(step = iterator.next()).done) {\n\t              if (!isNode(step.value)) {\n\t                return false;\n\t              }\n\t            }\n\t          } else {\n\t            // Iterator will provide entry [k,v] tuples rather than values.\n\t            while (!(step = iterator.next()).done) {\n\t              var entry = step.value;\n\t              if (entry) {\n\t                if (!isNode(entry[1])) {\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          return false;\n\t        }\n\n\t        return true;\n\t      default:\n\t        return false;\n\t    }\n\t  }\n\n\t  function isSymbol(propType, propValue) {\n\t    // Native Symbol.\n\t    if (propType === 'symbol') {\n\t      return true;\n\t    }\n\n\t    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t    if (propValue['@@toStringTag'] === 'Symbol') {\n\t      return true;\n\t    }\n\n\t    // Fallback for non-spec compliant Symbols which are polyfilled.\n\t    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\n\t  // Equivalent of `typeof` but with special handling for array and regexp.\n\t  function getPropType(propValue) {\n\t    var propType = typeof propValue;\n\t    if (Array.isArray(propValue)) {\n\t      return 'array';\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t      // Old webkits (at least until Android 4.0) return 'function' rather than\n\t      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t      // passes PropTypes.object.\n\t      return 'object';\n\t    }\n\t    if (isSymbol(propType, propValue)) {\n\t      return 'symbol';\n\t    }\n\t    return propType;\n\t  }\n\n\t  // This handles more types than `getPropType`. Only used for error messages.\n\t  // See `createPrimitiveTypeChecker`.\n\t  function getPreciseType(propValue) {\n\t    if (typeof propValue === 'undefined' || propValue === null) {\n\t      return '' + propValue;\n\t    }\n\t    var propType = getPropType(propValue);\n\t    if (propType === 'object') {\n\t      if (propValue instanceof Date) {\n\t        return 'date';\n\t      } else if (propValue instanceof RegExp) {\n\t        return 'regexp';\n\t      }\n\t    }\n\t    return propType;\n\t  }\n\n\t  // Returns a string that is postfixed to a warning about an invalid type.\n\t  // For example, \"undefined\" or \"of type array\"\n\t  function getPostfixForTypeWarning(value) {\n\t    var type = getPreciseType(value);\n\t    switch (type) {\n\t      case 'array':\n\t      case 'object':\n\t        return 'an ' + type;\n\t      case 'boolean':\n\t      case 'date':\n\t      case 'regexp':\n\t        return 'a ' + type;\n\t      default:\n\t        return type;\n\t    }\n\t  }\n\n\t  // Returns class name of the object, if any.\n\t  function getClassName(propValue) {\n\t    if (!propValue.constructor || !propValue.constructor.name) {\n\t      return ANONYMOUS;\n\t    }\n\t    return propValue.constructor.name;\n\t  }\n\n\t  ReactPropTypes.checkPropTypes = checkPropTypes_1;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\n\t  return ReactPropTypes;\n\t};\n\n\tvar propTypes = createCommonjsModule(function (module) {\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t{\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);\n\t}\n\t});\n\n\tvar classnames = createCommonjsModule(function (module) {\n\t/*!\n\t  Copyright (c) 2016 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\n\t(function () {\n\n\t\tvar hasOwn = {}.hasOwnProperty;\n\n\t\tfunction classNames () {\n\t\t\tvar classes = [];\n\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\n\t\t\t\tvar argType = typeof arg;\n\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses.push(arg);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn classes.join(' ');\n\t\t}\n\n\t\tif ('object' !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (false) {\n\t\t\t// register as 'classnames', consistent with npm package name\n\t\t\tundefined('classnames', [], function () {\n\t\t\t\treturn classNames;\n\t\t\t});\n\t\t} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t}());\n\t});\n\n\t// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\n\tfunction findInArray(array /*: Array<any> | TouchList*/, callback /*: Function*/) /*: any*/ {\n\t  for (var i = 0, length = array.length; i < length; i++) {\n\t    if (callback.apply(callback, [array[i], i, array])) return array[i];\n\t  }\n\t}\n\n\tfunction isFunction(func /*: any*/) /*: boolean*/ {\n\t  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n\t}\n\n\tfunction isNum(num /*: any*/) /*: boolean*/ {\n\t  return typeof num === 'number' && !isNaN(num);\n\t}\n\n\tfunction int(a /*: string*/) /*: number*/ {\n\t  return parseInt(a, 10);\n\t}\n\n\tfunction dontSetMe(props /*: Object*/, propName /*: string*/, componentName /*: string*/) {\n\t  if (props[propName]) {\n\t    return new Error('Invalid prop ' + propName + ' passed to ' + componentName + ' - do not set this, set it on the child.');\n\t  }\n\t}\n\n\tvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\tfunction getPrefix() /*: string*/ {\n\t  var prop /*: string*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n\t  // Checking specifically for 'window.document' is for pseudo-browser server-side\n\t  // environments that define 'window' as the global context.\n\t  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n\t  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n\n\t  var style = window.document.documentElement.style;\n\n\t  if (prop in style) return '';\n\n\t  for (var i = 0; i < prefixes.length; i++) {\n\t    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n\t  }\n\n\t  return '';\n\t}\n\n\tfunction browserPrefixToKey(prop /*: string*/, prefix /*: string*/) /*: string*/ {\n\t  return prefix ? '' + prefix + kebabToTitleCase(prop) : prop;\n\t}\n\n\tfunction kebabToTitleCase(str /*: string*/) /*: string*/ {\n\t  var out = '';\n\t  var shouldCapitalize = true;\n\t  for (var i = 0; i < str.length; i++) {\n\t    if (shouldCapitalize) {\n\t      out += str[i].toUpperCase();\n\t      shouldCapitalize = false;\n\t    } else if (str[i] === '-') {\n\t      shouldCapitalize = true;\n\t    } else {\n\t      out += str[i];\n\t    }\n\t  }\n\t  return out;\n\t}\n\n\t// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n\t// Note that you may have to re-test for certain things; for instance, Chrome 50\n\t// can handle unprefixed `transform`, but not unprefixed `user-select`\n\tvar browserPrefix = getPrefix();\n\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\n\tvar createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\n\tvar defineProperty = function (obj, key, value) {\n\t  if (key in obj) {\n\t    Object.defineProperty(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\n\t  return obj;\n\t};\n\n\tvar _extends = Object.assign || function (target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i];\n\n\t    for (var key in source) {\n\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  }\n\n\t  return target;\n\t};\n\n\tvar inherits = function (subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n\t  }\n\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t};\n\n\tvar possibleConstructorReturn = function (self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\n\t  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n\t};\n\n\tvar slicedToArray = function () {\n\t  function sliceIterator(arr, i) {\n\t    var _arr = [];\n\t    var _n = true;\n\t    var _d = false;\n\t    var _e = undefined;\n\n\t    try {\n\t      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n\t        _arr.push(_s.value);\n\n\t        if (i && _arr.length === i) break;\n\t      }\n\t    } catch (err) {\n\t      _d = true;\n\t      _e = err;\n\t    } finally {\n\t      try {\n\t        if (!_n && _i[\"return\"]) _i[\"return\"]();\n\t      } finally {\n\t        if (_d) throw _e;\n\t      }\n\t    }\n\n\t    return _arr;\n\t  }\n\n\t  return function (arr, i) {\n\t    if (Array.isArray(arr)) {\n\t      return arr;\n\t    } else if (Symbol.iterator in Object(arr)) {\n\t      return sliceIterator(arr, i);\n\t    } else {\n\t      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n\t    }\n\t  };\n\t}();\n\n\t/*:: import type {ControlPosition, MouseTouchEvent} from './types';*/\n\n\n\tvar matchesSelectorFunc = '';\n\tfunction matchesSelector(el /*: Node*/, selector /*: string*/) /*: boolean*/ {\n\t  if (!matchesSelectorFunc) {\n\t    matchesSelectorFunc = findInArray(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n\t      // $FlowIgnore: Doesn't think elements are indexable\n\t      return isFunction(el[method]);\n\t    });\n\t  }\n\n\t  // Might not be found entirely (not an Element?) - in that case, bail\n\t  // $FlowIgnore: Doesn't think elements are indexable\n\t  if (!isFunction(el[matchesSelectorFunc])) return false;\n\n\t  // $FlowIgnore: Doesn't think elements are indexable\n\t  return el[matchesSelectorFunc](selector);\n\t}\n\n\t// Works up the tree to the draggable itself attempting to match selector.\n\tfunction matchesSelectorAndParentsTo(el /*: Node*/, selector /*: string*/, baseNode /*: Node*/) /*: boolean*/ {\n\t  var node = el;\n\t  do {\n\t    if (matchesSelector(node, selector)) return true;\n\t    if (node === baseNode) return false;\n\t    node = node.parentNode;\n\t  } while (node);\n\n\t  return false;\n\t}\n\n\tfunction addEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {\n\t  if (!el) {\n\t    return;\n\t  }\n\t  if (el.attachEvent) {\n\t    el.attachEvent('on' + event, handler);\n\t  } else if (el.addEventListener) {\n\t    el.addEventListener(event, handler, true);\n\t  } else {\n\t    // $FlowIgnore: Doesn't think elements are indexable\n\t    el['on' + event] = handler;\n\t  }\n\t}\n\n\tfunction removeEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {\n\t  if (!el) {\n\t    return;\n\t  }\n\t  if (el.detachEvent) {\n\t    el.detachEvent('on' + event, handler);\n\t  } else if (el.removeEventListener) {\n\t    el.removeEventListener(event, handler, true);\n\t  } else {\n\t    // $FlowIgnore: Doesn't think elements are indexable\n\t    el['on' + event] = null;\n\t  }\n\t}\n\n\tfunction outerHeight(node /*: HTMLElement*/) /*: number*/ {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetTop which is including margin. See getBoundPosition\n\t  var height = node.clientHeight;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  height += int(computedStyle.borderTopWidth);\n\t  height += int(computedStyle.borderBottomWidth);\n\t  return height;\n\t}\n\n\tfunction outerWidth(node /*: HTMLElement*/) /*: number*/ {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetLeft which is including margin. See getBoundPosition\n\t  var width = node.clientWidth;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  width += int(computedStyle.borderLeftWidth);\n\t  width += int(computedStyle.borderRightWidth);\n\t  return width;\n\t}\n\tfunction innerHeight(node /*: HTMLElement*/) /*: number*/ {\n\t  var height = node.clientHeight;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  height -= int(computedStyle.paddingTop);\n\t  height -= int(computedStyle.paddingBottom);\n\t  return height;\n\t}\n\n\tfunction innerWidth(node /*: HTMLElement*/) /*: number*/ {\n\t  var width = node.clientWidth;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  width -= int(computedStyle.paddingLeft);\n\t  width -= int(computedStyle.paddingRight);\n\t  return width;\n\t}\n\n\t// Get from offsetParent\n\tfunction offsetXYFromParent(evt /*: {clientX: number, clientY: number}*/, offsetParent /*: HTMLElement*/) /*: ControlPosition*/ {\n\t  var isBody = offsetParent === offsetParent.ownerDocument.body;\n\t  var offsetParentRect = isBody ? { left: 0, top: 0 } : offsetParent.getBoundingClientRect();\n\n\t  var x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;\n\t  var y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;\n\n\t  return { x: x, y: y };\n\t}\n\n\tfunction createCSSTransform(_ref) /*: Object*/ {\n\t  var x = _ref.x,\n\t      y = _ref.y;\n\n\t  // Replace unitless items with px\n\t  return defineProperty({}, browserPrefixToKey('transform', browserPrefix), 'translate(' + x + 'px,' + y + 'px)');\n\t}\n\n\tfunction createSVGTransform(_ref3) /*: string*/ {\n\t  var x = _ref3.x,\n\t      y = _ref3.y;\n\n\t  return 'translate(' + x + ',' + y + ')';\n\t}\n\n\tfunction getTouch(e /*: MouseTouchEvent*/, identifier /*: number*/) /*: ?{clientX: number, clientY: number}*/ {\n\t  return e.targetTouches && findInArray(e.targetTouches, function (t) {\n\t    return identifier === t.identifier;\n\t  }) || e.changedTouches && findInArray(e.changedTouches, function (t) {\n\t    return identifier === t.identifier;\n\t  });\n\t}\n\n\tfunction getTouchIdentifier(e /*: MouseTouchEvent*/) /*: ?number*/ {\n\t  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n\t  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n\t}\n\n\t// User-select Hacks:\n\t//\n\t// Useful for preventing blue highlights all over everything when dragging.\n\n\t// Note we're passing `document` b/c we could be iframed\n\tfunction addUserSelectStyles(doc /*: ?Document*/) {\n\t  if (!doc) return;\n\t  var styleEl = doc.getElementById('react-draggable-style-el');\n\t  if (!styleEl) {\n\t    styleEl = doc.createElement('style');\n\t    styleEl.type = 'text/css';\n\t    styleEl.id = 'react-draggable-style-el';\n\t    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {background: transparent;}\\n';\n\t    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {background: transparent;}\\n';\n\t    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n\t  }\n\t  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n\t}\n\n\tfunction removeUserSelectStyles(doc /*: ?Document*/) {\n\t  try {\n\t    if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n\t    // $FlowIgnore: IE\n\t    if (doc.selection) {\n\t      // $FlowIgnore: IE\n\t      doc.selection.empty();\n\t    } else {\n\t      window.getSelection().removeAllRanges(); // remove selection caused by scroll\n\t    }\n\t  } catch (e) {\n\t    // probably IE\n\t  }\n\t}\n\n\tfunction styleHacks() /*: Object*/ {\n\t  var childStyle /*: Object*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t  // Workaround IE pointer events; see #51\n\t  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n\t  return _extends({\n\t    touchAction: 'none'\n\t  }, childStyle);\n\t}\n\n\tfunction addClassName(el /*: HTMLElement*/, className /*: string*/) {\n\t  if (el.classList) {\n\t    el.classList.add(className);\n\t  } else {\n\t    if (!el.className.match(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)'))) {\n\t      el.className += ' ' + className;\n\t    }\n\t  }\n\t}\n\n\tfunction removeClassName(el /*: HTMLElement*/, className /*: string*/) {\n\t  if (el.classList) {\n\t    el.classList.remove(className);\n\t  } else {\n\t    el.className = el.className.replace(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)', 'g'), '');\n\t  }\n\t}\n\n\t/*:: import type Draggable from '../Draggable';*/\n\t/*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n\t/*:: import type DraggableCore from '../DraggableCore';*/\n\n\n\tfunction getBoundPosition(draggable /*: Draggable*/, x /*: number*/, y /*: number*/) /*: [number, number]*/ {\n\t  // If no bounds, short-circuit and move on\n\t  if (!draggable.props.bounds) return [x, y];\n\n\t  // Clone new bounds\n\t  var bounds = draggable.props.bounds;\n\n\t  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n\t  var node = findDOMNode(draggable);\n\n\t  if (typeof bounds === 'string') {\n\t    var ownerDocument = node.ownerDocument;\n\n\t    var ownerWindow = ownerDocument.defaultView;\n\t    var boundNode = void 0;\n\t    if (bounds === 'parent') {\n\t      boundNode = node.parentNode;\n\t    } else {\n\t      boundNode = ownerDocument.querySelector(bounds);\n\t    }\n\t    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n\t      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n\t    }\n\t    var nodeStyle = ownerWindow.getComputedStyle(node);\n\t    var boundNodeStyle = ownerWindow.getComputedStyle(boundNode);\n\t    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\t    bounds = {\n\t      left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) + int(nodeStyle.marginLeft),\n\t      top: -node.offsetTop + int(boundNodeStyle.paddingTop) + int(nodeStyle.marginTop),\n\t      right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft + int(boundNodeStyle.paddingRight) - int(nodeStyle.marginRight),\n\t      bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop + int(boundNodeStyle.paddingBottom) - int(nodeStyle.marginBottom)\n\t    };\n\t  }\n\n\t  // Keep x and y below right and bottom limits...\n\t  if (isNum(bounds.right)) x = Math.min(x, bounds.right);\n\t  if (isNum(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n\t  // But above left and top limits.\n\t  if (isNum(bounds.left)) x = Math.max(x, bounds.left);\n\t  if (isNum(bounds.top)) y = Math.max(y, bounds.top);\n\n\t  return [x, y];\n\t}\n\n\tfunction snapToGrid(grid /*: [number, number]*/, pendingX /*: number*/, pendingY /*: number*/) /*: [number, number]*/ {\n\t  var x = Math.round(pendingX / grid[0]) * grid[0];\n\t  var y = Math.round(pendingY / grid[1]) * grid[1];\n\t  return [x, y];\n\t}\n\n\tfunction canDragX(draggable /*: Draggable*/) /*: boolean*/ {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n\t}\n\n\tfunction canDragY(draggable /*: Draggable*/) /*: boolean*/ {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n\t}\n\n\t// Get {x, y} positions from event.\n\tfunction getControlPosition(e /*: MouseTouchEvent*/, touchIdentifier /*: ?number*/, draggableCore /*: DraggableCore*/) /*: ?ControlPosition*/ {\n\t  var touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\n\t  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\t  var node = findDOMNode(draggableCore);\n\t  // User can provide an offsetParent if desired.\n\t  var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n\t  return offsetXYFromParent(touchObj || e, offsetParent);\n\t}\n\n\t// Create an data object exposed by <DraggableCore>'s events\n\tfunction createCoreData(draggable /*: DraggableCore*/, x /*: number*/, y /*: number*/) /*: DraggableData*/ {\n\t  var state = draggable.state;\n\t  var isStart = !isNum(state.lastX);\n\t  var node = findDOMNode(draggable);\n\n\t  if (isStart) {\n\t    // If this is our first move, use the x and y as last coords.\n\t    return {\n\t      node: node,\n\t      deltaX: 0, deltaY: 0,\n\t      lastX: x, lastY: y,\n\t      x: x, y: y\n\t    };\n\t  } else {\n\t    // Otherwise calculate proper values.\n\t    return {\n\t      node: node,\n\t      deltaX: x - state.lastX, deltaY: y - state.lastY,\n\t      lastX: state.lastX, lastY: state.lastY,\n\t      x: x, y: y\n\t    };\n\t  }\n\t}\n\n\t// Create an data exposed by <Draggable>'s events\n\tfunction createDraggableData(draggable /*: Draggable*/, coreData /*: DraggableData*/) /*: DraggableData*/ {\n\t  var scale = draggable.props.scale;\n\t  return {\n\t    node: coreData.node,\n\t    x: draggable.state.x + coreData.deltaX / scale,\n\t    y: draggable.state.y + coreData.deltaY / scale,\n\t    deltaX: coreData.deltaX / scale,\n\t    deltaY: coreData.deltaY / scale,\n\t    lastX: draggable.state.x,\n\t    lastY: draggable.state.y\n\t  };\n\t}\n\n\t// A lot faster than stringify/parse\n\tfunction cloneBounds(bounds /*: Bounds*/) /*: Bounds*/ {\n\t  return {\n\t    left: bounds.left,\n\t    top: bounds.top,\n\t    right: bounds.right,\n\t    bottom: bounds.bottom\n\t  };\n\t}\n\n\tfunction findDOMNode(draggable /*: Draggable | DraggableCore*/) /*: HTMLElement*/ {\n\t  var node = ReactDOM.findDOMNode(draggable);\n\t  if (!node) {\n\t    throw new Error('<DraggableCore>: Unmounted during event!');\n\t  }\n\t  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\t  return node;\n\t}\n\n\t/*eslint no-console:0*/\n\tfunction log() {\n\t}\n\n\t/*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n\n\n\t// Simple abstraction for dragging events names.\n\t/*:: import type {Element as ReactElement} from 'react';*/\n\tvar eventsFor = {\n\t  touch: {\n\t    start: 'touchstart',\n\t    move: 'touchmove',\n\t    stop: 'touchend'\n\t  },\n\t  mouse: {\n\t    start: 'mousedown',\n\t    move: 'mousemove',\n\t    stop: 'mouseup'\n\t  }\n\t};\n\n\t// Default to mouse events.\n\tvar dragEventFor = eventsFor.mouse;\n\n\t/*:: type DraggableCoreState = {\n\t  dragging: boolean,\n\t  lastX: number,\n\t  lastY: number,\n\t  touchIdentifier: ?number\n\t};*/\n\t/*:: export type DraggableBounds = {\n\t  left: number,\n\t  right: number,\n\t  top: number,\n\t  bottom: number,\n\t};*/\n\t/*:: export type DraggableData = {\n\t  node: HTMLElement,\n\t  x: number, y: number,\n\t  deltaX: number, deltaY: number,\n\t  lastX: number, lastY: number,\n\t};*/\n\t/*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;*/\n\t/*:: export type ControlPosition = {x: number, y: number};*/\n\n\n\t//\n\t// Define <DraggableCore>.\n\t//\n\t// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n\t// work well with libraries that require more control over the element.\n\t//\n\n\t/*:: export type DraggableCoreProps = {\n\t  allowAnyClick: boolean,\n\t  cancel: string,\n\t  children: ReactElement<any>,\n\t  disabled: boolean,\n\t  enableUserSelectHack: boolean,\n\t  offsetParent: HTMLElement,\n\t  grid: [number, number],\n\t  handle: string,\n\t  onStart: DraggableEventHandler,\n\t  onDrag: DraggableEventHandler,\n\t  onStop: DraggableEventHandler,\n\t  onMouseDown: (e: MouseEvent) => void,\n\t};*/\n\n\tvar DraggableCore = function (_React$Component) {\n\t  inherits(DraggableCore, _React$Component);\n\n\t  function DraggableCore() {\n\t    var _ref;\n\n\t    var _temp, _this, _ret;\n\n\t    classCallCheck(this, DraggableCore);\n\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\n\t    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DraggableCore.__proto__ || Object.getPrototypeOf(DraggableCore)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n\t      dragging: false,\n\t      // Used while dragging to determine deltas.\n\t      lastX: NaN, lastY: NaN,\n\t      touchIdentifier: null\n\t    }, _this.handleDragStart = function (e) {\n\t      // Make it possible to attach event handlers on top of this one.\n\t      _this.props.onMouseDown(e);\n\n\t      // Only accept left-clicks.\n\t      if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n\t      // Get nodes. Be sure to grab relative document (could be iframed)\n\t      var thisNode = ReactDOM.findDOMNode(_this);\n\t      if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n\t        throw new Error('<DraggableCore> not mounted on DragStart!');\n\t      }\n\t      var ownerDocument = thisNode.ownerDocument;\n\n\t      // Short circuit if handle or cancel prop was provided and selector doesn't match.\n\n\t      if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !matchesSelectorAndParentsTo(e.target, _this.props.handle, thisNode) || _this.props.cancel && matchesSelectorAndParentsTo(e.target, _this.props.cancel, thisNode)) {\n\t        return;\n\t      }\n\n\t      // Set touch identifier in component state if this is a touch event. This allows us to\n\t      // distinguish between individual touches on multitouch screens by identifying which\n\t      // touchpoint was set to this element.\n\t      var touchIdentifier = getTouchIdentifier(e);\n\t      _this.setState({ touchIdentifier: touchIdentifier });\n\n\t      // Get the current drag point from the event. This is used as the offset.\n\t      var position = getControlPosition(e, touchIdentifier, _this);\n\t      if (position == null) return; // not possible but satisfies flow\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      // Create an event object with all the data parents need to make a decision here.\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      // Call event handler. If it returns explicit false, cancel.\n\t      log('calling', _this.props.onStart);\n\t      var shouldUpdate = _this.props.onStart(e, coreEvent);\n\t      if (shouldUpdate === false) return;\n\n\t      // Add a style to the body to disable user-select. This prevents text from\n\t      // being selected all over the page.\n\t      if (_this.props.enableUserSelectHack) addUserSelectStyles(ownerDocument);\n\n\t      // Initiate dragging. Set the current x and y as offsets\n\t      // so we know how much we've moved during the drag. This allows us\n\t      // to drag elements around even if they have been moved, without issue.\n\t      _this.setState({\n\t        dragging: true,\n\n\t        lastX: x,\n\t        lastY: y\n\t      });\n\n\t      // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n\t      // this element. We use different events depending on whether or not we have detected that this\n\t      // is a touch-capable device.\n\t      addEvent(ownerDocument, dragEventFor.move, _this.handleDrag);\n\t      addEvent(ownerDocument, dragEventFor.stop, _this.handleDragStop);\n\t    }, _this.handleDrag = function (e) {\n\n\t      // Prevent scrolling on mobile devices, like ipad/iphone.\n\t      if (e.type === 'touchmove') e.preventDefault();\n\n\t      // Get the current drag point from the event. This is used as the offset.\n\t      var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n\t      if (position == null) return;\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      // Snap to grid if prop has been provided\n\n\t      if (Array.isArray(_this.props.grid)) {\n\t        var _deltaX = x - _this.state.lastX,\n\t            _deltaY = y - _this.state.lastY;\n\n\t        var _snapToGrid = snapToGrid(_this.props.grid, _deltaX, _deltaY);\n\n\t        var _snapToGrid2 = slicedToArray(_snapToGrid, 2);\n\n\t        _deltaX = _snapToGrid2[0];\n\t        _deltaY = _snapToGrid2[1];\n\n\t        if (!_deltaX && !_deltaY) return; // skip useless drag\n\t        x = _this.state.lastX + _deltaX, y = _this.state.lastY + _deltaY;\n\t      }\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      // Call event handler. If it returns explicit false, trigger end.\n\t      var shouldUpdate = _this.props.onDrag(e, coreEvent);\n\t      if (shouldUpdate === false) {\n\t        try {\n\t          // $FlowIgnore\n\t          _this.handleDragStop(new MouseEvent('mouseup'));\n\t        } catch (err) {\n\t          // Old browsers\n\t          var event = ((document.createEvent('MouseEvents') /*: any*/) /*: MouseTouchEvent*/);\n\t          // I see why this insanity was deprecated\n\t          // $FlowIgnore\n\t          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\t          _this.handleDragStop(event);\n\t        }\n\t        return;\n\t      }\n\n\t      _this.setState({\n\t        lastX: x,\n\t        lastY: y\n\t      });\n\t    }, _this.handleDragStop = function (e) {\n\t      if (!_this.state.dragging) return;\n\n\t      var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n\t      if (position == null) return;\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      var thisNode = ReactDOM.findDOMNode(_this);\n\t      if (thisNode) {\n\t        // Remove user-select hack\n\t        if (_this.props.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\n\t      }\n\n\t      // Reset the el.\n\t      _this.setState({\n\t        dragging: false,\n\t        lastX: NaN,\n\t        lastY: NaN\n\t      });\n\n\t      // Call event handler\n\t      _this.props.onStop(e, coreEvent);\n\n\t      if (thisNode) {\n\t        removeEvent(thisNode.ownerDocument, dragEventFor.move, _this.handleDrag);\n\t        removeEvent(thisNode.ownerDocument, dragEventFor.stop, _this.handleDragStop);\n\t      }\n\t    }, _this.onMouseDown = function (e) {\n\t      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n\t      return _this.handleDragStart(e);\n\t    }, _this.onMouseUp = function (e) {\n\t      dragEventFor = eventsFor.mouse;\n\n\t      return _this.handleDragStop(e);\n\t    }, _this.onTouchStart = function (e) {\n\t      // We're on a touch device now, so change the event handlers\n\t      dragEventFor = eventsFor.touch;\n\n\t      return _this.handleDragStart(e);\n\t    }, _this.onTouchEnd = function (e) {\n\t      // We're on a touch device now, so change the event handlers\n\t      dragEventFor = eventsFor.touch;\n\n\t      return _this.handleDragStop(e);\n\t    }, _temp), possibleConstructorReturn(_this, _ret);\n\t  }\n\n\t  createClass(DraggableCore, [{\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n\t      // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n\t      var thisNode = ReactDOM.findDOMNode(this);\n\t      if (thisNode) {\n\t        var ownerDocument = thisNode.ownerDocument;\n\n\t        removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n\t        removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\n\t        removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n\t        removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n\t        if (this.props.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\n\t      }\n\t    }\n\n\t    // Same as onMouseDown (start drag), but now consider this a touch device.\n\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Reuse the child provided\n\t      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t      return React.cloneElement(React.Children.only(this.props.children), {\n\t        style: styleHacks(this.props.children.props.style),\n\n\t        // Note: mouseMove handler is attached to document so it will still function\n\t        // when the user drags quickly and leaves the bounds of the element.\n\t        onMouseDown: this.onMouseDown,\n\t        onTouchStart: this.onTouchStart,\n\t        onMouseUp: this.onMouseUp,\n\t        onTouchEnd: this.onTouchEnd\n\t      });\n\t    }\n\t  }]);\n\t  return DraggableCore;\n\t}(React.Component);\n\n\tDraggableCore.displayName = 'DraggableCore';\n\tDraggableCore.propTypes = {\n\t  /**\n\t   * `allowAnyClick` allows dragging using any mouse button.\n\t   * By default, we only accept the left button.\n\t   *\n\t   * Defaults to `false`.\n\t   */\n\t  allowAnyClick: propTypes.bool,\n\n\t  /**\n\t   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n\t   * with the exception of `onMouseDown`, will not fire.\n\t   */\n\t  disabled: propTypes.bool,\n\n\t  /**\n\t   * By default, we add 'user-select:none' attributes to the document body\n\t   * to prevent ugly text selection during drag. If this is causing problems\n\t   * for your app, set this to `false`.\n\t   */\n\t  enableUserSelectHack: propTypes.bool,\n\n\t  /**\n\t   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n\t   * instead of using the parent node.\n\t   */\n\t  offsetParent: function offsetParent(props /*: DraggableCoreProps*/, propName /*: $Keys<DraggableCoreProps>*/) {\n\t    if (props[propName] && props[propName].nodeType !== 1) {\n\t      throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n\t    }\n\t  },\n\n\t  /**\n\t   * `grid` specifies the x and y that dragging should snap to.\n\t   */\n\t  grid: propTypes.arrayOf(propTypes.number),\n\n\t  /**\n\t   * `scale` specifies the scale of the area you are dragging inside of. It allows\n\t   * the drag deltas to scale correctly with how far zoomed in/out you are.\n\t   */\n\t  scale: propTypes.number,\n\n\t  /**\n\t   * `handle` specifies a selector to be used as the handle that initiates drag.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *         return (\n\t   *            <Draggable handle=\".handle\">\n\t   *              <div>\n\t   *                  <div className=\"handle\">Click me to drag</div>\n\t   *                  <div>This is some other content</div>\n\t   *              </div>\n\t   *           </Draggable>\n\t   *         );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  handle: propTypes.string,\n\n\t  /**\n\t   * `cancel` specifies a selector to be used to prevent drag initialization.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *           return(\n\t   *               <Draggable cancel=\".cancel\">\n\t   *                   <div>\n\t   *                     <div className=\"cancel\">You can't drag from here</div>\n\t   *                     <div>Dragging here works fine</div>\n\t   *                   </div>\n\t   *               </Draggable>\n\t   *           );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  cancel: propTypes.string,\n\n\t  /**\n\t   * Called when dragging starts.\n\t   * If this function returns the boolean false, dragging will be canceled.\n\t   */\n\t  onStart: propTypes.func,\n\n\t  /**\n\t   * Called while dragging.\n\t   * If this function returns the boolean false, dragging will be canceled.\n\t   */\n\t  onDrag: propTypes.func,\n\n\t  /**\n\t   * Called when dragging stops.\n\t   * If this function returns the boolean false, the drag will remain active.\n\t   */\n\t  onStop: propTypes.func,\n\n\t  /**\n\t   * A workaround option which can be passed if onMouseDown needs to be accessed,\n\t   * since it'll always be blocked (as there is internal use of onMouseDown)\n\t   */\n\t  onMouseDown: propTypes.func,\n\n\t  /**\n\t   * These properties should be defined on the child, not here.\n\t   */\n\t  className: dontSetMe,\n\t  style: dontSetMe,\n\t  transform: dontSetMe\n\t};\n\tDraggableCore.defaultProps = {\n\t  allowAnyClick: false, // by default only accept left click\n\t  cancel: null,\n\t  disabled: false,\n\t  enableUserSelectHack: true,\n\t  offsetParent: null,\n\t  handle: null,\n\t  grid: null,\n\t  transform: null,\n\t  onStart: function onStart() {},\n\t  onDrag: function onDrag() {},\n\t  onStop: function onStop() {},\n\t  onMouseDown: function onMouseDown() {}\n\t};\n\n\t/*:: import type {DraggableEventHandler} from './utils/types';*/\n\t/*:: import type {Element as ReactElement} from 'react';*/\n\t/*:: type DraggableState = {\n\t  dragging: boolean,\n\t  dragged: boolean,\n\t  x: number, y: number,\n\t  slackX: number, slackY: number,\n\t  isElementSVG: boolean\n\t};*/\n\n\n\t//\n\t// Define <Draggable>\n\t//\n\n\t/*:: export type DraggableProps = {\n\t  ...$Exact<DraggableCoreProps>,\n\t  axis: 'both' | 'x' | 'y' | 'none',\n\t  bounds: DraggableBounds | string | false,\n\t  defaultClassName: string,\n\t  defaultClassNameDragging: string,\n\t  defaultClassNameDragged: string,\n\t  defaultPosition: ControlPosition,\n\t  position: ControlPosition,\n\t  scale: number\n\t};*/\n\n\tvar Draggable = function (_React$Component) {\n\t  inherits(Draggable, _React$Component);\n\n\t  function Draggable(props /*: DraggableProps*/) {\n\t    classCallCheck(this, Draggable);\n\n\t    var _this = possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this, props));\n\n\t    _this.onDragStart = function (e, coreData) {\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldStart = _this.props.onStart(e, createDraggableData(_this, coreData));\n\t      // Kills start event on core as well, so move handlers are never bound.\n\t      if (shouldStart === false) return false;\n\n\t      _this.setState({ dragging: true, dragged: true });\n\t    };\n\n\t    _this.onDrag = function (e, coreData) {\n\t      if (!_this.state.dragging) return false;\n\n\t      var uiData = createDraggableData(_this, coreData);\n\n\t      var newState /*: $Shape<DraggableState>*/ = {\n\t        x: uiData.x,\n\t        y: uiData.y\n\t      };\n\n\t      // Keep within bounds.\n\t      if (_this.props.bounds) {\n\t        // Save original x and y.\n\t        var _x = newState.x,\n\t            _y = newState.y;\n\n\t        // Add slack to the values used to calculate bound position. This will ensure that if\n\t        // we start removing slack, the element won't react to it right away until it's been\n\t        // completely removed.\n\n\t        newState.x += _this.state.slackX;\n\t        newState.y += _this.state.slackY;\n\n\t        // Get bound position. This will ceil/floor the x and y within the boundaries.\n\n\t        var _getBoundPosition = getBoundPosition(_this, newState.x, newState.y),\n\t            _getBoundPosition2 = slicedToArray(_getBoundPosition, 2),\n\t            newStateX = _getBoundPosition2[0],\n\t            newStateY = _getBoundPosition2[1];\n\n\t        newState.x = newStateX;\n\t        newState.y = newStateY;\n\n\t        // Recalculate slack by noting how much was shaved by the boundPosition handler.\n\t        newState.slackX = _this.state.slackX + (_x - newState.x);\n\t        newState.slackY = _this.state.slackY + (_y - newState.y);\n\n\t        // Update the event we fire to reflect what really happened after bounds took effect.\n\t        uiData.x = newState.x;\n\t        uiData.y = newState.y;\n\t        uiData.deltaX = newState.x - _this.state.x;\n\t        uiData.deltaY = newState.y - _this.state.y;\n\t      }\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldUpdate = _this.props.onDrag(e, uiData);\n\t      if (shouldUpdate === false) return false;\n\n\t      _this.setState(newState);\n\t    };\n\n\t    _this.onDragStop = function (e, coreData) {\n\t      if (!_this.state.dragging) return false;\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldStop = _this.props.onStop(e, createDraggableData(_this, coreData));\n\t      if (shouldStop === false) return false;\n\n\t      var newState /*: $Shape<DraggableState>*/ = {\n\t        dragging: false,\n\t        slackX: 0,\n\t        slackY: 0\n\t      };\n\n\t      // If this is a controlled component, the result of this operation will be to\n\t      // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n\t      var controlled = Boolean(_this.props.position);\n\t      if (controlled) {\n\t        var _this$props$position = _this.props.position,\n\t            _x2 = _this$props$position.x,\n\t            _y2 = _this$props$position.y;\n\n\t        newState.x = _x2;\n\t        newState.y = _y2;\n\t      }\n\n\t      _this.setState(newState);\n\t    };\n\n\t    _this.state = {\n\t      // Whether or not we are currently dragging.\n\t      dragging: false,\n\n\t      // Whether or not we have been dragged before.\n\t      dragged: false,\n\n\t      // Current transform x and y.\n\t      x: props.position ? props.position.x : props.defaultPosition.x,\n\t      y: props.position ? props.position.y : props.defaultPosition.y,\n\n\t      // Used for compensating for out-of-bounds drags\n\t      slackX: 0, slackY: 0,\n\n\t      // Can only determine if SVG after mounting\n\t      isElementSVG: false\n\t    };\n\t    return _this;\n\t  }\n\n\t  createClass(Draggable, [{\n\t    key: 'componentWillMount',\n\t    value: function componentWillMount() {\n\t      if (this.props.position && !(this.props.onDrag || this.props.onStop)) {\n\t        // eslint-disable-next-line\n\t        console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      // Check to see if the element passed is an instanceof SVGElement\n\t      if (typeof window.SVGElement !== 'undefined' && ReactDOM.findDOMNode(this) instanceof window.SVGElement) {\n\t        this.setState({ isElementSVG: true });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps /*: Object*/) {\n\t      // Set x/y if position has changed\n\t      if (nextProps.position && (!this.props.position || nextProps.position.x !== this.props.position.x || nextProps.position.y !== this.props.position.y)) {\n\t        this.setState({ x: nextProps.position.x, y: nextProps.position.y });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.setState({ dragging: false }); // prevents invariant if unmounted while dragging\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() /*: ReactElement<any>*/ {\n\t      var _classNames;\n\n\t      var style = {},\n\t          svgTransform = null;\n\n\t      // If this is controlled, we don't want to move it - unless it's dragging.\n\t      var controlled = Boolean(this.props.position);\n\t      var draggable = !controlled || this.state.dragging;\n\n\t      var position = this.props.position || this.props.defaultPosition;\n\t      var transformOpts = {\n\t        // Set left if horizontal drag is enabled\n\t        x: canDragX(this) && draggable ? this.state.x : position.x,\n\n\t        // Set top if vertical drag is enabled\n\t        y: canDragY(this) && draggable ? this.state.y : position.y\n\t      };\n\n\t      // If this element was SVG, we use the `transform` attribute.\n\t      if (this.state.isElementSVG) {\n\t        svgTransform = createSVGTransform(transformOpts);\n\t      } else {\n\t        // Add a CSS transform to move the element around. This allows us to move the element around\n\t        // without worrying about whether or not it is relatively or absolutely positioned.\n\t        // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n\t        // has a clean slate.\n\t        style = createCSSTransform(transformOpts);\n\t      }\n\n\t      var _props = this.props,\n\t          defaultClassName = _props.defaultClassName,\n\t          defaultClassNameDragging = _props.defaultClassNameDragging,\n\t          defaultClassNameDragged = _props.defaultClassNameDragged;\n\n\n\t      var children = React.Children.only(this.props.children);\n\n\t      // Mark with class while dragging\n\t      var className = classnames(children.props.className || '', defaultClassName, (_classNames = {}, defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames));\n\n\t      // Reuse the child provided\n\t      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t      return React.createElement(\n\t        DraggableCore,\n\t        _extends({}, this.props, { onStart: this.onDragStart, onDrag: this.onDrag, onStop: this.onDragStop }),\n\t        React.cloneElement(children, {\n\t          className: className,\n\t          style: _extends({}, children.props.style, style),\n\t          transform: svgTransform\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t  return Draggable;\n\t}(React.Component);\n\n\tDraggable.displayName = 'Draggable';\n\tDraggable.propTypes = _extends({}, DraggableCore.propTypes, {\n\n\t  /**\n\t   * `axis` determines which axis the draggable can move.\n\t   *\n\t   *  Note that all callbacks will still return data as normal. This only\n\t   *  controls flushing to the DOM.\n\t   *\n\t   * 'both' allows movement horizontally and vertically.\n\t   * 'x' limits movement to horizontal axis.\n\t   * 'y' limits movement to vertical axis.\n\t   * 'none' limits all movement.\n\t   *\n\t   * Defaults to 'both'.\n\t   */\n\t  axis: propTypes.oneOf(['both', 'x', 'y', 'none']),\n\n\t  /**\n\t   * `bounds` determines the range of movement available to the element.\n\t   * Available values are:\n\t   *\n\t   * 'parent' restricts movement within the Draggable's parent node.\n\t   *\n\t   * Alternatively, pass an object with the following properties, all of which are optional:\n\t   *\n\t   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n\t   *\n\t   * All values are in px.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *         return (\n\t   *            <Draggable bounds={{right: 300, bottom: 300}}>\n\t   *              <div>Content</div>\n\t   *           </Draggable>\n\t   *         );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  bounds: propTypes.oneOfType([propTypes.shape({\n\t    left: propTypes.number,\n\t    right: propTypes.number,\n\t    top: propTypes.number,\n\t    bottom: propTypes.number\n\t  }), propTypes.string, propTypes.oneOf([false])]),\n\n\t  defaultClassName: propTypes.string,\n\t  defaultClassNameDragging: propTypes.string,\n\t  defaultClassNameDragged: propTypes.string,\n\n\t  /**\n\t   * `defaultPosition` specifies the x and y that the dragged item should start at\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *      let App = React.createClass({\n\t   *          render: function () {\n\t   *              return (\n\t   *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n\t   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n\t   *                  </Draggable>\n\t   *              );\n\t   *          }\n\t   *      });\n\t   * ```\n\t   */\n\t  defaultPosition: propTypes.shape({\n\t    x: propTypes.number,\n\t    y: propTypes.number\n\t  }),\n\n\t  /**\n\t   * `position`, if present, defines the current position of the element.\n\t   *\n\t   *  This is similar to how form elements in React work - if no `position` is supplied, the component\n\t   *  is uncontrolled.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *      let App = React.createClass({\n\t   *          render: function () {\n\t   *              return (\n\t   *                  <Draggable position={{x: 25, y: 25}}>\n\t   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n\t   *                  </Draggable>\n\t   *              );\n\t   *          }\n\t   *      });\n\t   * ```\n\t   */\n\t  position: propTypes.shape({\n\t    x: propTypes.number,\n\t    y: propTypes.number\n\t  }),\n\n\t  /**\n\t   * These properties should be defined on the child, not here.\n\t   */\n\t  className: dontSetMe,\n\t  style: dontSetMe,\n\t  transform: dontSetMe\n\t});\n\tDraggable.defaultProps = _extends({}, DraggableCore.defaultProps, {\n\t  axis: 'both',\n\t  bounds: false,\n\t  defaultClassName: 'react-draggable',\n\t  defaultClassNameDragging: 'react-draggable-dragging',\n\t  defaultClassNameDragged: 'react-draggable-dragged',\n\t  defaultPosition: { x: 0, y: 0 },\n\t  position: null,\n\t  scale: 1\n\t});\n\n\t// Previous versions of this lib exported <Draggable> as the root export. As to not break\n\t// them, or TypeScript, we export *both* as the root and as 'default'.\n\t// See https://github.com/mzabriskie/react-draggable/pull/254\n\t// and https://github.com/mzabriskie/react-draggable/issues/266\n\tDraggable.default = Draggable;\n\tDraggable.DraggableCore = DraggableCore;\n\n\treturn Draggable;\n\n})));\n//# sourceMappingURL=react-draggable.js.map\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDraggable = __webpack_require__(6);\n\nvar _cloneElement = __webpack_require__(17);\n\nvar _cloneElement2 = _interopRequireDefault(_cloneElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Resizable = function (_React$Component) {\n  _inherits(Resizable, _React$Component);\n\n  function Resizable() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Resizable);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      resizing: false,\n      width: _this.props.width, height: _this.props.height,\n      slackW: 0, slackH: 0\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Resizable.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // If parent changes height/width, set that in our state.\n    if (!this.state.resizing && (nextProps.width !== this.props.width || nextProps.height !== this.props.height)) {\n      this.setState({\n        width: nextProps.width,\n        height: nextProps.height\n      });\n    }\n  };\n\n  Resizable.prototype.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  };\n\n  // If you do this, be careful of constraints\n\n\n  Resizable.prototype.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n\n\n    if (this.props.lockAspectRatio) {\n      var ratio = this.state.width / this.state.height;\n      height = width / ratio;\n      width = height * ratio;\n    }\n\n    if (!min && !max) return [width, height];\n\n    var oldW = width,\n        oldH = height;\n\n    // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _state = this.state,\n        slackW = _state.slackW,\n        slackH = _state.slackH;\n\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    }\n\n    // If the numbers changed, we must have introduced some slack. Record it for the next iteration.\n    slackW += oldW - width;\n    slackH += oldH - height;\n    if (slackW !== this.state.slackW || slackH !== this.state.slackH) {\n      this.setState({ slackW: slackW, slackH: slackH });\n    }\n\n    return [width, height];\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  Resizable.prototype.resizeHandler = function resizeHandler(handlerName) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n\n\n      // Axis restrictions\n      var canDragX = _this2.props.axis === 'both' || _this2.props.axis === 'x';\n      var canDragY = _this2.props.axis === 'both' || _this2.props.axis === 'y';\n\n      // Update w/h\n      var width = _this2.state.width + (canDragX ? deltaX : 0);\n      var height = _this2.state.height + (canDragY ? deltaY : 0);\n\n      // Early return if no change\n      var widthChanged = width !== _this2.state.width,\n          heightChanged = height !== _this2.state.height;\n      if (handlerName === 'onResize' && !widthChanged && !heightChanged) return;\n\n      // Set the appropriate state for this handler.\n      var _runConstraints = _this2.runConstraints(width, height);\n\n      width = _runConstraints[0];\n      height = _runConstraints[1];\n      var newState = {};\n      if (handlerName === 'onResizeStart') {\n        newState.resizing = true;\n      } else if (handlerName === 'onResizeStop') {\n        newState.resizing = false;\n        newState.slackW = newState.slackH = 0;\n      } else {\n        // Early return if no change after constraints\n        if (width === _this2.state.width && height === _this2.state.height) return;\n        newState.width = width;\n        newState.height = height;\n      }\n\n      var hasCb = typeof _this2.props[handlerName] === 'function';\n      if (hasCb) {\n        if (typeof e.persist === 'function') e.persist();\n        _this2.setState(newState, function () {\n          return _this2.props[handlerName](e, { node: node, size: { width: width, height: height } });\n        });\n      } else {\n        _this2.setState(newState);\n      }\n    };\n  };\n\n  Resizable.prototype.render = function render() {\n    // eslint-disable-next-line no-unused-vars\n    var _props = this.props,\n        children = _props.children,\n        draggableOpts = _props.draggableOpts,\n        width = _props.width,\n        height = _props.height,\n        handleSize = _props.handleSize,\n        lockAspectRatio = _props.lockAspectRatio,\n        axis = _props.axis,\n        minConstraints = _props.minConstraints,\n        maxConstraints = _props.maxConstraints,\n        onResize = _props.onResize,\n        onResizeStop = _props.onResizeStop,\n        onResizeStart = _props.onResizeStart,\n        p = _objectWithoutProperties(_props, ['children', 'draggableOpts', 'width', 'height', 'handleSize', 'lockAspectRatio', 'axis', 'minConstraints', 'maxConstraints', 'onResize', 'onResizeStop', 'onResizeStart']);\n\n    var className = p.className ? p.className + ' react-resizable' : 'react-resizable';\n\n    // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // A draggable handle.\n    return (0, _cloneElement2.default)(children, _extends({}, p, {\n      className: className,\n      children: [children.props.children, _react2.default.createElement(\n        _reactDraggable.DraggableCore,\n        _extends({}, draggableOpts, {\n          key: 'resizableHandle',\n          onStop: this.resizeHandler('onResizeStop'),\n          onStart: this.resizeHandler('onResizeStart'),\n          onDrag: this.resizeHandler('onResize')\n        }),\n        _react2.default.createElement('span', { className: 'react-resizable-handle' })\n      )]\n    }));\n  };\n\n  return Resizable;\n}(_react2.default.Component);\n\nResizable.propTypes = {\n  //\n  // Required Props\n  //\n\n  // Require that one and only one child be present.\n  children: _propTypes2.default.element.isRequired,\n\n  // Initial w/h\n  width: _propTypes2.default.number.isRequired,\n  height: _propTypes2.default.number.isRequired,\n\n  //\n  // Optional props\n  //\n\n  // If you change this, be sure to update your css\n  handleSize: _propTypes2.default.array,\n\n  // If true, will only allow width/height to move in lockstep\n  lockAspectRatio: _propTypes2.default.bool,\n\n  // Restricts resizing to a particular axis (default: 'both')\n  // 'both' - allows resizing by width or height\n  // 'x' - only allows the width to be changed\n  // 'y' - only allows the height to be changed\n  // 'none' - disables resizing altogether\n  axis: _propTypes2.default.oneOf(['both', 'x', 'y', 'none']),\n\n  // Min/max size\n  minConstraints: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  maxConstraints: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\n  // Callbacks\n  onResizeStop: _propTypes2.default.func,\n  onResizeStart: _propTypes2.default.func,\n  onResize: _propTypes2.default.func,\n\n  // These will be passed wholesale to react-draggable's DraggableCore\n  draggableOpts: _propTypes2.default.object\n};\nResizable.defaultProps = {\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  axis: 'both',\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity]\n};\nexports.default = Resizable;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getBreakpointFromWidth = getBreakpointFromWidth;\nexports.getColsFromBreakpoint = getColsFromBreakpoint;\nexports.findOrGenerateResponsiveLayout = findOrGenerateResponsiveLayout;\nexports.sortBreakpoints = sortBreakpoints;\n\nvar _utils = __webpack_require__(2);\n\n/**\n * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\n *\n * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\n * @param  {Number} width Screen width.\n * @return {String}       Highest breakpoint that is less than width.\n */\nfunction getBreakpointFromWidth(breakpoints, width) {\n  var sorted = sortBreakpoints(breakpoints);\n  var matching = sorted[0];\n  for (var i = 1, len = sorted.length; i < len; i++) {\n    var breakpointName = sorted[i];\n    if (width > breakpoints[breakpointName]) matching = breakpointName;\n  }\n  return matching;\n}\n\n/**\n * Given a breakpoint, get the # of cols set for it.\n * @param  {String} breakpoint Breakpoint name.\n * @param  {Object} cols       Map of breakpoints to cols.\n * @return {Number}            Number of cols.\n */\n\n\nfunction getColsFromBreakpoint(breakpoint, cols) {\n  if (!cols[breakpoint]) {\n    throw new Error(\"ResponsiveReactGridLayout: `cols` entry for breakpoint \" + breakpoint + \" is missing!\");\n  }\n  return cols[breakpoint];\n}\n\n/**\n * Given existing layouts and a new breakpoint, find or generate a new layout.\n *\n * This finds the layout above the new one and generates from it, if it exists.\n *\n * @param  {Object} layouts     Existing layouts.\n * @param  {Array} breakpoints All breakpoints.\n * @param  {String} breakpoint New breakpoint.\n * @param  {String} breakpoint Last breakpoint (for fallback).\n * @param  {Number} cols       Column count at new breakpoint.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}             New layout.\n */\nfunction findOrGenerateResponsiveLayout(layouts, breakpoints, breakpoint, lastBreakpoint, cols, compactType) {\n  // If it already exists, just return it.\n  if (layouts[breakpoint]) return (0, _utils.cloneLayout)(layouts[breakpoint]);\n  // Find or generate the next layout\n  var layout = layouts[lastBreakpoint];\n  var breakpointsSorted = sortBreakpoints(breakpoints);\n  var breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));\n  for (var i = 0, len = breakpointsAbove.length; i < len; i++) {\n    var b = breakpointsAbove[i];\n    if (layouts[b]) {\n      layout = layouts[b];\n      break;\n    }\n  }\n  layout = (0, _utils.cloneLayout)(layout || []); // clone layout so we don't modify existing items\n  return (0, _utils.compact)((0, _utils.correctBounds)(layout, { cols: cols }), compactType, cols);\n}\n\n/**\n * Given breakpoints, return an array of breakpoints sorted by width. This is usually\n * e.g. ['xxs', 'xs', 'sm', ...]\n *\n * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.\n * @return {Array}              Sorted breakpoints.\n */\nfunction sortBreakpoints(breakpoints) {\n  var keys = Object.keys(breakpoints);\n  return keys.sort(function (a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(4).default;\nmodule.exports.utils = __webpack_require__(2);\nmodule.exports.Responsive = __webpack_require__(19).default;\nmodule.exports.Responsive.utils = __webpack_require__(9);\nmodule.exports.WidthProvider = __webpack_require__(20).default;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(12);\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDraggable = __webpack_require__(6);\n\nvar _reactResizable = __webpack_require__(16);\n\nvar _utils = __webpack_require__(2);\n\nvar _classnames = __webpack_require__(5);\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * An individual item within a ReactGridLayout.\n */\nvar GridItem = function (_React$Component) {\n  _inherits(GridItem, _React$Component);\n\n  function GridItem() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GridItem);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      resizing: null,\n      dragging: null,\n      className: \"\"\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // Helper for generating column width\n  GridItem.prototype.calcColWidth = function calcColWidth() {\n    var _props = this.props,\n        margin = _props.margin,\n        containerPadding = _props.containerPadding,\n        containerWidth = _props.containerWidth,\n        cols = _props.cols;\n\n    return (containerWidth - margin[0] * (cols - 1) - containerPadding[0] * 2) / cols;\n  };\n\n  /**\n   * Return position on the page given an x, y, w, h.\n   * left, top, width, height are all in pixels.\n   * @param  {Number}  x             X coordinate in grid units.\n   * @param  {Number}  y             Y coordinate in grid units.\n   * @param  {Number}  w             W coordinate in grid units.\n   * @param  {Number}  h             H coordinate in grid units.\n   * @return {Object}                Object containing coords.\n   */\n\n\n  GridItem.prototype.calcPosition = function calcPosition(x, y, w, h, state) {\n    var _props2 = this.props,\n        margin = _props2.margin,\n        containerPadding = _props2.containerPadding,\n        rowHeight = _props2.rowHeight;\n\n    var colWidth = this.calcColWidth();\n\n    var out = {\n      left: Math.round((colWidth + margin[0]) * x + containerPadding[0]),\n      top: Math.round((rowHeight + margin[1]) * y + containerPadding[1]),\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\n      // Fix this if it occurs.\n      // Note we do it here rather than later because Math.round(Infinity) causes deopt\n      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * margin[0]),\n      height: h === Infinity ? h : Math.round(rowHeight * h + Math.max(0, h - 1) * margin[1])\n    };\n\n    if (state && state.resizing) {\n      out.width = Math.round(state.resizing.width);\n      out.height = Math.round(state.resizing.height);\n    }\n\n    if (state && state.dragging) {\n      out.top = Math.round(state.dragging.top);\n      out.left = Math.round(state.dragging.left);\n    }\n\n    return out;\n  };\n\n  /**\n   * Translate x and y coordinates from pixels to grid units.\n   * @param  {Number} top  Top position (relative to parent) in pixels.\n   * @param  {Number} left Left position (relative to parent) in pixels.\n   * @return {Object} x and y in grid units.\n   */\n\n\n  GridItem.prototype.calcXY = function calcXY(top, left) {\n    var _props3 = this.props,\n        margin = _props3.margin,\n        cols = _props3.cols,\n        rowHeight = _props3.rowHeight,\n        w = _props3.w,\n        h = _props3.h,\n        maxRows = _props3.maxRows;\n\n    var colWidth = this.calcColWidth();\n\n    // left = colWidth * x + margin * (x + 1)\n    // l = cx + m(x+1)\n    // l = cx + mx + m\n    // l - m = cx + mx\n    // l - m = x(c + m)\n    // (l - m) / (c + m) = x\n    // x = (left - margin) / (coldWidth + margin)\n    var x = Math.round((left - margin[0]) / (colWidth + margin[0]));\n    var y = Math.round((top - margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    x = Math.max(Math.min(x, cols - w), 0);\n    y = Math.max(Math.min(y, maxRows - h), 0);\n\n    return { x: x, y: y };\n  };\n\n  /**\n   * Given a height and width in pixel values, calculate grid units.\n   * @param  {Number} height Height in pixels.\n   * @param  {Number} width  Width in pixels.\n   * @return {Object} w, h as grid units.\n   */\n\n\n  GridItem.prototype.calcWH = function calcWH(_ref) {\n    var height = _ref.height,\n        width = _ref.width;\n    var _props4 = this.props,\n        margin = _props4.margin,\n        maxRows = _props4.maxRows,\n        cols = _props4.cols,\n        rowHeight = _props4.rowHeight,\n        x = _props4.x,\n        y = _props4.y;\n\n    var colWidth = this.calcColWidth();\n\n    // width = colWidth * w - (margin * (w - 1))\n    // ...\n    // w = (width + margin) / (colWidth + margin)\n    var w = Math.round((width + margin[0]) / (colWidth + margin[0]));\n    var h = Math.round((height + margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    w = Math.max(Math.min(w, cols - x), 0);\n    h = Math.max(Math.min(h, maxRows - y), 0);\n    return { w: w, h: h };\n  };\n\n  /**\n   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\n   * we don't know exactly what the browser viewport is.\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\n   *\n   * @param  {Object} pos Position object with width, height, left, top.\n   * @return {Object}     Style object.\n   */\n\n\n  GridItem.prototype.createStyle = function createStyle(pos) {\n    var _props5 = this.props,\n        usePercentages = _props5.usePercentages,\n        containerWidth = _props5.containerWidth,\n        useCSSTransforms = _props5.useCSSTransforms;\n\n\n    var style = void 0;\n    // CSS Transforms support (default)\n    if (useCSSTransforms) {\n      style = (0, _utils.setTransform)(pos);\n    } else {\n      // top,left (slow)\n      style = (0, _utils.setTopLeft)(pos);\n\n      // This is used for server rendering.\n      if (usePercentages) {\n        style.left = (0, _utils.perc)(pos.left / containerWidth);\n        style.width = (0, _utils.perc)(pos.width / containerWidth);\n      }\n    }\n\n    return style;\n  };\n\n  /**\n   * Mix a Draggable instance into a child.\n   * @param  {Element} child    Child element.\n   * @return {Element}          Child wrapped in Draggable.\n   */\n\n\n  GridItem.prototype.mixinDraggable = function mixinDraggable(child) {\n    return _react2.default.createElement(\n      _reactDraggable.DraggableCore,\n      {\n        onStart: this.onDragHandler(\"onDragStart\"),\n        onDrag: this.onDragHandler(\"onDrag\"),\n        onStop: this.onDragHandler(\"onDragStop\"),\n        handle: this.props.handle,\n        cancel: \".react-resizable-handle\" + (this.props.cancel ? \",\" + this.props.cancel : \"\")\n      },\n      child\n    );\n  };\n\n  /**\n   * Mix a Resizable instance into a child.\n   * @param  {Element} child    Child element.\n   * @param  {Object} position  Position object (pixel values)\n   * @return {Element}          Child wrapped in Resizable.\n   */\n\n\n  GridItem.prototype.mixinResizable = function mixinResizable(child, position) {\n    var _props6 = this.props,\n        cols = _props6.cols,\n        x = _props6.x,\n        minW = _props6.minW,\n        minH = _props6.minH,\n        maxW = _props6.maxW,\n        maxH = _props6.maxH;\n\n    // This is the max possible width - doesn't go to infinity because of the width of the window\n\n    var maxWidth = this.calcPosition(0, 0, cols - x, 0).width;\n\n    // Calculate min/max constraints using our min & maxes\n    var mins = this.calcPosition(0, 0, minW, minH);\n    var maxes = this.calcPosition(0, 0, maxW, maxH);\n    var minConstraints = [mins.width, mins.height];\n    var maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];\n    return _react2.default.createElement(\n      _reactResizable.Resizable,\n      {\n        width: position.width,\n        height: position.height,\n        minConstraints: minConstraints,\n        maxConstraints: maxConstraints,\n        onResizeStop: this.onResizeHandler(\"onResizeStop\"),\n        onResizeStart: this.onResizeHandler(\"onResizeStart\"),\n        onResize: this.onResizeHandler(\"onResize\")\n      },\n      child\n    );\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  GridItem.prototype.onDragHandler = function onDragHandler(handlerName) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n\n      var handler = _this2.props[handlerName];\n      if (!handler) return;\n\n      var newPosition = { top: 0, left: 0 };\n\n      // Get new XY\n      switch (handlerName) {\n        case \"onDragStart\":\n          {\n            // TODO: this wont work on nested parents\n            var offsetParent = node.offsetParent;\n\n            if (!offsetParent) return;\n            var parentRect = offsetParent.getBoundingClientRect();\n            var clientRect = node.getBoundingClientRect();\n            newPosition.left = clientRect.left - parentRect.left + offsetParent.scrollLeft;\n            newPosition.top = clientRect.top - parentRect.top + offsetParent.scrollTop;\n            _this2.setState({ dragging: newPosition });\n            break;\n          }\n        case \"onDrag\":\n          if (!_this2.state.dragging) throw new Error(\"onDrag called before onDragStart.\");\n          newPosition.left = _this2.state.dragging.left + deltaX;\n          newPosition.top = _this2.state.dragging.top + deltaY;\n          _this2.setState({ dragging: newPosition });\n          break;\n        case \"onDragStop\":\n          if (!_this2.state.dragging) throw new Error(\"onDragEnd called before onDragStart.\");\n          newPosition.left = _this2.state.dragging.left;\n          newPosition.top = _this2.state.dragging.top;\n          _this2.setState({ dragging: null });\n          break;\n        default:\n          throw new Error(\"onDragHandler called with unrecognized handlerName: \" + handlerName);\n      }\n\n      var _calcXY = _this2.calcXY(newPosition.top, newPosition.left),\n          x = _calcXY.x,\n          y = _calcXY.y;\n\n      return handler.call(_this2, _this2.props.i, x, y, { e: e, node: node, newPosition: newPosition });\n    };\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  GridItem.prototype.onResizeHandler = function onResizeHandler(handlerName) {\n    var _this3 = this;\n\n    return function (e, _ref3) {\n      var node = _ref3.node,\n          size = _ref3.size;\n\n      var handler = _this3.props[handlerName];\n      if (!handler) return;\n      var _props7 = _this3.props,\n          cols = _props7.cols,\n          x = _props7.x,\n          i = _props7.i,\n          maxW = _props7.maxW,\n          minW = _props7.minW,\n          maxH = _props7.maxH,\n          minH = _props7.minH;\n\n      // Get new XY\n\n      var _calcWH = _this3.calcWH(size),\n          w = _calcWH.w,\n          h = _calcWH.h;\n\n      // Cap w at numCols\n\n\n      w = Math.min(w, cols - x);\n      // Ensure w is at least 1\n      w = Math.max(w, 1);\n\n      // Min/max capping\n      w = Math.max(Math.min(w, maxW), minW);\n      h = Math.max(Math.min(h, maxH), minH);\n\n      _this3.setState({ resizing: handlerName === \"onResizeStop\" ? null : size });\n\n      handler.call(_this3, i, w, h, { e: e, node: node, size: size });\n    };\n  };\n\n  GridItem.prototype.render = function render() {\n    var _props8 = this.props,\n        x = _props8.x,\n        y = _props8.y,\n        w = _props8.w,\n        h = _props8.h,\n        isDraggable = _props8.isDraggable,\n        isResizable = _props8.isResizable,\n        useCSSTransforms = _props8.useCSSTransforms;\n\n\n    var pos = this.calcPosition(x, y, w, h, this.state);\n    var child = _react2.default.Children.only(this.props.children);\n\n    // Create the child element. We clone the existing element but modify its className and style.\n    var newChild = _react2.default.cloneElement(child, {\n      className: (0, _classnames2.default)(\"react-grid-item\", child.props.className, this.props.className, {\n        static: this.props.static,\n        resizing: Boolean(this.state.resizing),\n        \"react-draggable\": isDraggable,\n        \"react-draggable-dragging\": Boolean(this.state.dragging),\n        cssTransforms: useCSSTransforms\n      }),\n      // We can set the width and height on the child, but unfortunately we can't set the position.\n      style: _extends({}, this.props.style, child.props.style, this.createStyle(pos))\n    });\n\n    // Resizable support. This is usually on but the user can toggle it off.\n    if (isResizable) newChild = this.mixinResizable(newChild, pos);\n\n    // Draggable support. This is always on, except for with placeholders.\n    if (isDraggable) newChild = this.mixinDraggable(newChild);\n\n    return newChild;\n  };\n\n  return GridItem;\n}(_react2.default.Component);\n\nGridItem.propTypes = {\n  // Children must be only a single element\n  children: _propTypes2.default.element,\n\n  // General grid attributes\n  cols: _propTypes2.default.number.isRequired,\n  containerWidth: _propTypes2.default.number.isRequired,\n  rowHeight: _propTypes2.default.number.isRequired,\n  margin: _propTypes2.default.array.isRequired,\n  maxRows: _propTypes2.default.number.isRequired,\n  containerPadding: _propTypes2.default.array.isRequired,\n\n  // These are all in grid units\n  x: _propTypes2.default.number.isRequired,\n  y: _propTypes2.default.number.isRequired,\n  w: _propTypes2.default.number.isRequired,\n  h: _propTypes2.default.number.isRequired,\n\n  // All optional\n  minW: function minW(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minWidth not Number\");\n    if (value > props.w || value > props.maxW) return new Error(\"minWidth larger than item width/maxWidth\");\n  },\n\n  maxW: function maxW(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxWidth not Number\");\n    if (value < props.w || value < props.minW) return new Error(\"maxWidth smaller than item width/minWidth\");\n  },\n\n  minH: function minH(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minHeight not Number\");\n    if (value > props.h || value > props.maxH) return new Error(\"minHeight larger than item height/maxHeight\");\n  },\n\n  maxH: function maxH(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxHeight not Number\");\n    if (value < props.h || value < props.minH) return new Error(\"maxHeight smaller than item height/minHeight\");\n  },\n\n  // ID is nice to have for callbacks\n  i: _propTypes2.default.string.isRequired,\n\n  // Functions\n  onDragStop: _propTypes2.default.func,\n  onDragStart: _propTypes2.default.func,\n  onDrag: _propTypes2.default.func,\n  onResizeStop: _propTypes2.default.func,\n  onResizeStart: _propTypes2.default.func,\n  onResize: _propTypes2.default.func,\n\n  // Flags\n  isDraggable: _propTypes2.default.bool.isRequired,\n  isResizable: _propTypes2.default.bool.isRequired,\n  static: _propTypes2.default.bool,\n\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes2.default.bool.isRequired,\n\n  // Others\n  className: _propTypes2.default.string,\n  // Selector for draggable handle\n  handle: _propTypes2.default.string,\n  // Selector for draggable cancel (see react-draggable)\n  cancel: _propTypes2.default.string\n};\nGridItem.defaultProps = {\n  className: \"\",\n  cancel: \"\",\n  handle: \"\",\n  minH: 1,\n  minW: 1,\n  maxH: Infinity,\n  maxW: Infinity\n};\nexports.default = GridItem;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = function() {\n  throw new Error(\"Don't instantiate Resizable directly! Use require('react-resizable').Resizable\");\n};\n\nmodule.exports.Resizable = __webpack_require__(8).default;\nmodule.exports.ResizableBox = __webpack_require__(18).default;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// React.addons.cloneWithProps look-alike that merges style & className.\nmodule.exports = function cloneElement(element, props) {\n  if (props.style && element.props.style) {\n    props.style = _extends({}, element.props.style, props.style);\n  }\n  if (props.className && element.props.className) {\n    props.className = element.props.className + ' ' + props.className;\n  }\n  return _react2.default.cloneElement(element, props);\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Resizable = __webpack_require__(8);\n\nvar _Resizable2 = _interopRequireDefault(_Resizable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// An example use of Resizable.\nvar ResizableBox = function (_React$Component) {\n  _inherits(ResizableBox, _React$Component);\n\n  function ResizableBox() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResizableBox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      width: _this.props.width,\n      height: _this.props.height\n    }, _this.onResize = function (e, data) {\n      var size = data.size;\n      var width = size.width,\n          height = size.height;\n\n\n      if (_this.props.onResize) {\n        e.persist && e.persist();\n        _this.setState(size, function () {\n          return _this.props.onResize && _this.props.onResize(e, data);\n        });\n      } else {\n        _this.setState(size);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ResizableBox.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.setState({\n        width: nextProps.width,\n        height: nextProps.height\n      });\n    }\n  };\n\n  ResizableBox.prototype.render = function render() {\n    // Basic wrapper around a Resizable instance.\n    // If you use Resizable directly, you are responsible for updating the child component\n    // with a new width and height.\n    var _props = this.props,\n        handleSize = _props.handleSize,\n        onResize = _props.onResize,\n        onResizeStart = _props.onResizeStart,\n        onResizeStop = _props.onResizeStop,\n        draggableOpts = _props.draggableOpts,\n        minConstraints = _props.minConstraints,\n        maxConstraints = _props.maxConstraints,\n        lockAspectRatio = _props.lockAspectRatio,\n        axis = _props.axis,\n        width = _props.width,\n        height = _props.height,\n        props = _objectWithoutProperties(_props, ['handleSize', 'onResize', 'onResizeStart', 'onResizeStop', 'draggableOpts', 'minConstraints', 'maxConstraints', 'lockAspectRatio', 'axis', 'width', 'height']);\n\n    return _react2.default.createElement(\n      _Resizable2.default,\n      {\n        handleSize: handleSize,\n        width: this.state.width,\n        height: this.state.height,\n        onResizeStart: onResizeStart,\n        onResize: this.onResize,\n        onResizeStop: onResizeStop,\n        draggableOpts: draggableOpts,\n        minConstraints: minConstraints,\n        maxConstraints: maxConstraints,\n        lockAspectRatio: lockAspectRatio,\n        axis: axis\n      },\n      _react2.default.createElement('div', _extends({ style: { width: this.state.width + 'px', height: this.state.height + 'px' } }, props))\n    );\n  };\n\n  return ResizableBox;\n}(_react2.default.Component);\n\nResizableBox.propTypes = {\n  height: _propTypes2.default.number,\n  width: _propTypes2.default.number\n};\nResizableBox.defaultProps = {\n  handleSize: [20, 20]\n};\nexports.default = ResizableBox;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = __webpack_require__(3);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = __webpack_require__(2);\n\nvar _responsiveUtils = __webpack_require__(9);\n\nvar _ReactGridLayout = __webpack_require__(4);\n\nvar _ReactGridLayout2 = _interopRequireDefault(_ReactGridLayout);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar type = function type(obj) {\n  return Object.prototype.toString.call(obj);\n};\n\nvar ResponsiveReactGridLayout = function (_React$Component) {\n  _inherits(ResponsiveReactGridLayout, _React$Component);\n\n  function ResponsiveReactGridLayout() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResponsiveReactGridLayout);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = _this.generateInitialState(), _this.onLayoutChange = function (layout) {\n      var _extends2;\n\n      _this.props.onLayoutChange(layout, _extends({}, _this.props.layouts, (_extends2 = {}, _extends2[_this.state.breakpoint] = layout, _extends2)));\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  // This should only include propTypes needed in this code; RGL itself\n  // will do validation of the rest props passed to it.\n\n\n  ResponsiveReactGridLayout.prototype.generateInitialState = function generateInitialState() {\n    var _props = this.props,\n        width = _props.width,\n        breakpoints = _props.breakpoints,\n        layouts = _props.layouts,\n        cols = _props.cols;\n\n    var breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    var colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    var compactType = this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    var initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  };\n\n  ResponsiveReactGridLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // Allow parent to set width or breakpoint directly.\n    if (nextProps.width != this.props.width || nextProps.breakpoint !== this.props.breakpoint || !(0, _lodash2.default)(nextProps.breakpoints, this.props.breakpoints) || !(0, _lodash2.default)(nextProps.cols, this.props.cols)) {\n      this.onWidthChange(nextProps);\n    } else if (!(0, _lodash2.default)(nextProps.layouts, this.props.layouts)) {\n      // Allow parent to set layouts directly.\n      var _state = this.state,\n          _breakpoint = _state.breakpoint,\n          _cols = _state.cols;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n\n      var newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, _breakpoint, _breakpoint, _cols, nextProps.compactType);\n      this.setState({ layout: newLayout });\n    }\n  };\n\n  // wrap layouts so we do not need to pass layouts to child\n\n\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  ResponsiveReactGridLayout.prototype.onWidthChange = function onWidthChange(nextProps) {\n    var breakpoints = nextProps.breakpoints,\n        cols = nextProps.cols,\n        layouts = nextProps.layouts,\n        compactType = nextProps.compactType;\n\n    var newBreakpoint = nextProps.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(nextProps.breakpoints, nextProps.width);\n\n    var lastBreakpoint = this.state.breakpoint;\n    var newCols = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || this.props.breakpoints !== breakpoints || this.props.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in layouts)) layouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      var _layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType);\n\n      // This adds missing items.\n      _layout = (0, _utils.synchronizeLayoutWithChildren)(_layout, nextProps.children, newCols, compactType);\n\n      // Store the new layout.\n      layouts[newBreakpoint] = _layout;\n\n      // callbacks\n      this.props.onLayoutChange(_layout, layouts);\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: _layout,\n        cols: newCols\n      });\n    }\n    //call onWidthChange on every change of width, not only on breakpoint changes\n    this.props.onWidthChange(nextProps.width, nextProps.margin, newCols, nextProps.containerPadding);\n  };\n\n  ResponsiveReactGridLayout.prototype.render = function render() {\n    /* eslint-disable no-unused-vars */\n    var _props2 = this.props,\n        breakpoint = _props2.breakpoint,\n        breakpoints = _props2.breakpoints,\n        cols = _props2.cols,\n        layouts = _props2.layouts,\n        onBreakpointChange = _props2.onBreakpointChange,\n        onLayoutChange = _props2.onLayoutChange,\n        onWidthChange = _props2.onWidthChange,\n        other = _objectWithoutProperties(_props2, [\"breakpoint\", \"breakpoints\", \"cols\", \"layouts\", \"onBreakpointChange\", \"onLayoutChange\", \"onWidthChange\"]);\n    /* eslint-enable no-unused-vars */\n\n    return _react2.default.createElement(_ReactGridLayout2.default, _extends({}, other, {\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  };\n\n  return ResponsiveReactGridLayout;\n}(_react2.default.Component);\n\nResponsiveReactGridLayout.propTypes = {\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes2.default.string,\n\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes2.default.object,\n\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes2.default.object,\n\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts: function layouts(props, propName) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(function (key) {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n\n\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes2.default.number.isRequired,\n\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes2.default.func,\n\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes2.default.func,\n\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes2.default.func\n};\nResponsiveReactGridLayout.defaultProps = {\n  breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n  cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n  layouts: {},\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n};\nexports.default = ResponsiveReactGridLayout;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = WidthProvider;\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = __webpack_require__(7);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\n * A simple HOC that provides facility for listening to container resizes.\n */\nfunction WidthProvider(ComposedComponent) {\n  var _class, _temp2;\n\n  return _temp2 = _class = function (_React$Component) {\n    _inherits(WidthProvider, _React$Component);\n\n    function WidthProvider() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, WidthProvider);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n        width: 1280\n      }, _this.mounted = false, _this.onWindowResize = function () {\n        if (!_this.mounted) return;\n        // eslint-disable-next-line\n        var node = _reactDom2.default.findDOMNode(_this); // Flow casts this to Text | Element\n        if (node instanceof HTMLElement) _this.setState({ width: node.offsetWidth });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    WidthProvider.prototype.componentDidMount = function componentDidMount() {\n      this.mounted = true;\n\n      window.addEventListener(\"resize\", this.onWindowResize);\n      // Call to properly set the breakpoint and resize the elements.\n      // Note that if you're doing a full-width element, this can get a little wonky if a scrollbar\n      // appears because of the grid. In that case, fire your own resize event, or set `overflow: scroll` on your body.\n      this.onWindowResize();\n    };\n\n    WidthProvider.prototype.componentWillUnmount = function componentWillUnmount() {\n      this.mounted = false;\n      window.removeEventListener(\"resize\", this.onWindowResize);\n    };\n\n    WidthProvider.prototype.render = function render() {\n      var _props = this.props,\n          measureBeforeMount = _props.measureBeforeMount,\n          rest = _objectWithoutProperties(_props, [\"measureBeforeMount\"]);\n\n      if (measureBeforeMount && !this.mounted) {\n        return _react2.default.createElement(\"div\", { className: this.props.className, style: this.props.style });\n      }\n\n      return _react2.default.createElement(ComposedComponent, _extends({}, rest, this.state));\n    };\n\n    return WidthProvider;\n  }(_react2.default.Component), _class.defaultProps = {\n    measureBeforeMount: false\n  }, _class.propTypes = {\n    // If true, will not render children until mounted. Useful for getting the exact width before\n    // rendering, to prevent any unsightly resizing.\n    measureBeforeMount: _propTypes2.default.bool\n  }, _temp2;\n}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// react-grid-layout.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e0b524d27a6d997735ca","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}\n// module id = 0\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = 1\n// module chunks = 0","// @flow\nimport isEqual from \"lodash.isequal\";\nimport React from \"react\";\nimport type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";\nexport type LayoutItem = {\n  w: number,\n  h: number,\n  x: number,\n  y: number,\n  i: string,\n  minW?: number,\n  minH?: number,\n  maxW?: number,\n  maxH?: number,\n  moved?: boolean,\n  static?: boolean,\n  isDraggable?: ?boolean,\n  isResizable?: ?boolean,\n  nested?: ?boolean,\n  items?: ?Array<LayoutItem>,\n  nestedHeight?: ?number\n};\nexport type Layout = Array<LayoutItem>;\nexport type Position = {\n  left: number,\n  top: number,\n  width: number,\n  height: number\n};\nexport type ReactDraggableCallbackData = {\n  node: HTMLElement,\n  x: number,\n  y: number,\n  deltaX: number,\n  deltaY: number,\n  lastX: number,\n  lastY: number\n};\n\nexport type PartialPosition = { left: number, top: number };\nexport type Size = { width: number, height: number };\nexport type GridDragEvent = {\n  e: Event,\n  node: HTMLElement,\n  newPosition: PartialPosition\n};\nexport type GridResizeEvent = { e: Event, node: HTMLElement, size: Size };\n\ntype REl = ReactElement<any>;\nexport type ReactChildren = ReactChildrenArray<REl>;\n\n// All callbacks are of the signature (layout, oldItem, newItem, placeholder, e).\nexport type EventCallback = (\n  Layout,\n  oldItem: ?LayoutItem,\n  newItem: ?LayoutItem,\n  placeholder: ?LayoutItem,\n  Event,\n  ?HTMLElement\n) => void;\nexport type CompactType = ?(\"horizontal\" | \"vertical\");\n\nconst isProduction = process.env.NODE_ENV === \"production\";\nconst DEBUG = false;\n\n/**\n * Return the bottom coordinate of the layout.\n *\n * @param  {Array} layout Layout array.\n * @return {Number}       Bottom coordinate.\n */\nexport function bottom(layout: Layout): number {\n  let max = 0,\n    bottomY;\n  for (let i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h;\n    if (bottomY > max) max = bottomY;\n  }\n  return max;\n}\n\nexport function cloneLayout(layout: Layout): Layout {\n  const newLayout = Array(layout.length);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    newLayout[i] = cloneLayoutItem(layout[i]);\n  }\n  return newLayout;\n}\n\n// Fast path to cloning, since this is monomorphic\nexport function cloneLayoutItem(layoutItem: LayoutItem): LayoutItem {\n  const {\n    w,\n    h,\n    x,\n    y,\n    i,\n    minW,\n    minH,\n    maxH,\n    moved,\n    static: isStatic,\n    isDraggable,\n    isResizable,\n    nested,\n    items,\n    nestedHeight,\n    ...rest\n  } = layoutItem\n\n  return {\n    w,\n    h,\n    x,\n    y,\n    i,\n    minW,\n    minH,\n    maxH,\n    moved,\n    static: isStatic,\n    isDraggable,\n    isResizable,\n    nested,\n    items,\n    nestedHeight,\n    ...rest\n  };\n}\n\n/**\n * Comparing React `children` is a bit difficult. This is a good way to compare them.\n * This will catch differences in keys, order, and length.\n */\nexport function childrenEqual(a: ReactChildren, b: ReactChildren): boolean {\n  return isEqual(\n    React.Children.map(a, c => c.key),\n    React.Children.map(b, c => c.key)\n  );\n}\n\n/**\n * Given two layoutitems, check if they collide.\n */\nexport function collides(l1: LayoutItem, l2: LayoutItem): boolean {\n  if (l1.i === l2.i) return false; // same element\n  if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\n  if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\n  if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\n  if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\n  return true; // boxes overlap\n}\n\n/**\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\n * between items.\n *\n * @param  {Array} layout Layout.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}       Compacted Layout.\n */\nexport function compact(\n  layout: Layout,\n  compactType: CompactType,\n  cols: number\n): Layout {\n  // Statics go in the compareWith array right away so items flow around them.\n  const compareWith = getStatics(layout);\n  // We go through the items by row and column.\n  const sorted = sortLayoutItems(layout, compactType);\n  // Holding for new items.\n  const out = Array(layout.length);\n\n  for (let i = 0, len = sorted.length; i < len; i++) {\n    let l = cloneLayoutItem(sorted[i]);\n\n    // Don't move static elements\n    if (!l.static) {\n      l = compactItem(compareWith, l, compactType, cols, sorted);\n\n      // Add to comparison array. We only collide with items before this one.\n      // Statics are already in this array.\n      compareWith.push(l);\n    }\n\n    // Add to output array to make sure they still come out in the right order.\n    out[layout.indexOf(sorted[i])] = l;\n\n    // Clear moved flag, if it exists.\n    l.moved = false;\n  }\n\n  return out;\n}\n\nconst heightWidth = { x: \"w\", y: \"h\" };\n/**\n * Before moving item down, it will check if the movement will cause collisions and move those items down before.\n */\nfunction resolveCompactionCollision(\n  layout: Layout,\n  item: LayoutItem,\n  moveToCoord: number,\n  axis: \"x\" | \"y\"\n) {\n  const sizeProp = heightWidth[axis];\n  item[axis] += 1;\n  const itemIndex = layout\n    .map(layoutItem => {\n      return layoutItem.i;\n    })\n    .indexOf(item.i);\n\n  // Go through each item we collide with.\n  for (let i = itemIndex + 1; i < layout.length; i++) {\n    const otherItem = layout[i];\n    // Ignore static items\n    if (otherItem.static) continue;\n\n    // Optimization: we can break early if we know we're past this el\n    // We can do this b/c it's a sorted layout\n    if (otherItem.y > (item.y + item.h)) break;\n\n    if (collides(item, otherItem)) {\n      resolveCompactionCollision(\n        layout,\n        otherItem,\n        moveToCoord + item[sizeProp],\n        axis\n      );\n    }\n  }\n\n  item[axis] = moveToCoord;\n}\n\n/**\n * Compact an item in the layout.\n */\nexport function compactItem(\n  compareWith: Layout,\n  l: LayoutItem,\n  compactType: CompactType,\n  cols: number,\n  fullLayout: Layout\n): LayoutItem {\n  const compactV = compactType === \"vertical\";\n  const compactH = compactType === \"horizontal\";\n  if (compactV) {\n    // Bottom 'y' possible is the bottom of the layout.\n    // This allows you to do nice stuff like specify {y: Infinity}\n    // This is here because the layout must be sorted in order to get the correct bottom `y`.\n    l.y = Math.min(bottom(compareWith), l.y);\n    // Move the element up as far as it can go without colliding.\n    while (l.y > 0 && !getFirstCollision(compareWith, l)) {\n      l.y--;\n    }\n  } else if (compactH) {\n    l.y = Math.min(bottom(compareWith), l.y);\n    // Move the element left as far as it can go without colliding.\n    while (l.x > 0 && !getFirstCollision(compareWith, l)) {\n      l.x--;\n    }\n  }\n\n  // Move it down, and keep moving it down if it's colliding.\n  let collides;\n  while ((collides = getFirstCollision(compareWith, l))) {\n    if (compactH) {\n      resolveCompactionCollision(fullLayout, l, collides.x + collides.w, \"x\");\n    } else {\n      resolveCompactionCollision(fullLayout, l, collides.y + collides.h, \"y\");\n    }\n    // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\n    if (compactH && l.x + l.w > cols) {\n      l.x = cols - l.w;\n      l.y++;\n    }\n  }\n  return l;\n}\n\n/**\n * Given a layout, make sure all elements fit within its bounds.\n *\n * @param  {Array} layout Layout array.\n * @param  {Number} bounds Number of columns.\n */\nexport function correctBounds(\n  layout: Layout,\n  bounds: { cols: number }\n): Layout {\n  const collidesWith = getStatics(layout);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const l = layout[i];\n    // Overflows right\n    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;\n    // Overflows left\n    if (l.x < 0) {\n      l.x = 0;\n      l.w = bounds.cols;\n    }\n    if (!l.static) collidesWith.push(l);\n    else {\n      // If this is static and collides with other statics, we must move it down.\n      // We have to do something nicer than just letting them overlap.\n      while (getFirstCollision(collidesWith, l)) {\n        l.y++;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * Get a layout item by ID. Used so we can override later on if necessary.\n *\n * @param  {Array}  layout Layout array.\n * @param  {String} id     ID\n * @return {LayoutItem}    Item at ID.\n */\nexport function getLayoutItem(layout: Layout, id: string): ?LayoutItem {\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (layout[i].i === id) return layout[i];\n  }\n}\n\n/**\n * Returns the first item this layout collides with.\n * It doesn't appear to matter which order we approach this from, although\n * perhaps that is the wrong thing to do.\n *\n * @param  {Object} layoutItem Layout item.\n * @return {Object|undefined}  A colliding layout item, or undefined.\n */\nexport function getFirstCollision(\n  layout: Layout,\n  layoutItem: LayoutItem\n): ?LayoutItem {\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (collides(layout[i], layoutItem)) return layout[i];\n  }\n}\n\nexport function getAllCollisions(\n  layout: Layout,\n  layoutItem: LayoutItem\n): Array<LayoutItem> {\n  return layout.filter(l => collides(l, layoutItem));\n}\n\n/**\n * Get all static elements.\n * @param  {Array} layout Array of layout objects.\n * @return {Array}        Array of static layout items..\n */\nexport function getStatics(layout: Layout): Array<LayoutItem> {\n  return layout.filter(l => l.static);\n}\n\n/**\n * Move an element. Responsible for doing cascading movements of other elements.\n *\n * @param  {Array}      layout            Full layout to modify.\n * @param  {LayoutItem} l                 element to move.\n * @param  {Number}     [x]               X position in grid units.\n * @param  {Number}     [y]               Y position in grid units.\n */\nexport function moveElement(\n  layout: Layout,\n  l: LayoutItem,\n  x: ?number,\n  y: ?number,\n  isUserAction: ?boolean,\n  preventCollision: ?boolean,\n  compactType: CompactType,\n  cols: number,\n): Layout {\n  if (l.static) return layout;\n\n  // Short-circuit if nothing to do.\n  if (l.y === y && l.x === x) return layout;\n\n  log(`Moving element ${l.i} to [${String(x)},${String(y)}] from [${l.x},${l.y}]`);\n  const oldX = l.x;\n  const oldY = l.y;\n\n  // This is quite a bit faster than extending the object\n  if (typeof x === 'number') l.x = x;\n  if (typeof y === 'number') l.y = y;\n  l.moved = true;\n\n  // If this collides with anything, move it.\n  // When doing this comparison, we have to sort the items we compare with\n  // to ensure, in the case of multiple collisions, that we're getting the\n  // nearest collision.\n  let sorted = sortLayoutItems(layout, compactType);\n  const movingUp =\n    compactType === \"vertical\" && typeof y === 'number' ? oldY >= y\n    : compactType === \"horizontal\" && typeof x === 'number' ? oldX >= x\n    : false;\n  if (movingUp) sorted = sorted.reverse();\n  const collisions = getAllCollisions(sorted, l);\n\n  // There was a collision; abort\n  if (preventCollision && collisions.length) {\n    log(`Collision prevented on ${l.i}, reverting.`);\n    l.x = oldX;\n    l.y = oldY;\n    l.moved = false;\n    return layout;\n  }\n\n  // Move each item that collides away from this element.\n  for (let i = 0, len = collisions.length; i < len; i++) {\n    const collision = collisions[i];\n    log(\n      `Resolving collision between ${l.i} at [${l.x},${l.y}] and ${\n        collision.i\n      } at [${collision.x},${collision.y}]`\n    );\n\n    // Short circuit so we can't infinite loop\n    if (collision.moved) continue;\n\n    // Don't move static items - we have to move *this* element away\n    if (collision.static) {\n      layout = moveElementAwayFromCollision(\n        layout,\n        collision,\n        l,\n        isUserAction,\n        compactType,\n        cols\n      );\n    } else {\n      layout = moveElementAwayFromCollision(\n        layout,\n        l,\n        collision,\n        isUserAction,\n        compactType,\n        cols\n      );\n    }\n  }\n\n  return layout;\n}\n\n/**\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\n * We attempt to move it up if there's room, otherwise it goes below.\n *\n * @param  {Array} layout            Full layout to modify.\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\n */\nexport function moveElementAwayFromCollision(\n  layout: Layout,\n  collidesWith: LayoutItem,\n  itemToMove: LayoutItem,\n  isUserAction: ?boolean,\n  compactType: CompactType,\n  cols: number\n): Layout {\n  const compactH = compactType === \"horizontal\";\n  // Compact vertically if not set to horizontal\n  const compactV = compactType !== \"horizontal\";\n  const preventCollision = false; // we're already colliding\n\n  // If there is enough space above the collision to put this element, move it there.\n  // We only do this on the main collision as this can get funky in cascades and cause\n  // unwanted swapping behavior.\n  if (isUserAction) {\n    // Reset isUserAction flag because we're not in the main collision anymore.\n    isUserAction = false;\n\n    // Make a mock item so we don't modify the item here, only modify in moveElement.\n    const fakeItem: LayoutItem = {\n      x: compactH ? Math.max(collidesWith.x - itemToMove.w, 0) : itemToMove.x,\n      y: compactV ? Math.max(collidesWith.y - itemToMove.h, 0) : itemToMove.y,\n      w: itemToMove.w,\n      h: itemToMove.h,\n      i: \"-1\"\n    };\n\n    // No collision? If so, we can go up there; otherwise, we'll end up moving down as normal\n    if (!getFirstCollision(layout, fakeItem)) {\n      log(\n        `Doing reverse collision on ${itemToMove.i} up to [${fakeItem.x},${\n          fakeItem.y\n        }].`\n      );\n      return moveElement(\n        layout,\n        itemToMove,\n        compactH ? fakeItem.x : undefined,\n        compactV ? fakeItem.y : undefined,\n        isUserAction,\n        preventCollision,\n        compactType,\n        cols\n      );\n    }\n  }\n\n  return moveElement(\n    layout,\n    itemToMove,\n    compactH ? itemToMove.x + 1 : undefined,\n    compactV ? itemToMove.y + 1 : undefined,\n    isUserAction,\n    preventCollision,\n    compactType,\n    cols\n  );\n}\n\n/**\n * Helper to convert a number to a percentage string.\n *\n * @param  {Number} num Any number\n * @return {String}     That number as a percentage.\n */\nexport function perc(num: number): string {\n  return num * 100 + \"%\";\n}\n\nexport function setTransform({ top, left, width, height }: Position): Object {\n  // Replace unitless items with px\n  const translate = `translate(${left}px,${top}px)`;\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: `${width}px`,\n    height: `${height}px`,\n    position: \"absolute\"\n  };\n}\n\nexport function setTopLeft({ top, left, width, height }: Position): Object {\n  return {\n    top: `${top}px`,\n    left: `${left}px`,\n    width: `${width}px`,\n    height: `${height}px`,\n    position: \"absolute\"\n  };\n}\n\n/**\n * Get layout items sorted from top left to right and down.\n *\n * @return {Array} Array of layout objects.\n * @return {Array}        Layout, sorted static items first.\n */\nexport function sortLayoutItems(\n  layout: Layout,\n  compactType: CompactType\n): Layout {\n  if (compactType === \"horizontal\") return sortLayoutItemsByColRow(layout);\n  else return sortLayoutItemsByRowCol(layout);\n}\n\nexport function sortLayoutItemsByRowCol(layout: Layout): Layout {\n  return [].concat(layout).sort(function(a, b) {\n    if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\n      return 1;\n    } else if (a.y === b.y && a.x === b.x) {\n      // Without this, we can get different sort results in IE vs. Chrome/FF\n      return 0;\n    }\n    return -1;\n  });\n}\n\nexport function sortLayoutItemsByColRow(layout: Layout): Layout {\n  return [].concat(layout).sort(function(a, b) {\n    if (a.x > b.x || (a.x === b.x && a.y > b.y)) {\n      return 1;\n    }\n    return -1;\n  });\n}\n\n/**\n * Generate a layout using the initialLayout and children as a template.\n * Missing entries will be added, extraneous ones will be truncated.\n *\n * @param  {Array}  initialLayout Layout passed in through props.\n * @param  {String} breakpoint    Current responsive breakpoint.\n * @param  {?String} compact      Compaction option.\n * @return {Array}                Working layout.\n */\nexport function synchronizeLayoutWithChildren(\n  initialLayout: Layout,\n  children: ReactChildren,\n  cols: number,\n  compactType: CompactType\n): Layout {\n  initialLayout = initialLayout || [];\n\n  // Generate one layout item per child.\n  let layout: Layout = [];\n  React.Children.forEach(children, (child: ReactElement<any>, i: number) => {\n    // Don't overwrite if it already exists.\n    const exists = getLayoutItem(initialLayout, String(child.key));\n    if (exists) {\n      layout[i] = cloneLayoutItem(exists);\n    } else {\n      if (!isProduction && child.props._grid) {\n        console.warn(\n          \"`_grid` properties on children have been deprecated as of React 15.2. \" + // eslint-disable-line\n            \"Please use `data-grid` or add your properties directly to the `layout`.\"\n        );\n      }\n      const g = child.props[\"data-grid\"] || child.props._grid;\n\n      // Hey, this item has a data-grid property, use it.\n      if (g) {\n        if (!isProduction) {\n          validateLayout([g], \"ReactGridLayout.children\");\n        }\n        layout[i] = cloneLayoutItem({ ...g, i: child.key });\n      } else {\n        // Nothing provided: ensure this is added to the bottom\n        layout[i] = cloneLayoutItem({\n          w: 1,\n          h: 1,\n          x: 0,\n          y: bottom(layout),\n          i: String(child.key)\n        });\n      }\n    }\n  });\n\n  // Correct the layout.\n  layout = correctBounds(layout, { cols: cols });\n  layout = compact(layout, compactType, cols);\n\n  return layout;\n}\n\n/**\n * Validate a layout. Throws errors.\n *\n * @param  {Array}  layout        Array of layout items.\n * @param  {String} [contextName] Context name for errors.\n * @throw  {Error}                Validation error.\n */\nexport function validateLayout(\n  layout: Layout,\n  contextName: string = \"Layout\"\n): void {\n  const subProps = [\"x\", \"y\", \"w\", \"h\"];\n  if (!Array.isArray(layout))\n    throw new Error(contextName + \" must be an array!\");\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const item = layout[i];\n    for (let j = 0; j < subProps.length; j++) {\n      if (typeof item[subProps[j]] !== \"number\") {\n        throw new Error(\n          \"ReactGridLayout: \" +\n            contextName +\n            \"[\" +\n            i +\n            \"].\" +\n            subProps[j] +\n            \" must be a number!\"\n        );\n      }\n    }\n    if (item.i && typeof item.i !== \"string\") {\n      throw new Error(\n        \"ReactGridLayout: \" + contextName + \"[\" + i + \"].i must be a string!\"\n      );\n    }\n    if (item.static !== undefined && typeof item.static !== \"boolean\") {\n      throw new Error(\n        \"ReactGridLayout: \" +\n          contextName +\n          \"[\" +\n          i +\n          \"].static must be a boolean!\"\n      );\n    }\n  }\n}\n\n// Flow can't really figure this out, so we just use Object\nexport function autoBindHandlers(el: Object, fns: Array<string>): void {\n  fns.forEach(key => (el[key] = el[key].bind(el)));\n}\n\nfunction log(...args) {\n  if (!DEBUG) return;\n  // eslint-disable-next-line no-console\n  console.log(...args);\n}\n\nexport const noop = () => {};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils.js","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.isequal/index.js\n// module id = 3\n// module chunks = 0","// @flow\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isEqual from \"lodash.isequal\";\nimport classNames from \"classnames\";\nimport {\n  autoBindHandlers,\n  bottom,\n  childrenEqual,\n  cloneLayoutItem,\n  compact,\n  getLayoutItem,\n  moveElement,\n  synchronizeLayoutWithChildren,\n  validateLayout,\n  getAllCollisions,\n  sortLayoutItems,\n  noop\n} from \"./utils\";\nimport GridItem from \"./GridItem\";\nimport type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";\n\n// Types\nimport type {\n  EventCallback,\n  CompactType,\n  GridResizeEvent,\n  GridDragEvent,\n  Layout,\n  LayoutItem\n} from \"./utils\";\n\ntype State = {\n  activeDrag: ?LayoutItem,\n  layout: Layout,\n  mounted: boolean,\n  oldDragItem: ?LayoutItem,\n  oldLayout: ?Layout,\n  oldResizeItem: ?LayoutItem\n};\n\nexport type Props = {\n  id: string,\n  className: string,\n  style: Object,\n  width: number,\n  height: number,\n  autoSize: boolean,\n  cols: number,\n  draggableCancel: string,\n  draggableHandle: string,\n  verticalCompact: boolean,\n  compactType: ?(\"horizontal\" | \"vertical\"),\n  layout: Layout,\n  margin: [number, number],\n  containerPadding: [number, number] | null,\n  rowHeight: number,\n  maxRows: number,\n  isDraggable: boolean,\n  isResizable: boolean,\n  preventCollision: boolean,\n  useCSSTransforms: boolean,\n  nested: boolean,\n\n  // Callbacks\n  onLayoutChange: Layout => void,\n  onDrag: EventCallback,\n  onDragStart: EventCallback,\n  onDragStop: EventCallback,\n  onResize: EventCallback,\n  onResizeStart: EventCallback,\n  onResizeStop: EventCallback,\n  children: ReactChildrenArray<ReactElement<any>>,\n  onMoveToParent: Function,\n  onMoveFromParent: Function,\n\n  // Key modifiers\n  shiftKeyPressed: boolean\n};\n// End Types\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\nexport default class ReactGridLayout extends React.Component<Props, State> {\n  // TODO publish internal ReactClass displayName transform\n  static displayName = \"ReactGridLayout\";\n\n  static propTypes = {\n    //\n    // Basic props\n    //\n    id: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object,\n\n    // This can be set explicitly. If it is not set, it will automatically\n    // be set to the container width. Note that resizes will *not* cause this to adjust.\n    // If you need that behavior, use WidthProvider.\n    width: PropTypes.number,\n    height: PropTypes.number,\n\n    // If true, the container height swells and contracts to fit contents\n    autoSize: PropTypes.bool,\n    // # of cols.\n    cols: PropTypes.number,\n    nested: PropTypes.bool,\n\n    // A selector that will not be draggable.\n    draggableCancel: PropTypes.string,\n    // A selector for the draggable handler\n    draggableHandle: PropTypes.string,\n\n    // Deprecated\n    verticalCompact: function(props: Props) {\n      if (\n        props.verticalCompact === false &&\n        process.env.NODE_ENV !== \"production\"\n      ) {\n        console.warn(\n          // eslint-disable-line no-console\n          \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" +\n            'Use `compactType`: \"horizontal\" | \"vertical\" | null.'\n        );\n      }\n    },\n    // Choose vertical or hotizontal compaction\n    compactType: PropTypes.oneOf([\"vertical\", \"horizontal\"]),\n\n    // layout is an array of object with the format:\n    // {x: Number, y: Number, w: Number, h: Number, i: String}\n    layout: function(props: Props) {\n      var layout = props.layout;\n      // I hope you're setting the data-grid property on the grid items\n      if (layout === undefined) return;\n      validateLayout(layout, \"layout\");\n    },\n\n    //\n    // Grid Dimensions\n    //\n\n    // Margin between items [x, y] in px\n    margin: PropTypes.arrayOf(PropTypes.number),\n    // Padding inside the container [x, y] in px\n    containerPadding: PropTypes.arrayOf(PropTypes.number),\n    // Rows have a static height, but you can change this based on breakpoints if you like\n    rowHeight: PropTypes.number,\n    // Default Infinity, but you can specify a max here if you like.\n    // Note that this isn't fully fleshed out and won't error if you specify a layout that\n    // extends beyond the row capacity. It will, however, not allow users to drag/resize\n    // an item past the barrier. They can push items beyond the barrier, though.\n    // Intentionally not documented for this reason.\n    maxRows: PropTypes.number,\n\n    //\n    // Flags\n    //\n    isDraggable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    // If true, grid items won't change position when being dragged over.\n    preventCollision: PropTypes.bool,\n    // Use CSS transforms instead of top/left\n    useCSSTransforms: PropTypes.bool,\n\n    //\n    // Callbacks\n    //\n\n    // Callback so you can save the layout. Calls after each drag & resize stops.\n    onLayoutChange: PropTypes.func,\n\n    // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n    // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n    onDragStart: PropTypes.func,\n    // Calls on each drag movement.\n    onDrag: PropTypes.func,\n    // Calls when drag is complete.\n    onDragStop: PropTypes.func,\n    //Calls when resize starts.\n    onResizeStart: PropTypes.func,\n    // Calls when resize movement happens.\n    onResize: PropTypes.func,\n    // Calls when resize is complete.\n    onResizeStop: PropTypes.func,\n\n    //\n    // Custom nested Callbacks\n    //\n\n    onMoveToParent: PropTypes.func,\n    onMoveFromParent: PropTypes.func,\n\n    //\n    // Key modifiers\n    //\n    shiftKeyPressed: PropTypes.bool, // TODO use this prop instead of window.shiftKeyPressed\n\n    //\n    // Other validations\n    //\n\n    // Children must not have duplicate keys.\n    children: function(props: Props, propName: string) {\n      var children = props[propName];\n\n      // Check children keys for duplicates. Throw if found.\n      var keys = {};\n      React.Children.forEach(children, function(child) {\n        if (keys[child.key]) {\n          throw new Error(\n            'Duplicate child key \"' +\n              child.key +\n              '\" found! This will cause problems in ReactGridLayout.'\n          );\n        }\n        keys[child.key] = true;\n      });\n    }\n  };\n\n  static defaultProps = {\n    autoSize: true,\n    cols: 12,\n    className: \"\",\n    style: {},\n    draggableHandle: \"\",\n    draggableCancel: \"\",\n    containerPadding: null,\n    rowHeight: 150,\n    maxRows: Infinity, // infinite vertical growth\n    layout: [],\n    margin: [10, 10],\n    isDraggable: true,\n    isResizable: true,\n    useCSSTransforms: true,\n    verticalCompact: true,\n    compactType: \"vertical\",\n    preventCollision: false,\n    onLayoutChange: noop,\n    onDragStart: noop,\n    onDrag: noop,\n    onDragStop: noop,\n    onResizeStart: noop,\n    onResize: noop,\n    onResizeStop: noop\n  };\n\n  state: State = {\n    activeDrag: null,\n    layout: synchronizeLayoutWithChildren(\n      this.props.layout,\n      this.props.children,\n      this.props.cols,\n      // Legacy support for verticalCompact: false\n      this.compactType()\n    ),\n    mounted: false,\n    oldDragItem: null,\n    oldLayout: null,\n    oldResizeItem: null\n  };\n\n  constructor(props: Props, context: any): void {\n    super(props, context);\n    autoBindHandlers(this, [\n      \"onDragStart\",\n      \"onDrag\",\n      \"onDragStop\",\n      \"onResizeStart\",\n      \"onResize\",\n      \"onResizeStop\"\n    ]);\n\n    if (props.nested) {\n      React.Children.forEach(props.children, child => {\n        this.itemRefs[child.key] = React.createRef()\n      })\n    }\n  }\n\n  itemRefs = {}\n  observer = null\n  dragItemIntersecting = true\n\n  componentDidMount() {\n    const { id, nested } = this.props\n    this.setState({ mounted: true });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n\n    // add observers to items\n    this.intersectionRoot = document.getElementById(id).parentElement\n    const options = {\n      root: this.intersectionRoot,\n      rootMargin: '0px 0px 0px 0px',\n      threshold: 0.0\n    }\n\n    this.observer = new IntersectionObserver(this.intersectionCallback, options)\n\n    if (nested) {\n      Object.keys(this.itemRefs).forEach(key => {\n        if (this.itemRefs[key].current) {\n          this.observer.observe(this.itemRefs[key].current)\n        }\n      })\n    }\n  }\n\n  intersectionCallback = (entries/*, observer*/) => {\n    entries.forEach(entry => {\n      if (entry.target.className.indexOf('react-draggable-dragging') > -1) {\n        this.dragItemIntersecting = entry.isIntersecting\n\n        if (!entry.isIntersecting) {\n          this.dragItemIntersectionDirection = entry.boundingClientRect.top > this.boundingClientRect.top + this.boundingClientRect.height ? 'bottom' : 'top'\n        }\n      }\n    })\n  }\n\n  componentDidUpdate = () => {\n    this.observer.disconnect()\n\n    Object.keys(this.itemRefs).forEach(key => {\n      if (this.itemRefs[key].current) {\n        this.observer.observe(this.itemRefs[key].current)\n      }\n    })\n\n    this.boundingClientRect = this.intersectionRoot.getBoundingClientRect()\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    let newLayoutBase;\n    // Legacy support for compactType\n    // Allow parent to set layout directly.\n    if (\n      !isEqual(nextProps.layout, this.props.layout) ||\n      nextProps.compactType !== this.props.compactType\n    ) {\n      newLayoutBase = nextProps.layout;\n    } else if (!childrenEqual(this.props.children, nextProps.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = this.state.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      const newLayout = synchronizeLayoutWithChildren(\n        newLayoutBase,\n        nextProps.children,\n        nextProps.cols,\n        this.compactType(nextProps)\n      );\n      const oldLayout = this.state.layout;\n\n      const { nested } = this.props\n      const newRefs = {}\n      if (nested) {\n        // add refs for new elements\n        newLayout.forEach(item => {\n          const existingRef = this.itemRefs[item.i]\n\n          if (!existingRef) {\n            newRefs[item.i] = React.createRef()\n          } else {\n            newRefs[item.i] = existingRef\n          }\n        })\n\n        this.itemRefs = newRefs\n      }\n\n      this.setState({ layout: newLayout });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    }\n  }\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n  containerHeight() {\n    if (!this.props.autoSize) return;\n    const nbRow = bottom(this.state.layout);\n    const containerPaddingY = this.props.containerPadding\n      ? this.props.containerPadding[1]\n      : this.props.margin[1];\n    return (\n      nbRow * this.props.rowHeight +\n      (nbRow - 1) * this.props.margin[1] +\n      containerPaddingY * 2 +\n      \"px\"\n    );\n  }\n\n  compactType(props: ?Object): CompactType {\n    if (!props) props = this.props;\n    return props.verticalCompact === false ? null : props.compactType;\n  }\n\n  /**\n   * When dragging starts\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n  onDragStart(i: string, x: number, y: number, { e, node }: GridDragEvent) {\n    // invalidate last drag item intersection status\n    this.dragItemIntersecting = true\n\n    const { layout } = this.state;\n    var l = getLayoutItem(layout, i);\n    if (!l) return;\n\n    this.setState({\n      oldDragItem: cloneLayoutItem(l),\n      oldLayout: this.state.layout\n    });\n\n    return this.props.onDragStart(layout, l, l, null, e, node);\n  }\n\n  /**\n   * Each drag movement create a new dragelement and move the element to the dragged location\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n  onDrag(i: string, x: number, y: number, { e, node }: GridDragEvent) {\n    const { oldDragItem } = this.state;\n    let { layout } = this.state;\n    const { cols } = this.props;\n    var l = getLayoutItem(layout, i);\n    if (!l) return;\n\n    // Create placeholder (display only)\n    var placeholder = {\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      placeholder: true,\n      i: i\n    };\n\n    // Move the element to the dragged location.\n    const isUserAction = true;\n    layout = moveElement(\n      layout,\n      l,\n      x,\n      y,\n      isUserAction,\n      this.props.preventCollision,\n      this.compactType(),\n      cols\n    );\n\n    this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n\n    this.setState({\n      layout: compact(layout, this.compactType(), cols),\n      activeDrag: placeholder\n    });\n  }\n\n  /**\n   * When dragging stops, figure out which position the element is closest to and update its x and y.\n   * @param  {String} i Index of the child.\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n  onDragStop(i: string, x: number, y: number, { e, node }: GridDragEvent) {\n    const { oldDragItem } = this.state;\n    let { layout } = this.state;\n    const { cols, preventCollision, nested, id } = this.props;\n    const l = getLayoutItem(layout, i);\n    if (!l) return;\n\n    if (window.shiftKeyPressed && !nested && !l.nested) {\n      // shift key is pressed check if item should go to nested grid\n      const sorted = sortLayoutItems(layout, this.compactType());\n      const collisions = getAllCollisions(sorted, node);\n\n      const nestedCollision = collisions.find(item => item.nested)\n\n      if (nestedCollision) {\n        this.setState({\n          activeDrag: null,\n          oldDragItem: null,\n          oldLayout: null\n        });\n\n        const movedLayout = this.onMoveFromParent(l, nestedCollision.i)\n        if (movedLayout) {\n          layout = movedLayout\n        }\n      }\n    } else if (window.shiftKeyPressed && !this.dragItemIntersecting && !l.nested) {\n      this.setState({\n        activeDrag: null,\n        oldDragItem: null,\n        oldLayout: null\n      });\n\n      const movedLayout = this.onMoveToParent(l, id, this.dragItemIntersectionDirection)\n      if (movedLayout) {\n        layout = movedLayout\n\n        delete this.itemRefs[i]\n\n        // reconenct all observers because items are remounted\n        // TODO find a better way to preserve refs across remounts\n        this.observer.disconnect()\n\n        Object.keys(this.itemRefs).forEach(key => {\n          if (this.itemRefs[key].current) {\n            this.observer.observe(this.itemRefs[key].current)\n          }\n        })\n      }\n    } else {\n      // Move the element here\n      const isUserAction = true;\n      layout = moveElement(\n        layout,\n        l,\n        x,\n        y,\n        isUserAction,\n        preventCollision,\n        this.compactType(),\n        cols\n      );\n\n      this.props.onDragStop(layout, oldDragItem, l, null, e, node);\n\n      // Set state\n      const newLayout = compact(layout, this.compactType(), cols);\n      const { oldLayout } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldDragItem: null,\n        oldLayout: null\n      });\n\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    }\n  }\n\n  onLayoutMaybeChanged(newLayout: Layout, oldLayout: ?Layout) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!isEqual(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  }\n\n  onResizeStart(i: string, w: number, h: number, { e, node }: GridResizeEvent) {\n    const { layout } = this.state;\n    var l = getLayoutItem(layout, i);\n    if (!l) return;\n\n    this.setState({\n      oldResizeItem: cloneLayoutItem(l),\n      oldLayout: this.state.layout\n    });\n\n    this.props.onResizeStart(layout, l, l, null, e, node);\n  }\n\n  onResize(i: string, w: number, h: number, { e, node }: GridResizeEvent) {\n    const { layout, oldResizeItem } = this.state;\n    const { cols, preventCollision } = this.props;\n    const l: ?LayoutItem = getLayoutItem(layout, i);\n    if (!l) return;\n\n    // Something like quad tree should be used\n    // to find collisions faster\n    let hasCollisions;\n    if (preventCollision) {\n      const collisions = getAllCollisions(layout, { ...l, w, h }).filter(\n        layoutItem => layoutItem.i !== l.i\n      );\n      hasCollisions = collisions.length > 0;\n\n      // If we're colliding, we need adjust the placeholder.\n      if (hasCollisions) {\n        // adjust w && h to maximum allowed space\n        let leastX = Infinity,\n          leastY = Infinity;\n        collisions.forEach(layoutItem => {\n          if (layoutItem.x > l.x) leastX = Math.min(leastX, layoutItem.x);\n          if (layoutItem.y > l.y) leastY = Math.min(leastY, layoutItem.y);\n        });\n\n        if (Number.isFinite(leastX)) l.w = leastX - l.x;\n        if (Number.isFinite(leastY)) l.h = leastY - l.y;\n      }\n    }\n\n    if (!hasCollisions) {\n      // Set new width and height.\n      l.w = w;\n      l.h = h;\n    }\n\n    // Create placeholder element (display only)\n    var placeholder = {\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      static: true,\n      i: i\n    };\n\n    this.props.onResize(layout, oldResizeItem, l, placeholder, e, node);\n\n    // Re-compact the layout and set the drag placeholder.\n    this.setState({\n      layout: compact(layout, this.compactType(), cols),\n      activeDrag: placeholder\n    });\n  }\n\n  onResizeStop(i: string, w: number, h: number, { e, node }: GridResizeEvent) {\n    const { layout, oldResizeItem } = this.state;\n    const { cols } = this.props;\n    var l = getLayoutItem(layout, i);\n\n    this.props.onResizeStop(layout, oldResizeItem, l, null, e, node);\n\n    // Set state\n    const newLayout = compact(layout, this.compactType(), cols);\n    const { oldLayout } = this.state;\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldResizeItem: null,\n      oldLayout: null\n    });\n\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  }\n\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n  placeholder(): ?ReactElement<any> {\n    const { activeDrag } = this.state;\n    if (!activeDrag) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      useCSSTransforms\n    } = this.props;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n    return (\n      <GridItem\n        w={activeDrag.w}\n        h={activeDrag.h}\n        x={activeDrag.x}\n        y={activeDrag.y}\n        i={activeDrag.i}\n        className=\"react-grid-placeholder\"\n        containerWidth={width}\n        cols={cols}\n        margin={margin}\n        containerPadding={containerPadding || margin}\n        maxRows={maxRows}\n        rowHeight={rowHeight}\n        isDraggable={false}\n        isResizable={false}\n        useCSSTransforms={useCSSTransforms}\n      >\n        <div />\n      </GridItem>\n    );\n  }\n\n  onMoveToParent = (gridItem, nestedId, direction) => {\n    const { onMoveToParent } = this.props\n\n    if (onMoveToParent) {\n      return onMoveToParent(gridItem, nestedId, direction)\n    }\n\n    return null\n  }\n\n  onMoveFromParent = (gridItem, nestedId) => {\n    const { onMoveFromParent } = this.props\n\n    if (onMoveFromParent) {\n      return onMoveFromParent(gridItem, nestedId)\n    }\n\n    return null\n  }\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n  processGridItem(child: ReactElement<any>): ?ReactElement<any> {\n    if (!child || !child.key) return;\n    const l = getLayoutItem(this.state.layout, String(child.key));\n    if (!l) return null;\n\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      isDraggable,\n      isResizable,\n      useCSSTransforms,\n      draggableCancel,\n      draggableHandle\n    } = this.props;\n    const { mounted } = this.state;\n\n    // Parse 'static'. Any properties defined directly on the grid item will take precedence.\n    const draggable = Boolean(\n      !l.static && isDraggable && (l.isDraggable || l.isDraggable == null)\n    );\n    const resizable = Boolean(\n      !l.static && isResizable && (l.isResizable || l.isResizable == null)\n    );\n\n    return (\n      <GridItem\n        className={l.nested ? 'react-grid-item-nested' : null}\n        containerWidth={width}\n        cols={cols}\n        margin={margin}\n        containerPadding={containerPadding || margin}\n        maxRows={maxRows}\n        rowHeight={rowHeight}\n        cancel={draggableCancel}\n        handle={draggableHandle}\n        onDragStop={this.onDragStop}\n        onDragStart={this.onDragStart}\n        onDrag={this.onDrag}\n        onResizeStart={this.onResizeStart}\n        onResize={this.onResize}\n        onResizeStop={this.onResizeStop}\n        isDraggable={draggable}\n        isResizable={resizable}\n        useCSSTransforms={useCSSTransforms && mounted}\n        usePercentages={!mounted}\n        w={l.w}\n        h={l.h}\n        x={l.x}\n        y={l.y}\n        i={l.i}\n        minH={l.minH}\n        minW={l.minW}\n        maxH={l.maxH}\n        maxW={l.maxW}\n        static={l.static}\n      >\n        <div ref={this.itemRefs[String(l.i)]}>\n          {child}\n        </div>\n      </GridItem>\n    );\n  }\n\n  render() {\n    const { id, className, style, height } = this.props;\n\n    const mergedClassName = classNames(\"react-grid-layout\", className);\n    const mergedStyle = {\n      height: height ? `${height}px` : this.containerHeight(),\n      ...style\n    };\n\n    return (\n      <div id={id} className={mergedClassName} style={mergedStyle}>\n        {React.Children.map(this.props.children, child =>\n          this.processGridItem(child)\n        )}\n        {this.placeholder()}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ReactGridLayout.jsx","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/classnames/index.js\n// module id = 5\n// module chunks = 0","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react-dom'), require('react')) :\n\ttypeof define === 'function' && define.amd ? define(['react-dom', 'react'], factory) :\n\t(global.ReactDraggable = factory(global.ReactDOM,global.React));\n}(this, (function (ReactDOM,React) { 'use strict';\n\n\tReactDOM = ReactDOM && ReactDOM.hasOwnProperty('default') ? ReactDOM['default'] : ReactDOM;\n\tReact = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\n\tvar emptyFunction_1 = emptyFunction;\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\n\tvar validateFormat = function validateFormat(format) {};\n\n\t{\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\n\tvar invariant_1 = invariant;\n\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\n\tvar warning = emptyFunction_1;\n\n\t{\n\t  var printWarning = function printWarning(format) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\n\t    var argIndex = 0;\n\t    var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t      return args[argIndex++];\n\t    });\n\t    if (typeof console !== 'undefined') {\n\t      console.error(message);\n\t    }\n\t    try {\n\t      // --- Welcome to debugging React ---\n\t      // This error was thrown as a convenience so that you can use this stack\n\t      // to find the callsite that caused this warning to fire.\n\t      throw new Error(message);\n\t    } catch (x) {}\n\t  };\n\n\t  warning = function warning(condition, format) {\n\t    if (format === undefined) {\n\t      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t    }\n\n\t    if (format.indexOf('Failed Composite propType: ') === 0) {\n\t      return; // Ignore CompositeComponent proptype check.\n\t    }\n\n\t    if (!condition) {\n\t      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t        args[_key2 - 2] = arguments[_key2];\n\t      }\n\n\t      printWarning.apply(undefined, [format].concat(args));\n\t    }\n\t  };\n\t}\n\n\tvar warning_1 = warning;\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\n\t\treturn Object(val);\n\t}\n\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn to;\n\t};\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\n\tvar ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\n\t{\n\t  var invariant$1 = invariant_1;\n\t  var warning$1 = warning_1;\n\t  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;\n\t  var loggedTypeFailures = {};\n\t}\n\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?Function} getStack Returns the component stack.\n\t * @private\n\t */\n\tfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n\t  {\n\t    for (var typeSpecName in typeSpecs) {\n\t      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t        var error;\n\t        // Prop type validation may throw. In case they do, we don't want to\n\t        // fail the render phase where it didn't fail before. So we log it.\n\t        // After these have been cleaned up, we'll let them throw.\n\t        try {\n\t          // This is intentionally an invariant that gets caught. It's the same\n\t          // behavior as without this statement except with a better message.\n\t          invariant$1(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n\t          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);\n\t        } catch (ex) {\n\t          error = ex;\n\t        }\n\t        warning$1(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\t        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t          // Only monitor this failure once because there tends to be a lot of the\n\t          // same error.\n\t          loggedTypeFailures[error.message] = true;\n\n\t          var stack = getStack ? getStack() : '';\n\n\t          warning$1(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n\tvar checkPropTypes_1 = checkPropTypes;\n\n\tvar factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {\n\t  /* global Symbol */\n\t  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n\t  /**\n\t   * Returns the iterator method function contained on the iterable object.\n\t   *\n\t   * Be sure to invoke the function with the iterable as context:\n\t   *\n\t   *     var iteratorFn = getIteratorFn(myIterable);\n\t   *     if (iteratorFn) {\n\t   *       var iterator = iteratorFn.call(myIterable);\n\t   *       ...\n\t   *     }\n\t   *\n\t   * @param {?object} maybeIterable\n\t   * @return {?function}\n\t   */\n\t  function getIteratorFn(maybeIterable) {\n\t    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\n\t  /**\n\t   * Collection of methods that allow declaration and validation of props that are\n\t   * supplied to React components. Example usage:\n\t   *\n\t   *   var Props = require('ReactPropTypes');\n\t   *   var MyArticle = React.createClass({\n\t   *     propTypes: {\n\t   *       // An optional string prop named \"description\".\n\t   *       description: Props.string,\n\t   *\n\t   *       // A required enum prop named \"category\".\n\t   *       category: Props.oneOf(['News','Photos']).isRequired,\n\t   *\n\t   *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t   *       dialog: Props.instanceOf(Dialog).isRequired\n\t   *     },\n\t   *     render: function() { ... }\n\t   *   });\n\t   *\n\t   * A more formal specification of how these methods are used:\n\t   *\n\t   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t   *   decl := ReactPropTypes.{type}(.isRequired)?\n\t   *\n\t   * Each and every declaration produces a function with the same signature. This\n\t   * allows the creation of custom validation functions. For example:\n\t   *\n\t   *  var MyLink = React.createClass({\n\t   *    propTypes: {\n\t   *      // An optional string or URI prop named \"href\".\n\t   *      href: function(props, propName, componentName) {\n\t   *        var propValue = props[propName];\n\t   *        if (propValue != null && typeof propValue !== 'string' &&\n\t   *            !(propValue instanceof URI)) {\n\t   *          return new Error(\n\t   *            'Expected a string or an URI for ' + propName + ' in ' +\n\t   *            componentName\n\t   *          );\n\t   *        }\n\t   *      }\n\t   *    },\n\t   *    render: function() {...}\n\t   *  });\n\t   *\n\t   * @internal\n\t   */\n\n\t  var ANONYMOUS = '<<anonymous>>';\n\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\t  var ReactPropTypes = {\n\t    array: createPrimitiveTypeChecker('array'),\n\t    bool: createPrimitiveTypeChecker('boolean'),\n\t    func: createPrimitiveTypeChecker('function'),\n\t    number: createPrimitiveTypeChecker('number'),\n\t    object: createPrimitiveTypeChecker('object'),\n\t    string: createPrimitiveTypeChecker('string'),\n\t    symbol: createPrimitiveTypeChecker('symbol'),\n\n\t    any: createAnyTypeChecker(),\n\t    arrayOf: createArrayOfTypeChecker,\n\t    element: createElementTypeChecker(),\n\t    instanceOf: createInstanceTypeChecker,\n\t    node: createNodeChecker(),\n\t    objectOf: createObjectOfTypeChecker,\n\t    oneOf: createEnumTypeChecker,\n\t    oneOfType: createUnionTypeChecker,\n\t    shape: createShapeTypeChecker,\n\t    exact: createStrictShapeTypeChecker,\n\t  };\n\n\t  /**\n\t   * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t   */\n\t  /*eslint-disable no-self-compare*/\n\t  function is(x, y) {\n\t    // SameValue algorithm\n\t    if (x === y) {\n\t      // Steps 1-5, 7-10\n\t      // Steps 6.b-6.e: +0 != -0\n\t      return x !== 0 || 1 / x === 1 / y;\n\t    } else {\n\t      // Step 6.a: NaN == NaN\n\t      return x !== x && y !== y;\n\t    }\n\t  }\n\t  /*eslint-enable no-self-compare*/\n\n\t  /**\n\t   * We use an Error-like object for backward compatibility as people may call\n\t   * PropTypes directly and inspect their output. However, we don't use real\n\t   * Errors anymore. We don't inspect their stack anyway, and creating them\n\t   * is prohibitively expensive if they are created too often, such as what\n\t   * happens in oneOfType() for any type before the one that matched.\n\t   */\n\t  function PropTypeError(message) {\n\t    this.message = message;\n\t    this.stack = '';\n\t  }\n\t  // Make `instanceof Error` still work for returned errors.\n\t  PropTypeError.prototype = Error.prototype;\n\n\t  function createChainableTypeChecker(validate) {\n\t    {\n\t      var manualPropTypeCallCache = {};\n\t      var manualPropTypeWarningCount = 0;\n\t    }\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t      componentName = componentName || ANONYMOUS;\n\t      propFullName = propFullName || propName;\n\n\t      if (secret !== ReactPropTypesSecret_1) {\n\t        if (throwOnDirectAccess) {\n\t          // New behavior only for users of `prop-types` package\n\t          invariant_1(\n\t            false,\n\t            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t            'Use `PropTypes.checkPropTypes()` to call them. ' +\n\t            'Read more at http://fb.me/use-check-prop-types'\n\t          );\n\t        } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n\t          // Old behavior for people using React.PropTypes\n\t          var cacheKey = componentName + ':' + propName;\n\t          if (\n\t            !manualPropTypeCallCache[cacheKey] &&\n\t            // Avoid spamming the console because they are often not actionable except for lib authors\n\t            manualPropTypeWarningCount < 3\n\t          ) {\n\t            warning_1(\n\t              false,\n\t              'You are manually calling a React.PropTypes validation ' +\n\t              'function for the `%s` prop on `%s`. This is deprecated ' +\n\t              'and will throw in the standalone `prop-types` package. ' +\n\t              'You may be seeing this warning due to a third-party PropTypes ' +\n\t              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n\t              propFullName,\n\t              componentName\n\t            );\n\t            manualPropTypeCallCache[cacheKey] = true;\n\t            manualPropTypeWarningCount++;\n\t          }\n\t        }\n\t      }\n\t      if (props[propName] == null) {\n\t        if (isRequired) {\n\t          if (props[propName] === null) {\n\t            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n\t          }\n\t          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n\t        }\n\t        return null;\n\t      } else {\n\t        return validate(props, propName, componentName, location, propFullName);\n\t      }\n\t    }\n\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\n\t    return chainedCheckType;\n\t  }\n\n\t  function createPrimitiveTypeChecker(expectedType) {\n\t    function validate(props, propName, componentName, location, propFullName, secret) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== expectedType) {\n\t        // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t        // check, but we can offer a more precise error message here rather than\n\t        // 'of type `object`'.\n\t        var preciseType = getPreciseType(propValue);\n\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createAnyTypeChecker() {\n\t    return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);\n\t  }\n\n\t  function createArrayOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      if (!Array.isArray(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t      }\n\t      for (var i = 0; i < propValue.length; i++) {\n\t        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createElementTypeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      if (!isValidElement(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createInstanceTypeChecker(expectedClass) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!(props[propName] instanceof expectedClass)) {\n\t        var expectedClassName = expectedClass.name || ANONYMOUS;\n\t        var actualClassName = getClassName(props[propName]);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createEnumTypeChecker(expectedValues) {\n\t    if (!Array.isArray(expectedValues)) {\n\t      warning_1(false, 'Invalid argument supplied to oneOf, expected an instance of array.');\n\t      return emptyFunction_1.thatReturnsNull;\n\t    }\n\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      for (var i = 0; i < expectedValues.length; i++) {\n\t        if (is(propValue, expectedValues[i])) {\n\t          return null;\n\t        }\n\t      }\n\n\t      var valuesString = JSON.stringify(expectedValues);\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createObjectOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t      }\n\t      for (var key in propValue) {\n\t        if (propValue.hasOwnProperty(key)) {\n\t          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t          if (error instanceof Error) {\n\t            return error;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createUnionTypeChecker(arrayOfTypeCheckers) {\n\t    if (!Array.isArray(arrayOfTypeCheckers)) {\n\t      warning_1(false, 'Invalid argument supplied to oneOfType, expected an instance of array.');\n\t      return emptyFunction_1.thatReturnsNull;\n\t    }\n\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (typeof checker !== 'function') {\n\t        warning_1(\n\t          false,\n\t          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n\t          'received %s at index %s.',\n\t          getPostfixForTypeWarning(checker),\n\t          i\n\t        );\n\t        return emptyFunction_1.thatReturnsNull;\n\t      }\n\t    }\n\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t        var checker = arrayOfTypeCheckers[i];\n\t        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n\t          return null;\n\t        }\n\t      }\n\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createNodeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!isNode(props[propName])) {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      for (var key in shapeTypes) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          continue;\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createStrictShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      // We need to check all keys in case some are required but missing from\n\t      // props.\n\t      var allKeys = objectAssign({}, props[propName], shapeTypes);\n\t      for (var key in allKeys) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          return new PropTypeError(\n\t            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n\t            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n\t            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n\t          );\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function isNode(propValue) {\n\t    switch (typeof propValue) {\n\t      case 'number':\n\t      case 'string':\n\t      case 'undefined':\n\t        return true;\n\t      case 'boolean':\n\t        return !propValue;\n\t      case 'object':\n\t        if (Array.isArray(propValue)) {\n\t          return propValue.every(isNode);\n\t        }\n\t        if (propValue === null || isValidElement(propValue)) {\n\t          return true;\n\t        }\n\n\t        var iteratorFn = getIteratorFn(propValue);\n\t        if (iteratorFn) {\n\t          var iterator = iteratorFn.call(propValue);\n\t          var step;\n\t          if (iteratorFn !== propValue.entries) {\n\t            while (!(step = iterator.next()).done) {\n\t              if (!isNode(step.value)) {\n\t                return false;\n\t              }\n\t            }\n\t          } else {\n\t            // Iterator will provide entry [k,v] tuples rather than values.\n\t            while (!(step = iterator.next()).done) {\n\t              var entry = step.value;\n\t              if (entry) {\n\t                if (!isNode(entry[1])) {\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          return false;\n\t        }\n\n\t        return true;\n\t      default:\n\t        return false;\n\t    }\n\t  }\n\n\t  function isSymbol(propType, propValue) {\n\t    // Native Symbol.\n\t    if (propType === 'symbol') {\n\t      return true;\n\t    }\n\n\t    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t    if (propValue['@@toStringTag'] === 'Symbol') {\n\t      return true;\n\t    }\n\n\t    // Fallback for non-spec compliant Symbols which are polyfilled.\n\t    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\n\t  // Equivalent of `typeof` but with special handling for array and regexp.\n\t  function getPropType(propValue) {\n\t    var propType = typeof propValue;\n\t    if (Array.isArray(propValue)) {\n\t      return 'array';\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t      // Old webkits (at least until Android 4.0) return 'function' rather than\n\t      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t      // passes PropTypes.object.\n\t      return 'object';\n\t    }\n\t    if (isSymbol(propType, propValue)) {\n\t      return 'symbol';\n\t    }\n\t    return propType;\n\t  }\n\n\t  // This handles more types than `getPropType`. Only used for error messages.\n\t  // See `createPrimitiveTypeChecker`.\n\t  function getPreciseType(propValue) {\n\t    if (typeof propValue === 'undefined' || propValue === null) {\n\t      return '' + propValue;\n\t    }\n\t    var propType = getPropType(propValue);\n\t    if (propType === 'object') {\n\t      if (propValue instanceof Date) {\n\t        return 'date';\n\t      } else if (propValue instanceof RegExp) {\n\t        return 'regexp';\n\t      }\n\t    }\n\t    return propType;\n\t  }\n\n\t  // Returns a string that is postfixed to a warning about an invalid type.\n\t  // For example, \"undefined\" or \"of type array\"\n\t  function getPostfixForTypeWarning(value) {\n\t    var type = getPreciseType(value);\n\t    switch (type) {\n\t      case 'array':\n\t      case 'object':\n\t        return 'an ' + type;\n\t      case 'boolean':\n\t      case 'date':\n\t      case 'regexp':\n\t        return 'a ' + type;\n\t      default:\n\t        return type;\n\t    }\n\t  }\n\n\t  // Returns class name of the object, if any.\n\t  function getClassName(propValue) {\n\t    if (!propValue.constructor || !propValue.constructor.name) {\n\t      return ANONYMOUS;\n\t    }\n\t    return propValue.constructor.name;\n\t  }\n\n\t  ReactPropTypes.checkPropTypes = checkPropTypes_1;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\n\t  return ReactPropTypes;\n\t};\n\n\tvar propTypes = createCommonjsModule(function (module) {\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t{\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);\n\t}\n\t});\n\n\tvar classnames = createCommonjsModule(function (module) {\n\t/*!\n\t  Copyright (c) 2016 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\n\t(function () {\n\n\t\tvar hasOwn = {}.hasOwnProperty;\n\n\t\tfunction classNames () {\n\t\t\tvar classes = [];\n\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\n\t\t\t\tvar argType = typeof arg;\n\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses.push(arg);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn classes.join(' ');\n\t\t}\n\n\t\tif ('object' !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (typeof undefined === 'function' && typeof undefined.amd === 'object' && undefined.amd) {\n\t\t\t// register as 'classnames', consistent with npm package name\n\t\t\tundefined('classnames', [], function () {\n\t\t\t\treturn classNames;\n\t\t\t});\n\t\t} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t}());\n\t});\n\n\t// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\n\tfunction findInArray(array /*: Array<any> | TouchList*/, callback /*: Function*/) /*: any*/ {\n\t  for (var i = 0, length = array.length; i < length; i++) {\n\t    if (callback.apply(callback, [array[i], i, array])) return array[i];\n\t  }\n\t}\n\n\tfunction isFunction(func /*: any*/) /*: boolean*/ {\n\t  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n\t}\n\n\tfunction isNum(num /*: any*/) /*: boolean*/ {\n\t  return typeof num === 'number' && !isNaN(num);\n\t}\n\n\tfunction int(a /*: string*/) /*: number*/ {\n\t  return parseInt(a, 10);\n\t}\n\n\tfunction dontSetMe(props /*: Object*/, propName /*: string*/, componentName /*: string*/) {\n\t  if (props[propName]) {\n\t    return new Error('Invalid prop ' + propName + ' passed to ' + componentName + ' - do not set this, set it on the child.');\n\t  }\n\t}\n\n\tvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\tfunction getPrefix() /*: string*/ {\n\t  var prop /*: string*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n\t  // Checking specifically for 'window.document' is for pseudo-browser server-side\n\t  // environments that define 'window' as the global context.\n\t  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n\t  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n\n\t  var style = window.document.documentElement.style;\n\n\t  if (prop in style) return '';\n\n\t  for (var i = 0; i < prefixes.length; i++) {\n\t    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n\t  }\n\n\t  return '';\n\t}\n\n\tfunction browserPrefixToKey(prop /*: string*/, prefix /*: string*/) /*: string*/ {\n\t  return prefix ? '' + prefix + kebabToTitleCase(prop) : prop;\n\t}\n\n\tfunction kebabToTitleCase(str /*: string*/) /*: string*/ {\n\t  var out = '';\n\t  var shouldCapitalize = true;\n\t  for (var i = 0; i < str.length; i++) {\n\t    if (shouldCapitalize) {\n\t      out += str[i].toUpperCase();\n\t      shouldCapitalize = false;\n\t    } else if (str[i] === '-') {\n\t      shouldCapitalize = true;\n\t    } else {\n\t      out += str[i];\n\t    }\n\t  }\n\t  return out;\n\t}\n\n\t// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n\t// Note that you may have to re-test for certain things; for instance, Chrome 50\n\t// can handle unprefixed `transform`, but not unprefixed `user-select`\n\tvar browserPrefix = getPrefix();\n\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\n\tvar createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\n\tvar defineProperty = function (obj, key, value) {\n\t  if (key in obj) {\n\t    Object.defineProperty(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\n\t  return obj;\n\t};\n\n\tvar _extends = Object.assign || function (target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i];\n\n\t    for (var key in source) {\n\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  }\n\n\t  return target;\n\t};\n\n\tvar inherits = function (subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n\t  }\n\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t};\n\n\tvar possibleConstructorReturn = function (self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\n\t  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n\t};\n\n\tvar slicedToArray = function () {\n\t  function sliceIterator(arr, i) {\n\t    var _arr = [];\n\t    var _n = true;\n\t    var _d = false;\n\t    var _e = undefined;\n\n\t    try {\n\t      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n\t        _arr.push(_s.value);\n\n\t        if (i && _arr.length === i) break;\n\t      }\n\t    } catch (err) {\n\t      _d = true;\n\t      _e = err;\n\t    } finally {\n\t      try {\n\t        if (!_n && _i[\"return\"]) _i[\"return\"]();\n\t      } finally {\n\t        if (_d) throw _e;\n\t      }\n\t    }\n\n\t    return _arr;\n\t  }\n\n\t  return function (arr, i) {\n\t    if (Array.isArray(arr)) {\n\t      return arr;\n\t    } else if (Symbol.iterator in Object(arr)) {\n\t      return sliceIterator(arr, i);\n\t    } else {\n\t      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n\t    }\n\t  };\n\t}();\n\n\t/*:: import type {ControlPosition, MouseTouchEvent} from './types';*/\n\n\n\tvar matchesSelectorFunc = '';\n\tfunction matchesSelector(el /*: Node*/, selector /*: string*/) /*: boolean*/ {\n\t  if (!matchesSelectorFunc) {\n\t    matchesSelectorFunc = findInArray(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n\t      // $FlowIgnore: Doesn't think elements are indexable\n\t      return isFunction(el[method]);\n\t    });\n\t  }\n\n\t  // Might not be found entirely (not an Element?) - in that case, bail\n\t  // $FlowIgnore: Doesn't think elements are indexable\n\t  if (!isFunction(el[matchesSelectorFunc])) return false;\n\n\t  // $FlowIgnore: Doesn't think elements are indexable\n\t  return el[matchesSelectorFunc](selector);\n\t}\n\n\t// Works up the tree to the draggable itself attempting to match selector.\n\tfunction matchesSelectorAndParentsTo(el /*: Node*/, selector /*: string*/, baseNode /*: Node*/) /*: boolean*/ {\n\t  var node = el;\n\t  do {\n\t    if (matchesSelector(node, selector)) return true;\n\t    if (node === baseNode) return false;\n\t    node = node.parentNode;\n\t  } while (node);\n\n\t  return false;\n\t}\n\n\tfunction addEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {\n\t  if (!el) {\n\t    return;\n\t  }\n\t  if (el.attachEvent) {\n\t    el.attachEvent('on' + event, handler);\n\t  } else if (el.addEventListener) {\n\t    el.addEventListener(event, handler, true);\n\t  } else {\n\t    // $FlowIgnore: Doesn't think elements are indexable\n\t    el['on' + event] = handler;\n\t  }\n\t}\n\n\tfunction removeEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {\n\t  if (!el) {\n\t    return;\n\t  }\n\t  if (el.detachEvent) {\n\t    el.detachEvent('on' + event, handler);\n\t  } else if (el.removeEventListener) {\n\t    el.removeEventListener(event, handler, true);\n\t  } else {\n\t    // $FlowIgnore: Doesn't think elements are indexable\n\t    el['on' + event] = null;\n\t  }\n\t}\n\n\tfunction outerHeight(node /*: HTMLElement*/) /*: number*/ {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetTop which is including margin. See getBoundPosition\n\t  var height = node.clientHeight;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  height += int(computedStyle.borderTopWidth);\n\t  height += int(computedStyle.borderBottomWidth);\n\t  return height;\n\t}\n\n\tfunction outerWidth(node /*: HTMLElement*/) /*: number*/ {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetLeft which is including margin. See getBoundPosition\n\t  var width = node.clientWidth;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  width += int(computedStyle.borderLeftWidth);\n\t  width += int(computedStyle.borderRightWidth);\n\t  return width;\n\t}\n\tfunction innerHeight(node /*: HTMLElement*/) /*: number*/ {\n\t  var height = node.clientHeight;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  height -= int(computedStyle.paddingTop);\n\t  height -= int(computedStyle.paddingBottom);\n\t  return height;\n\t}\n\n\tfunction innerWidth(node /*: HTMLElement*/) /*: number*/ {\n\t  var width = node.clientWidth;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  width -= int(computedStyle.paddingLeft);\n\t  width -= int(computedStyle.paddingRight);\n\t  return width;\n\t}\n\n\t// Get from offsetParent\n\tfunction offsetXYFromParent(evt /*: {clientX: number, clientY: number}*/, offsetParent /*: HTMLElement*/) /*: ControlPosition*/ {\n\t  var isBody = offsetParent === offsetParent.ownerDocument.body;\n\t  var offsetParentRect = isBody ? { left: 0, top: 0 } : offsetParent.getBoundingClientRect();\n\n\t  var x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;\n\t  var y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;\n\n\t  return { x: x, y: y };\n\t}\n\n\tfunction createCSSTransform(_ref) /*: Object*/ {\n\t  var x = _ref.x,\n\t      y = _ref.y;\n\n\t  // Replace unitless items with px\n\t  return defineProperty({}, browserPrefixToKey('transform', browserPrefix), 'translate(' + x + 'px,' + y + 'px)');\n\t}\n\n\tfunction createSVGTransform(_ref3) /*: string*/ {\n\t  var x = _ref3.x,\n\t      y = _ref3.y;\n\n\t  return 'translate(' + x + ',' + y + ')';\n\t}\n\n\tfunction getTouch(e /*: MouseTouchEvent*/, identifier /*: number*/) /*: ?{clientX: number, clientY: number}*/ {\n\t  return e.targetTouches && findInArray(e.targetTouches, function (t) {\n\t    return identifier === t.identifier;\n\t  }) || e.changedTouches && findInArray(e.changedTouches, function (t) {\n\t    return identifier === t.identifier;\n\t  });\n\t}\n\n\tfunction getTouchIdentifier(e /*: MouseTouchEvent*/) /*: ?number*/ {\n\t  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n\t  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n\t}\n\n\t// User-select Hacks:\n\t//\n\t// Useful for preventing blue highlights all over everything when dragging.\n\n\t// Note we're passing `document` b/c we could be iframed\n\tfunction addUserSelectStyles(doc /*: ?Document*/) {\n\t  if (!doc) return;\n\t  var styleEl = doc.getElementById('react-draggable-style-el');\n\t  if (!styleEl) {\n\t    styleEl = doc.createElement('style');\n\t    styleEl.type = 'text/css';\n\t    styleEl.id = 'react-draggable-style-el';\n\t    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {background: transparent;}\\n';\n\t    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {background: transparent;}\\n';\n\t    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n\t  }\n\t  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n\t}\n\n\tfunction removeUserSelectStyles(doc /*: ?Document*/) {\n\t  try {\n\t    if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n\t    // $FlowIgnore: IE\n\t    if (doc.selection) {\n\t      // $FlowIgnore: IE\n\t      doc.selection.empty();\n\t    } else {\n\t      window.getSelection().removeAllRanges(); // remove selection caused by scroll\n\t    }\n\t  } catch (e) {\n\t    // probably IE\n\t  }\n\t}\n\n\tfunction styleHacks() /*: Object*/ {\n\t  var childStyle /*: Object*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t  // Workaround IE pointer events; see #51\n\t  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n\t  return _extends({\n\t    touchAction: 'none'\n\t  }, childStyle);\n\t}\n\n\tfunction addClassName(el /*: HTMLElement*/, className /*: string*/) {\n\t  if (el.classList) {\n\t    el.classList.add(className);\n\t  } else {\n\t    if (!el.className.match(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)'))) {\n\t      el.className += ' ' + className;\n\t    }\n\t  }\n\t}\n\n\tfunction removeClassName(el /*: HTMLElement*/, className /*: string*/) {\n\t  if (el.classList) {\n\t    el.classList.remove(className);\n\t  } else {\n\t    el.className = el.className.replace(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)', 'g'), '');\n\t  }\n\t}\n\n\t/*:: import type Draggable from '../Draggable';*/\n\t/*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n\t/*:: import type DraggableCore from '../DraggableCore';*/\n\n\n\tfunction getBoundPosition(draggable /*: Draggable*/, x /*: number*/, y /*: number*/) /*: [number, number]*/ {\n\t  // If no bounds, short-circuit and move on\n\t  if (!draggable.props.bounds) return [x, y];\n\n\t  // Clone new bounds\n\t  var bounds = draggable.props.bounds;\n\n\t  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n\t  var node = findDOMNode(draggable);\n\n\t  if (typeof bounds === 'string') {\n\t    var ownerDocument = node.ownerDocument;\n\n\t    var ownerWindow = ownerDocument.defaultView;\n\t    var boundNode = void 0;\n\t    if (bounds === 'parent') {\n\t      boundNode = node.parentNode;\n\t    } else {\n\t      boundNode = ownerDocument.querySelector(bounds);\n\t    }\n\t    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n\t      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n\t    }\n\t    var nodeStyle = ownerWindow.getComputedStyle(node);\n\t    var boundNodeStyle = ownerWindow.getComputedStyle(boundNode);\n\t    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\t    bounds = {\n\t      left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) + int(nodeStyle.marginLeft),\n\t      top: -node.offsetTop + int(boundNodeStyle.paddingTop) + int(nodeStyle.marginTop),\n\t      right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft + int(boundNodeStyle.paddingRight) - int(nodeStyle.marginRight),\n\t      bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop + int(boundNodeStyle.paddingBottom) - int(nodeStyle.marginBottom)\n\t    };\n\t  }\n\n\t  // Keep x and y below right and bottom limits...\n\t  if (isNum(bounds.right)) x = Math.min(x, bounds.right);\n\t  if (isNum(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n\t  // But above left and top limits.\n\t  if (isNum(bounds.left)) x = Math.max(x, bounds.left);\n\t  if (isNum(bounds.top)) y = Math.max(y, bounds.top);\n\n\t  return [x, y];\n\t}\n\n\tfunction snapToGrid(grid /*: [number, number]*/, pendingX /*: number*/, pendingY /*: number*/) /*: [number, number]*/ {\n\t  var x = Math.round(pendingX / grid[0]) * grid[0];\n\t  var y = Math.round(pendingY / grid[1]) * grid[1];\n\t  return [x, y];\n\t}\n\n\tfunction canDragX(draggable /*: Draggable*/) /*: boolean*/ {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n\t}\n\n\tfunction canDragY(draggable /*: Draggable*/) /*: boolean*/ {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n\t}\n\n\t// Get {x, y} positions from event.\n\tfunction getControlPosition(e /*: MouseTouchEvent*/, touchIdentifier /*: ?number*/, draggableCore /*: DraggableCore*/) /*: ?ControlPosition*/ {\n\t  var touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\n\t  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\t  var node = findDOMNode(draggableCore);\n\t  // User can provide an offsetParent if desired.\n\t  var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n\t  return offsetXYFromParent(touchObj || e, offsetParent);\n\t}\n\n\t// Create an data object exposed by <DraggableCore>'s events\n\tfunction createCoreData(draggable /*: DraggableCore*/, x /*: number*/, y /*: number*/) /*: DraggableData*/ {\n\t  var state = draggable.state;\n\t  var isStart = !isNum(state.lastX);\n\t  var node = findDOMNode(draggable);\n\n\t  if (isStart) {\n\t    // If this is our first move, use the x and y as last coords.\n\t    return {\n\t      node: node,\n\t      deltaX: 0, deltaY: 0,\n\t      lastX: x, lastY: y,\n\t      x: x, y: y\n\t    };\n\t  } else {\n\t    // Otherwise calculate proper values.\n\t    return {\n\t      node: node,\n\t      deltaX: x - state.lastX, deltaY: y - state.lastY,\n\t      lastX: state.lastX, lastY: state.lastY,\n\t      x: x, y: y\n\t    };\n\t  }\n\t}\n\n\t// Create an data exposed by <Draggable>'s events\n\tfunction createDraggableData(draggable /*: Draggable*/, coreData /*: DraggableData*/) /*: DraggableData*/ {\n\t  var scale = draggable.props.scale;\n\t  return {\n\t    node: coreData.node,\n\t    x: draggable.state.x + coreData.deltaX / scale,\n\t    y: draggable.state.y + coreData.deltaY / scale,\n\t    deltaX: coreData.deltaX / scale,\n\t    deltaY: coreData.deltaY / scale,\n\t    lastX: draggable.state.x,\n\t    lastY: draggable.state.y\n\t  };\n\t}\n\n\t// A lot faster than stringify/parse\n\tfunction cloneBounds(bounds /*: Bounds*/) /*: Bounds*/ {\n\t  return {\n\t    left: bounds.left,\n\t    top: bounds.top,\n\t    right: bounds.right,\n\t    bottom: bounds.bottom\n\t  };\n\t}\n\n\tfunction findDOMNode(draggable /*: Draggable | DraggableCore*/) /*: HTMLElement*/ {\n\t  var node = ReactDOM.findDOMNode(draggable);\n\t  if (!node) {\n\t    throw new Error('<DraggableCore>: Unmounted during event!');\n\t  }\n\t  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\t  return node;\n\t}\n\n\t/*eslint no-console:0*/\n\tfunction log() {\n\t}\n\n\t/*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n\n\n\t// Simple abstraction for dragging events names.\n\t/*:: import type {Element as ReactElement} from 'react';*/\n\tvar eventsFor = {\n\t  touch: {\n\t    start: 'touchstart',\n\t    move: 'touchmove',\n\t    stop: 'touchend'\n\t  },\n\t  mouse: {\n\t    start: 'mousedown',\n\t    move: 'mousemove',\n\t    stop: 'mouseup'\n\t  }\n\t};\n\n\t// Default to mouse events.\n\tvar dragEventFor = eventsFor.mouse;\n\n\t/*:: type DraggableCoreState = {\n\t  dragging: boolean,\n\t  lastX: number,\n\t  lastY: number,\n\t  touchIdentifier: ?number\n\t};*/\n\t/*:: export type DraggableBounds = {\n\t  left: number,\n\t  right: number,\n\t  top: number,\n\t  bottom: number,\n\t};*/\n\t/*:: export type DraggableData = {\n\t  node: HTMLElement,\n\t  x: number, y: number,\n\t  deltaX: number, deltaY: number,\n\t  lastX: number, lastY: number,\n\t};*/\n\t/*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;*/\n\t/*:: export type ControlPosition = {x: number, y: number};*/\n\n\n\t//\n\t// Define <DraggableCore>.\n\t//\n\t// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n\t// work well with libraries that require more control over the element.\n\t//\n\n\t/*:: export type DraggableCoreProps = {\n\t  allowAnyClick: boolean,\n\t  cancel: string,\n\t  children: ReactElement<any>,\n\t  disabled: boolean,\n\t  enableUserSelectHack: boolean,\n\t  offsetParent: HTMLElement,\n\t  grid: [number, number],\n\t  handle: string,\n\t  onStart: DraggableEventHandler,\n\t  onDrag: DraggableEventHandler,\n\t  onStop: DraggableEventHandler,\n\t  onMouseDown: (e: MouseEvent) => void,\n\t};*/\n\n\tvar DraggableCore = function (_React$Component) {\n\t  inherits(DraggableCore, _React$Component);\n\n\t  function DraggableCore() {\n\t    var _ref;\n\n\t    var _temp, _this, _ret;\n\n\t    classCallCheck(this, DraggableCore);\n\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\n\t    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DraggableCore.__proto__ || Object.getPrototypeOf(DraggableCore)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n\t      dragging: false,\n\t      // Used while dragging to determine deltas.\n\t      lastX: NaN, lastY: NaN,\n\t      touchIdentifier: null\n\t    }, _this.handleDragStart = function (e) {\n\t      // Make it possible to attach event handlers on top of this one.\n\t      _this.props.onMouseDown(e);\n\n\t      // Only accept left-clicks.\n\t      if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n\t      // Get nodes. Be sure to grab relative document (could be iframed)\n\t      var thisNode = ReactDOM.findDOMNode(_this);\n\t      if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n\t        throw new Error('<DraggableCore> not mounted on DragStart!');\n\t      }\n\t      var ownerDocument = thisNode.ownerDocument;\n\n\t      // Short circuit if handle or cancel prop was provided and selector doesn't match.\n\n\t      if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !matchesSelectorAndParentsTo(e.target, _this.props.handle, thisNode) || _this.props.cancel && matchesSelectorAndParentsTo(e.target, _this.props.cancel, thisNode)) {\n\t        return;\n\t      }\n\n\t      // Set touch identifier in component state if this is a touch event. This allows us to\n\t      // distinguish between individual touches on multitouch screens by identifying which\n\t      // touchpoint was set to this element.\n\t      var touchIdentifier = getTouchIdentifier(e);\n\t      _this.setState({ touchIdentifier: touchIdentifier });\n\n\t      // Get the current drag point from the event. This is used as the offset.\n\t      var position = getControlPosition(e, touchIdentifier, _this);\n\t      if (position == null) return; // not possible but satisfies flow\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      // Create an event object with all the data parents need to make a decision here.\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      // Call event handler. If it returns explicit false, cancel.\n\t      log('calling', _this.props.onStart);\n\t      var shouldUpdate = _this.props.onStart(e, coreEvent);\n\t      if (shouldUpdate === false) return;\n\n\t      // Add a style to the body to disable user-select. This prevents text from\n\t      // being selected all over the page.\n\t      if (_this.props.enableUserSelectHack) addUserSelectStyles(ownerDocument);\n\n\t      // Initiate dragging. Set the current x and y as offsets\n\t      // so we know how much we've moved during the drag. This allows us\n\t      // to drag elements around even if they have been moved, without issue.\n\t      _this.setState({\n\t        dragging: true,\n\n\t        lastX: x,\n\t        lastY: y\n\t      });\n\n\t      // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n\t      // this element. We use different events depending on whether or not we have detected that this\n\t      // is a touch-capable device.\n\t      addEvent(ownerDocument, dragEventFor.move, _this.handleDrag);\n\t      addEvent(ownerDocument, dragEventFor.stop, _this.handleDragStop);\n\t    }, _this.handleDrag = function (e) {\n\n\t      // Prevent scrolling on mobile devices, like ipad/iphone.\n\t      if (e.type === 'touchmove') e.preventDefault();\n\n\t      // Get the current drag point from the event. This is used as the offset.\n\t      var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n\t      if (position == null) return;\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      // Snap to grid if prop has been provided\n\n\t      if (Array.isArray(_this.props.grid)) {\n\t        var _deltaX = x - _this.state.lastX,\n\t            _deltaY = y - _this.state.lastY;\n\n\t        var _snapToGrid = snapToGrid(_this.props.grid, _deltaX, _deltaY);\n\n\t        var _snapToGrid2 = slicedToArray(_snapToGrid, 2);\n\n\t        _deltaX = _snapToGrid2[0];\n\t        _deltaY = _snapToGrid2[1];\n\n\t        if (!_deltaX && !_deltaY) return; // skip useless drag\n\t        x = _this.state.lastX + _deltaX, y = _this.state.lastY + _deltaY;\n\t      }\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      // Call event handler. If it returns explicit false, trigger end.\n\t      var shouldUpdate = _this.props.onDrag(e, coreEvent);\n\t      if (shouldUpdate === false) {\n\t        try {\n\t          // $FlowIgnore\n\t          _this.handleDragStop(new MouseEvent('mouseup'));\n\t        } catch (err) {\n\t          // Old browsers\n\t          var event = ((document.createEvent('MouseEvents') /*: any*/) /*: MouseTouchEvent*/);\n\t          // I see why this insanity was deprecated\n\t          // $FlowIgnore\n\t          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\t          _this.handleDragStop(event);\n\t        }\n\t        return;\n\t      }\n\n\t      _this.setState({\n\t        lastX: x,\n\t        lastY: y\n\t      });\n\t    }, _this.handleDragStop = function (e) {\n\t      if (!_this.state.dragging) return;\n\n\t      var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n\t      if (position == null) return;\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      var thisNode = ReactDOM.findDOMNode(_this);\n\t      if (thisNode) {\n\t        // Remove user-select hack\n\t        if (_this.props.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\n\t      }\n\n\t      // Reset the el.\n\t      _this.setState({\n\t        dragging: false,\n\t        lastX: NaN,\n\t        lastY: NaN\n\t      });\n\n\t      // Call event handler\n\t      _this.props.onStop(e, coreEvent);\n\n\t      if (thisNode) {\n\t        removeEvent(thisNode.ownerDocument, dragEventFor.move, _this.handleDrag);\n\t        removeEvent(thisNode.ownerDocument, dragEventFor.stop, _this.handleDragStop);\n\t      }\n\t    }, _this.onMouseDown = function (e) {\n\t      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n\t      return _this.handleDragStart(e);\n\t    }, _this.onMouseUp = function (e) {\n\t      dragEventFor = eventsFor.mouse;\n\n\t      return _this.handleDragStop(e);\n\t    }, _this.onTouchStart = function (e) {\n\t      // We're on a touch device now, so change the event handlers\n\t      dragEventFor = eventsFor.touch;\n\n\t      return _this.handleDragStart(e);\n\t    }, _this.onTouchEnd = function (e) {\n\t      // We're on a touch device now, so change the event handlers\n\t      dragEventFor = eventsFor.touch;\n\n\t      return _this.handleDragStop(e);\n\t    }, _temp), possibleConstructorReturn(_this, _ret);\n\t  }\n\n\t  createClass(DraggableCore, [{\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n\t      // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n\t      var thisNode = ReactDOM.findDOMNode(this);\n\t      if (thisNode) {\n\t        var ownerDocument = thisNode.ownerDocument;\n\n\t        removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n\t        removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\n\t        removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n\t        removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n\t        if (this.props.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\n\t      }\n\t    }\n\n\t    // Same as onMouseDown (start drag), but now consider this a touch device.\n\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Reuse the child provided\n\t      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t      return React.cloneElement(React.Children.only(this.props.children), {\n\t        style: styleHacks(this.props.children.props.style),\n\n\t        // Note: mouseMove handler is attached to document so it will still function\n\t        // when the user drags quickly and leaves the bounds of the element.\n\t        onMouseDown: this.onMouseDown,\n\t        onTouchStart: this.onTouchStart,\n\t        onMouseUp: this.onMouseUp,\n\t        onTouchEnd: this.onTouchEnd\n\t      });\n\t    }\n\t  }]);\n\t  return DraggableCore;\n\t}(React.Component);\n\n\tDraggableCore.displayName = 'DraggableCore';\n\tDraggableCore.propTypes = {\n\t  /**\n\t   * `allowAnyClick` allows dragging using any mouse button.\n\t   * By default, we only accept the left button.\n\t   *\n\t   * Defaults to `false`.\n\t   */\n\t  allowAnyClick: propTypes.bool,\n\n\t  /**\n\t   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n\t   * with the exception of `onMouseDown`, will not fire.\n\t   */\n\t  disabled: propTypes.bool,\n\n\t  /**\n\t   * By default, we add 'user-select:none' attributes to the document body\n\t   * to prevent ugly text selection during drag. If this is causing problems\n\t   * for your app, set this to `false`.\n\t   */\n\t  enableUserSelectHack: propTypes.bool,\n\n\t  /**\n\t   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n\t   * instead of using the parent node.\n\t   */\n\t  offsetParent: function offsetParent(props /*: DraggableCoreProps*/, propName /*: $Keys<DraggableCoreProps>*/) {\n\t    if (props[propName] && props[propName].nodeType !== 1) {\n\t      throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n\t    }\n\t  },\n\n\t  /**\n\t   * `grid` specifies the x and y that dragging should snap to.\n\t   */\n\t  grid: propTypes.arrayOf(propTypes.number),\n\n\t  /**\n\t   * `scale` specifies the scale of the area you are dragging inside of. It allows\n\t   * the drag deltas to scale correctly with how far zoomed in/out you are.\n\t   */\n\t  scale: propTypes.number,\n\n\t  /**\n\t   * `handle` specifies a selector to be used as the handle that initiates drag.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *         return (\n\t   *            <Draggable handle=\".handle\">\n\t   *              <div>\n\t   *                  <div className=\"handle\">Click me to drag</div>\n\t   *                  <div>This is some other content</div>\n\t   *              </div>\n\t   *           </Draggable>\n\t   *         );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  handle: propTypes.string,\n\n\t  /**\n\t   * `cancel` specifies a selector to be used to prevent drag initialization.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *           return(\n\t   *               <Draggable cancel=\".cancel\">\n\t   *                   <div>\n\t   *                     <div className=\"cancel\">You can't drag from here</div>\n\t   *                     <div>Dragging here works fine</div>\n\t   *                   </div>\n\t   *               </Draggable>\n\t   *           );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  cancel: propTypes.string,\n\n\t  /**\n\t   * Called when dragging starts.\n\t   * If this function returns the boolean false, dragging will be canceled.\n\t   */\n\t  onStart: propTypes.func,\n\n\t  /**\n\t   * Called while dragging.\n\t   * If this function returns the boolean false, dragging will be canceled.\n\t   */\n\t  onDrag: propTypes.func,\n\n\t  /**\n\t   * Called when dragging stops.\n\t   * If this function returns the boolean false, the drag will remain active.\n\t   */\n\t  onStop: propTypes.func,\n\n\t  /**\n\t   * A workaround option which can be passed if onMouseDown needs to be accessed,\n\t   * since it'll always be blocked (as there is internal use of onMouseDown)\n\t   */\n\t  onMouseDown: propTypes.func,\n\n\t  /**\n\t   * These properties should be defined on the child, not here.\n\t   */\n\t  className: dontSetMe,\n\t  style: dontSetMe,\n\t  transform: dontSetMe\n\t};\n\tDraggableCore.defaultProps = {\n\t  allowAnyClick: false, // by default only accept left click\n\t  cancel: null,\n\t  disabled: false,\n\t  enableUserSelectHack: true,\n\t  offsetParent: null,\n\t  handle: null,\n\t  grid: null,\n\t  transform: null,\n\t  onStart: function onStart() {},\n\t  onDrag: function onDrag() {},\n\t  onStop: function onStop() {},\n\t  onMouseDown: function onMouseDown() {}\n\t};\n\n\t/*:: import type {DraggableEventHandler} from './utils/types';*/\n\t/*:: import type {Element as ReactElement} from 'react';*/\n\t/*:: type DraggableState = {\n\t  dragging: boolean,\n\t  dragged: boolean,\n\t  x: number, y: number,\n\t  slackX: number, slackY: number,\n\t  isElementSVG: boolean\n\t};*/\n\n\n\t//\n\t// Define <Draggable>\n\t//\n\n\t/*:: export type DraggableProps = {\n\t  ...$Exact<DraggableCoreProps>,\n\t  axis: 'both' | 'x' | 'y' | 'none',\n\t  bounds: DraggableBounds | string | false,\n\t  defaultClassName: string,\n\t  defaultClassNameDragging: string,\n\t  defaultClassNameDragged: string,\n\t  defaultPosition: ControlPosition,\n\t  position: ControlPosition,\n\t  scale: number\n\t};*/\n\n\tvar Draggable = function (_React$Component) {\n\t  inherits(Draggable, _React$Component);\n\n\t  function Draggable(props /*: DraggableProps*/) {\n\t    classCallCheck(this, Draggable);\n\n\t    var _this = possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this, props));\n\n\t    _this.onDragStart = function (e, coreData) {\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldStart = _this.props.onStart(e, createDraggableData(_this, coreData));\n\t      // Kills start event on core as well, so move handlers are never bound.\n\t      if (shouldStart === false) return false;\n\n\t      _this.setState({ dragging: true, dragged: true });\n\t    };\n\n\t    _this.onDrag = function (e, coreData) {\n\t      if (!_this.state.dragging) return false;\n\n\t      var uiData = createDraggableData(_this, coreData);\n\n\t      var newState /*: $Shape<DraggableState>*/ = {\n\t        x: uiData.x,\n\t        y: uiData.y\n\t      };\n\n\t      // Keep within bounds.\n\t      if (_this.props.bounds) {\n\t        // Save original x and y.\n\t        var _x = newState.x,\n\t            _y = newState.y;\n\n\t        // Add slack to the values used to calculate bound position. This will ensure that if\n\t        // we start removing slack, the element won't react to it right away until it's been\n\t        // completely removed.\n\n\t        newState.x += _this.state.slackX;\n\t        newState.y += _this.state.slackY;\n\n\t        // Get bound position. This will ceil/floor the x and y within the boundaries.\n\n\t        var _getBoundPosition = getBoundPosition(_this, newState.x, newState.y),\n\t            _getBoundPosition2 = slicedToArray(_getBoundPosition, 2),\n\t            newStateX = _getBoundPosition2[0],\n\t            newStateY = _getBoundPosition2[1];\n\n\t        newState.x = newStateX;\n\t        newState.y = newStateY;\n\n\t        // Recalculate slack by noting how much was shaved by the boundPosition handler.\n\t        newState.slackX = _this.state.slackX + (_x - newState.x);\n\t        newState.slackY = _this.state.slackY + (_y - newState.y);\n\n\t        // Update the event we fire to reflect what really happened after bounds took effect.\n\t        uiData.x = newState.x;\n\t        uiData.y = newState.y;\n\t        uiData.deltaX = newState.x - _this.state.x;\n\t        uiData.deltaY = newState.y - _this.state.y;\n\t      }\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldUpdate = _this.props.onDrag(e, uiData);\n\t      if (shouldUpdate === false) return false;\n\n\t      _this.setState(newState);\n\t    };\n\n\t    _this.onDragStop = function (e, coreData) {\n\t      if (!_this.state.dragging) return false;\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldStop = _this.props.onStop(e, createDraggableData(_this, coreData));\n\t      if (shouldStop === false) return false;\n\n\t      var newState /*: $Shape<DraggableState>*/ = {\n\t        dragging: false,\n\t        slackX: 0,\n\t        slackY: 0\n\t      };\n\n\t      // If this is a controlled component, the result of this operation will be to\n\t      // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n\t      var controlled = Boolean(_this.props.position);\n\t      if (controlled) {\n\t        var _this$props$position = _this.props.position,\n\t            _x2 = _this$props$position.x,\n\t            _y2 = _this$props$position.y;\n\n\t        newState.x = _x2;\n\t        newState.y = _y2;\n\t      }\n\n\t      _this.setState(newState);\n\t    };\n\n\t    _this.state = {\n\t      // Whether or not we are currently dragging.\n\t      dragging: false,\n\n\t      // Whether or not we have been dragged before.\n\t      dragged: false,\n\n\t      // Current transform x and y.\n\t      x: props.position ? props.position.x : props.defaultPosition.x,\n\t      y: props.position ? props.position.y : props.defaultPosition.y,\n\n\t      // Used for compensating for out-of-bounds drags\n\t      slackX: 0, slackY: 0,\n\n\t      // Can only determine if SVG after mounting\n\t      isElementSVG: false\n\t    };\n\t    return _this;\n\t  }\n\n\t  createClass(Draggable, [{\n\t    key: 'componentWillMount',\n\t    value: function componentWillMount() {\n\t      if (this.props.position && !(this.props.onDrag || this.props.onStop)) {\n\t        // eslint-disable-next-line\n\t        console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      // Check to see if the element passed is an instanceof SVGElement\n\t      if (typeof window.SVGElement !== 'undefined' && ReactDOM.findDOMNode(this) instanceof window.SVGElement) {\n\t        this.setState({ isElementSVG: true });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps /*: Object*/) {\n\t      // Set x/y if position has changed\n\t      if (nextProps.position && (!this.props.position || nextProps.position.x !== this.props.position.x || nextProps.position.y !== this.props.position.y)) {\n\t        this.setState({ x: nextProps.position.x, y: nextProps.position.y });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.setState({ dragging: false }); // prevents invariant if unmounted while dragging\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() /*: ReactElement<any>*/ {\n\t      var _classNames;\n\n\t      var style = {},\n\t          svgTransform = null;\n\n\t      // If this is controlled, we don't want to move it - unless it's dragging.\n\t      var controlled = Boolean(this.props.position);\n\t      var draggable = !controlled || this.state.dragging;\n\n\t      var position = this.props.position || this.props.defaultPosition;\n\t      var transformOpts = {\n\t        // Set left if horizontal drag is enabled\n\t        x: canDragX(this) && draggable ? this.state.x : position.x,\n\n\t        // Set top if vertical drag is enabled\n\t        y: canDragY(this) && draggable ? this.state.y : position.y\n\t      };\n\n\t      // If this element was SVG, we use the `transform` attribute.\n\t      if (this.state.isElementSVG) {\n\t        svgTransform = createSVGTransform(transformOpts);\n\t      } else {\n\t        // Add a CSS transform to move the element around. This allows us to move the element around\n\t        // without worrying about whether or not it is relatively or absolutely positioned.\n\t        // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n\t        // has a clean slate.\n\t        style = createCSSTransform(transformOpts);\n\t      }\n\n\t      var _props = this.props,\n\t          defaultClassName = _props.defaultClassName,\n\t          defaultClassNameDragging = _props.defaultClassNameDragging,\n\t          defaultClassNameDragged = _props.defaultClassNameDragged;\n\n\n\t      var children = React.Children.only(this.props.children);\n\n\t      // Mark with class while dragging\n\t      var className = classnames(children.props.className || '', defaultClassName, (_classNames = {}, defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames));\n\n\t      // Reuse the child provided\n\t      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t      return React.createElement(\n\t        DraggableCore,\n\t        _extends({}, this.props, { onStart: this.onDragStart, onDrag: this.onDrag, onStop: this.onDragStop }),\n\t        React.cloneElement(children, {\n\t          className: className,\n\t          style: _extends({}, children.props.style, style),\n\t          transform: svgTransform\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t  return Draggable;\n\t}(React.Component);\n\n\tDraggable.displayName = 'Draggable';\n\tDraggable.propTypes = _extends({}, DraggableCore.propTypes, {\n\n\t  /**\n\t   * `axis` determines which axis the draggable can move.\n\t   *\n\t   *  Note that all callbacks will still return data as normal. This only\n\t   *  controls flushing to the DOM.\n\t   *\n\t   * 'both' allows movement horizontally and vertically.\n\t   * 'x' limits movement to horizontal axis.\n\t   * 'y' limits movement to vertical axis.\n\t   * 'none' limits all movement.\n\t   *\n\t   * Defaults to 'both'.\n\t   */\n\t  axis: propTypes.oneOf(['both', 'x', 'y', 'none']),\n\n\t  /**\n\t   * `bounds` determines the range of movement available to the element.\n\t   * Available values are:\n\t   *\n\t   * 'parent' restricts movement within the Draggable's parent node.\n\t   *\n\t   * Alternatively, pass an object with the following properties, all of which are optional:\n\t   *\n\t   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n\t   *\n\t   * All values are in px.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *         return (\n\t   *            <Draggable bounds={{right: 300, bottom: 300}}>\n\t   *              <div>Content</div>\n\t   *           </Draggable>\n\t   *         );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  bounds: propTypes.oneOfType([propTypes.shape({\n\t    left: propTypes.number,\n\t    right: propTypes.number,\n\t    top: propTypes.number,\n\t    bottom: propTypes.number\n\t  }), propTypes.string, propTypes.oneOf([false])]),\n\n\t  defaultClassName: propTypes.string,\n\t  defaultClassNameDragging: propTypes.string,\n\t  defaultClassNameDragged: propTypes.string,\n\n\t  /**\n\t   * `defaultPosition` specifies the x and y that the dragged item should start at\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *      let App = React.createClass({\n\t   *          render: function () {\n\t   *              return (\n\t   *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n\t   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n\t   *                  </Draggable>\n\t   *              );\n\t   *          }\n\t   *      });\n\t   * ```\n\t   */\n\t  defaultPosition: propTypes.shape({\n\t    x: propTypes.number,\n\t    y: propTypes.number\n\t  }),\n\n\t  /**\n\t   * `position`, if present, defines the current position of the element.\n\t   *\n\t   *  This is similar to how form elements in React work - if no `position` is supplied, the component\n\t   *  is uncontrolled.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *      let App = React.createClass({\n\t   *          render: function () {\n\t   *              return (\n\t   *                  <Draggable position={{x: 25, y: 25}}>\n\t   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n\t   *                  </Draggable>\n\t   *              );\n\t   *          }\n\t   *      });\n\t   * ```\n\t   */\n\t  position: propTypes.shape({\n\t    x: propTypes.number,\n\t    y: propTypes.number\n\t  }),\n\n\t  /**\n\t   * These properties should be defined on the child, not here.\n\t   */\n\t  className: dontSetMe,\n\t  style: dontSetMe,\n\t  transform: dontSetMe\n\t});\n\tDraggable.defaultProps = _extends({}, DraggableCore.defaultProps, {\n\t  axis: 'both',\n\t  bounds: false,\n\t  defaultClassName: 'react-draggable',\n\t  defaultClassNameDragging: 'react-draggable-dragging',\n\t  defaultClassNameDragged: 'react-draggable-dragged',\n\t  defaultPosition: { x: 0, y: 0 },\n\t  position: null,\n\t  scale: 1\n\t});\n\n\t// Previous versions of this lib exported <Draggable> as the root export. As to not break\n\t// them, or TypeScript, we export *both* as the root and as 'default'.\n\t// See https://github.com/mzabriskie/react-draggable/pull/254\n\t// and https://github.com/mzabriskie/react-draggable/issues/266\n\tDraggable.default = Draggable;\n\tDraggable.DraggableCore = DraggableCore;\n\n\treturn Draggable;\n\n})));\n//# sourceMappingURL=react-draggable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-draggable/dist/react-draggable.js\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\",\"root\":\"ReactDOM\"}\n// module id = 7\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDraggable = require('react-draggable');\n\nvar _cloneElement = require('./cloneElement');\n\nvar _cloneElement2 = _interopRequireDefault(_cloneElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Resizable = function (_React$Component) {\n  _inherits(Resizable, _React$Component);\n\n  function Resizable() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Resizable);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      resizing: false,\n      width: _this.props.width, height: _this.props.height,\n      slackW: 0, slackH: 0\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Resizable.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // If parent changes height/width, set that in our state.\n    if (!this.state.resizing && (nextProps.width !== this.props.width || nextProps.height !== this.props.height)) {\n      this.setState({\n        width: nextProps.width,\n        height: nextProps.height\n      });\n    }\n  };\n\n  Resizable.prototype.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  };\n\n  // If you do this, be careful of constraints\n\n\n  Resizable.prototype.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n\n\n    if (this.props.lockAspectRatio) {\n      var ratio = this.state.width / this.state.height;\n      height = width / ratio;\n      width = height * ratio;\n    }\n\n    if (!min && !max) return [width, height];\n\n    var oldW = width,\n        oldH = height;\n\n    // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _state = this.state,\n        slackW = _state.slackW,\n        slackH = _state.slackH;\n\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    }\n\n    // If the numbers changed, we must have introduced some slack. Record it for the next iteration.\n    slackW += oldW - width;\n    slackH += oldH - height;\n    if (slackW !== this.state.slackW || slackH !== this.state.slackH) {\n      this.setState({ slackW: slackW, slackH: slackH });\n    }\n\n    return [width, height];\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  Resizable.prototype.resizeHandler = function resizeHandler(handlerName) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n\n\n      // Axis restrictions\n      var canDragX = _this2.props.axis === 'both' || _this2.props.axis === 'x';\n      var canDragY = _this2.props.axis === 'both' || _this2.props.axis === 'y';\n\n      // Update w/h\n      var width = _this2.state.width + (canDragX ? deltaX : 0);\n      var height = _this2.state.height + (canDragY ? deltaY : 0);\n\n      // Early return if no change\n      var widthChanged = width !== _this2.state.width,\n          heightChanged = height !== _this2.state.height;\n      if (handlerName === 'onResize' && !widthChanged && !heightChanged) return;\n\n      // Set the appropriate state for this handler.\n      var _runConstraints = _this2.runConstraints(width, height);\n\n      width = _runConstraints[0];\n      height = _runConstraints[1];\n      var newState = {};\n      if (handlerName === 'onResizeStart') {\n        newState.resizing = true;\n      } else if (handlerName === 'onResizeStop') {\n        newState.resizing = false;\n        newState.slackW = newState.slackH = 0;\n      } else {\n        // Early return if no change after constraints\n        if (width === _this2.state.width && height === _this2.state.height) return;\n        newState.width = width;\n        newState.height = height;\n      }\n\n      var hasCb = typeof _this2.props[handlerName] === 'function';\n      if (hasCb) {\n        if (typeof e.persist === 'function') e.persist();\n        _this2.setState(newState, function () {\n          return _this2.props[handlerName](e, { node: node, size: { width: width, height: height } });\n        });\n      } else {\n        _this2.setState(newState);\n      }\n    };\n  };\n\n  Resizable.prototype.render = function render() {\n    // eslint-disable-next-line no-unused-vars\n    var _props = this.props,\n        children = _props.children,\n        draggableOpts = _props.draggableOpts,\n        width = _props.width,\n        height = _props.height,\n        handleSize = _props.handleSize,\n        lockAspectRatio = _props.lockAspectRatio,\n        axis = _props.axis,\n        minConstraints = _props.minConstraints,\n        maxConstraints = _props.maxConstraints,\n        onResize = _props.onResize,\n        onResizeStop = _props.onResizeStop,\n        onResizeStart = _props.onResizeStart,\n        p = _objectWithoutProperties(_props, ['children', 'draggableOpts', 'width', 'height', 'handleSize', 'lockAspectRatio', 'axis', 'minConstraints', 'maxConstraints', 'onResize', 'onResizeStop', 'onResizeStart']);\n\n    var className = p.className ? p.className + ' react-resizable' : 'react-resizable';\n\n    // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // A draggable handle.\n    return (0, _cloneElement2.default)(children, _extends({}, p, {\n      className: className,\n      children: [children.props.children, _react2.default.createElement(\n        _reactDraggable.DraggableCore,\n        _extends({}, draggableOpts, {\n          key: 'resizableHandle',\n          onStop: this.resizeHandler('onResizeStop'),\n          onStart: this.resizeHandler('onResizeStart'),\n          onDrag: this.resizeHandler('onResize')\n        }),\n        _react2.default.createElement('span', { className: 'react-resizable-handle' })\n      )]\n    }));\n  };\n\n  return Resizable;\n}(_react2.default.Component);\n\nResizable.propTypes = {\n  //\n  // Required Props\n  //\n\n  // Require that one and only one child be present.\n  children: _propTypes2.default.element.isRequired,\n\n  // Initial w/h\n  width: _propTypes2.default.number.isRequired,\n  height: _propTypes2.default.number.isRequired,\n\n  //\n  // Optional props\n  //\n\n  // If you change this, be sure to update your css\n  handleSize: _propTypes2.default.array,\n\n  // If true, will only allow width/height to move in lockstep\n  lockAspectRatio: _propTypes2.default.bool,\n\n  // Restricts resizing to a particular axis (default: 'both')\n  // 'both' - allows resizing by width or height\n  // 'x' - only allows the width to be changed\n  // 'y' - only allows the height to be changed\n  // 'none' - disables resizing altogether\n  axis: _propTypes2.default.oneOf(['both', 'x', 'y', 'none']),\n\n  // Min/max size\n  minConstraints: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  maxConstraints: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\n  // Callbacks\n  onResizeStop: _propTypes2.default.func,\n  onResizeStart: _propTypes2.default.func,\n  onResize: _propTypes2.default.func,\n\n  // These will be passed wholesale to react-draggable's DraggableCore\n  draggableOpts: _propTypes2.default.object\n};\nResizable.defaultProps = {\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  axis: 'both',\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity]\n};\nexports.default = Resizable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-resizable/build/Resizable.js\n// module id = 8\n// module chunks = 0","// @flow\n\nimport { cloneLayout, compact, correctBounds } from \"./utils\";\n\nimport type { CompactType, Layout } from \"./utils\";\n\nexport type ResponsiveLayout = {\n  lg?: Layout,\n  md?: Layout,\n  sm?: Layout,\n  xs?: Layout,\n  xxs?: Layout\n};\n\ntype Breakpoint = string;\n\ntype Breakpoints = {\n  lg?: number,\n  md?: number,\n  sm?: number,\n  xs?: number,\n  xxs?: number\n};\n\n/**\n * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\n *\n * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\n * @param  {Number} width Screen width.\n * @return {String}       Highest breakpoint that is less than width.\n */\nexport function getBreakpointFromWidth(\n  breakpoints: Breakpoints,\n  width: number\n): Breakpoint {\n  const sorted = sortBreakpoints(breakpoints);\n  let matching = sorted[0];\n  for (let i = 1, len = sorted.length; i < len; i++) {\n    const breakpointName = sorted[i];\n    if (width > breakpoints[breakpointName]) matching = breakpointName;\n  }\n  return matching;\n}\n\n/**\n * Given a breakpoint, get the # of cols set for it.\n * @param  {String} breakpoint Breakpoint name.\n * @param  {Object} cols       Map of breakpoints to cols.\n * @return {Number}            Number of cols.\n */\nexport function getColsFromBreakpoint(\n  breakpoint: Breakpoint,\n  cols: Breakpoints\n): number {\n  if (!cols[breakpoint]) {\n    throw new Error(\n      \"ResponsiveReactGridLayout: `cols` entry for breakpoint \" +\n        breakpoint +\n        \" is missing!\"\n    );\n  }\n  return cols[breakpoint];\n}\n\n/**\n * Given existing layouts and a new breakpoint, find or generate a new layout.\n *\n * This finds the layout above the new one and generates from it, if it exists.\n *\n * @param  {Object} layouts     Existing layouts.\n * @param  {Array} breakpoints All breakpoints.\n * @param  {String} breakpoint New breakpoint.\n * @param  {String} breakpoint Last breakpoint (for fallback).\n * @param  {Number} cols       Column count at new breakpoint.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}             New layout.\n */\nexport function findOrGenerateResponsiveLayout(\n  layouts: ResponsiveLayout,\n  breakpoints: Breakpoints,\n  breakpoint: Breakpoint,\n  lastBreakpoint: Breakpoint,\n  cols: number,\n  compactType: CompactType\n): Layout {\n  // If it already exists, just return it.\n  if (layouts[breakpoint]) return cloneLayout(layouts[breakpoint]);\n  // Find or generate the next layout\n  let layout = layouts[lastBreakpoint];\n  const breakpointsSorted = sortBreakpoints(breakpoints);\n  const breakpointsAbove = breakpointsSorted.slice(\n    breakpointsSorted.indexOf(breakpoint)\n  );\n  for (let i = 0, len = breakpointsAbove.length; i < len; i++) {\n    const b = breakpointsAbove[i];\n    if (layouts[b]) {\n      layout = layouts[b];\n      break;\n    }\n  }\n  layout = cloneLayout(layout || []); // clone layout so we don't modify existing items\n  return compact(correctBounds(layout, { cols: cols }), compactType, cols);\n}\n\n/**\n * Given breakpoints, return an array of breakpoints sorted by width. This is usually\n * e.g. ['xxs', 'xs', 'sm', ...]\n *\n * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.\n * @return {Array}              Sorted breakpoints.\n */\nexport function sortBreakpoints(breakpoints: Breakpoints): Array<Breakpoint> {\n  const keys: Array<string> = Object.keys(breakpoints);\n  return keys.sort(function(a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/responsiveUtils.js","module.exports = require('./lib/ReactGridLayout').default;\nmodule.exports.utils = require('./lib/utils');\nmodule.exports.Responsive = require('./lib/ResponsiveReactGridLayout').default;\nmodule.exports.Responsive.utils = require('./lib/responsiveUtils');\nmodule.exports.WidthProvider = require('./lib/components/WidthProvider').default;\n\n\n\n// WEBPACK FOOTER //\n// ./index-dev.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 11\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 12\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 13\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 14\n// module chunks = 0","// @flow\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DraggableCore } from \"react-draggable\";\nimport { Resizable } from \"react-resizable\";\nimport { perc, setTopLeft, setTransform } from \"./utils\";\nimport classNames from \"classnames\";\nimport type { Element as ReactElement, Node as ReactNode } from \"react\";\n\nimport type {\n  ReactDraggableCallbackData,\n  GridDragEvent,\n  GridResizeEvent,\n  Position\n} from \"./utils\";\n\ntype PartialPosition = { top: number, left: number };\ntype GridItemCallback<Data: GridDragEvent | GridResizeEvent> = (\n  i: string,\n  w: number,\n  h: number,\n  Data\n) => void;\n\ntype State = {\n  resizing: ?{ width: number, height: number },\n  dragging: ?{ top: number, left: number },\n  className: string\n};\n\ntype Props = {\n  children: ReactElement<any>,\n  cols: number,\n  containerWidth: number,\n  margin: [number, number],\n  containerPadding: [number, number],\n  rowHeight: number,\n  maxRows: number,\n  isDraggable: boolean,\n  isResizable: boolean,\n  static?: boolean,\n  useCSSTransforms?: boolean,\n  usePercentages?: boolean,\n\n  className: string,\n  style?: Object,\n  // Draggability\n  cancel: string,\n  handle: string,\n\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n\n  minW: number,\n  maxW: number,\n  minH: number,\n  maxH: number,\n  i: string,\n\n  onDrag?: GridItemCallback<GridDragEvent>,\n  onDragStart?: GridItemCallback<GridDragEvent>,\n  onDragStop?: GridItemCallback<GridDragEvent>,\n  onResize?: GridItemCallback<GridResizeEvent>,\n  onResizeStart?: GridItemCallback<GridResizeEvent>,\n  onResizeStop?: GridItemCallback<GridResizeEvent>\n};\n\n/**\n * An individual item within a ReactGridLayout.\n */\nexport default class GridItem extends React.Component<Props, State> {\n  static propTypes = {\n    // Children must be only a single element\n    children: PropTypes.element,\n\n    // General grid attributes\n    cols: PropTypes.number.isRequired,\n    containerWidth: PropTypes.number.isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    margin: PropTypes.array.isRequired,\n    maxRows: PropTypes.number.isRequired,\n    containerPadding: PropTypes.array.isRequired,\n\n    // These are all in grid units\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    w: PropTypes.number.isRequired,\n    h: PropTypes.number.isRequired,\n\n    // All optional\n    minW: function(props: Props, propName: string) {\n      const value = props[propName];\n      if (typeof value !== \"number\") return new Error(\"minWidth not Number\");\n      if (value > props.w || value > props.maxW)\n        return new Error(\"minWidth larger than item width/maxWidth\");\n    },\n\n    maxW: function(props: Props, propName: string) {\n      const value = props[propName];\n      if (typeof value !== \"number\") return new Error(\"maxWidth not Number\");\n      if (value < props.w || value < props.minW)\n        return new Error(\"maxWidth smaller than item width/minWidth\");\n    },\n\n    minH: function(props: Props, propName: string) {\n      const value = props[propName];\n      if (typeof value !== \"number\") return new Error(\"minHeight not Number\");\n      if (value > props.h || value > props.maxH)\n        return new Error(\"minHeight larger than item height/maxHeight\");\n    },\n\n    maxH: function(props: Props, propName: string) {\n      const value = props[propName];\n      if (typeof value !== \"number\") return new Error(\"maxHeight not Number\");\n      if (value < props.h || value < props.minH)\n        return new Error(\"maxHeight smaller than item height/minHeight\");\n    },\n\n    // ID is nice to have for callbacks\n    i: PropTypes.string.isRequired,\n\n    // Functions\n    onDragStop: PropTypes.func,\n    onDragStart: PropTypes.func,\n    onDrag: PropTypes.func,\n    onResizeStop: PropTypes.func,\n    onResizeStart: PropTypes.func,\n    onResize: PropTypes.func,\n\n    // Flags\n    isDraggable: PropTypes.bool.isRequired,\n    isResizable: PropTypes.bool.isRequired,\n    static: PropTypes.bool,\n\n    // Use CSS transforms instead of top/left\n    useCSSTransforms: PropTypes.bool.isRequired,\n\n    // Others\n    className: PropTypes.string,\n    // Selector for draggable handle\n    handle: PropTypes.string,\n    // Selector for draggable cancel (see react-draggable)\n    cancel: PropTypes.string\n  };\n\n  static defaultProps = {\n    className: \"\",\n    cancel: \"\",\n    handle: \"\",\n    minH: 1,\n    minW: 1,\n    maxH: Infinity,\n    maxW: Infinity\n  };\n\n  state: State = {\n    resizing: null,\n    dragging: null,\n    className: \"\"\n  };\n\n  // Helper for generating column width\n  calcColWidth(): number {\n    const { margin, containerPadding, containerWidth, cols } = this.props;\n    return (\n      (containerWidth - margin[0] * (cols - 1) - containerPadding[0] * 2) / cols\n    );\n  }\n\n  /**\n   * Return position on the page given an x, y, w, h.\n   * left, top, width, height are all in pixels.\n   * @param  {Number}  x             X coordinate in grid units.\n   * @param  {Number}  y             Y coordinate in grid units.\n   * @param  {Number}  w             W coordinate in grid units.\n   * @param  {Number}  h             H coordinate in grid units.\n   * @return {Object}                Object containing coords.\n   */\n  calcPosition(\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    state: ?Object\n  ): Position {\n    const { margin, containerPadding, rowHeight } = this.props;\n    const colWidth = this.calcColWidth();\n\n    const out = {\n      left: Math.round((colWidth + margin[0]) * x + containerPadding[0]),\n      top: Math.round((rowHeight + margin[1]) * y + containerPadding[1]),\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\n      // Fix this if it occurs.\n      // Note we do it here rather than later because Math.round(Infinity) causes deopt\n      width:\n        w === Infinity\n          ? w\n          : Math.round(colWidth * w + Math.max(0, w - 1) * margin[0]),\n      height:\n        h === Infinity\n          ? h\n          : Math.round(rowHeight * h + Math.max(0, h - 1) * margin[1])\n    };\n\n    if (state && state.resizing) {\n      out.width = Math.round(state.resizing.width);\n      out.height = Math.round(state.resizing.height);\n    }\n\n    if (state && state.dragging) {\n      out.top = Math.round(state.dragging.top);\n      out.left = Math.round(state.dragging.left);\n    }\n\n    return out;\n  }\n\n  /**\n   * Translate x and y coordinates from pixels to grid units.\n   * @param  {Number} top  Top position (relative to parent) in pixels.\n   * @param  {Number} left Left position (relative to parent) in pixels.\n   * @return {Object} x and y in grid units.\n   */\n  calcXY(top: number, left: number): { x: number, y: number } {\n    const { margin, cols, rowHeight, w, h, maxRows } = this.props;\n    const colWidth = this.calcColWidth();\n\n    // left = colWidth * x + margin * (x + 1)\n    // l = cx + m(x+1)\n    // l = cx + mx + m\n    // l - m = cx + mx\n    // l - m = x(c + m)\n    // (l - m) / (c + m) = x\n    // x = (left - margin) / (coldWidth + margin)\n    let x = Math.round((left - margin[0]) / (colWidth + margin[0]));\n    let y = Math.round((top - margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    x = Math.max(Math.min(x, cols - w), 0);\n    y = Math.max(Math.min(y, maxRows - h), 0);\n\n    return { x, y };\n  }\n\n  /**\n   * Given a height and width in pixel values, calculate grid units.\n   * @param  {Number} height Height in pixels.\n   * @param  {Number} width  Width in pixels.\n   * @return {Object} w, h as grid units.\n   */\n  calcWH({\n    height,\n    width\n  }: {\n    height: number,\n    width: number\n  }): { w: number, h: number } {\n    const { margin, maxRows, cols, rowHeight, x, y } = this.props;\n    const colWidth = this.calcColWidth();\n\n    // width = colWidth * w - (margin * (w - 1))\n    // ...\n    // w = (width + margin) / (colWidth + margin)\n    let w = Math.round((width + margin[0]) / (colWidth + margin[0]));\n    let h = Math.round((height + margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    w = Math.max(Math.min(w, cols - x), 0);\n    h = Math.max(Math.min(h, maxRows - y), 0);\n    return { w, h };\n  }\n\n  /**\n   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\n   * we don't know exactly what the browser viewport is.\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\n   *\n   * @param  {Object} pos Position object with width, height, left, top.\n   * @return {Object}     Style object.\n   */\n  createStyle(pos: Position): { [key: string]: ?string } {\n    const { usePercentages, containerWidth, useCSSTransforms } = this.props;\n\n    let style;\n    // CSS Transforms support (default)\n    if (useCSSTransforms) {\n      style = setTransform(pos);\n    } else {\n      // top,left (slow)\n      style = setTopLeft(pos);\n\n      // This is used for server rendering.\n      if (usePercentages) {\n        style.left = perc(pos.left / containerWidth);\n        style.width = perc(pos.width / containerWidth);\n      }\n    }\n\n    return style;\n  }\n\n  /**\n   * Mix a Draggable instance into a child.\n   * @param  {Element} child    Child element.\n   * @return {Element}          Child wrapped in Draggable.\n   */\n  mixinDraggable(child: ReactElement<any>): ReactElement<any> {\n    return (\n      <DraggableCore\n        onStart={this.onDragHandler(\"onDragStart\")}\n        onDrag={this.onDragHandler(\"onDrag\")}\n        onStop={this.onDragHandler(\"onDragStop\")}\n        handle={this.props.handle}\n        cancel={\n          \".react-resizable-handle\" +\n          (this.props.cancel ? \",\" + this.props.cancel : \"\")\n        }\n      >\n        {child}\n      </DraggableCore>\n    );\n  }\n\n  /**\n   * Mix a Resizable instance into a child.\n   * @param  {Element} child    Child element.\n   * @param  {Object} position  Position object (pixel values)\n   * @return {Element}          Child wrapped in Resizable.\n   */\n  mixinResizable(\n    child: ReactElement<any>,\n    position: Position\n  ): ReactElement<any> {\n    const { cols, x, minW, minH, maxW, maxH } = this.props;\n\n    // This is the max possible width - doesn't go to infinity because of the width of the window\n    const maxWidth = this.calcPosition(0, 0, cols - x, 0).width;\n\n    // Calculate min/max constraints using our min & maxes\n    const mins = this.calcPosition(0, 0, minW, minH);\n    const maxes = this.calcPosition(0, 0, maxW, maxH);\n    const minConstraints = [mins.width, mins.height];\n    const maxConstraints = [\n      Math.min(maxes.width, maxWidth),\n      Math.min(maxes.height, Infinity)\n    ];\n    return (\n      <Resizable\n        width={position.width}\n        height={position.height}\n        minConstraints={minConstraints}\n        maxConstraints={maxConstraints}\n        onResizeStop={this.onResizeHandler(\"onResizeStop\")}\n        onResizeStart={this.onResizeHandler(\"onResizeStart\")}\n        onResize={this.onResizeHandler(\"onResize\")}\n      >\n        {child}\n      </Resizable>\n    );\n  }\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  onDragHandler(handlerName: string) {\n    return (e: Event, { node, deltaX, deltaY }: ReactDraggableCallbackData) => {\n      const handler = this.props[handlerName];\n      if (!handler) return;\n\n      const newPosition: PartialPosition = { top: 0, left: 0 };\n\n      // Get new XY\n      switch (handlerName) {\n        case \"onDragStart\": {\n          // TODO: this wont work on nested parents\n          const { offsetParent } = node;\n          if (!offsetParent) return;\n          const parentRect = offsetParent.getBoundingClientRect();\n          const clientRect = node.getBoundingClientRect();\n          newPosition.left =\n            clientRect.left - parentRect.left + offsetParent.scrollLeft;\n          newPosition.top =\n            clientRect.top - parentRect.top + offsetParent.scrollTop;\n          this.setState({ dragging: newPosition });\n          break;\n        }\n        case \"onDrag\":\n          if (!this.state.dragging)\n            throw new Error(\"onDrag called before onDragStart.\");\n          newPosition.left = this.state.dragging.left + deltaX;\n          newPosition.top = this.state.dragging.top + deltaY;\n          this.setState({ dragging: newPosition });\n          break;\n        case \"onDragStop\":\n          if (!this.state.dragging)\n            throw new Error(\"onDragEnd called before onDragStart.\");\n          newPosition.left = this.state.dragging.left;\n          newPosition.top = this.state.dragging.top;\n          this.setState({ dragging: null });\n          break;\n        default:\n          throw new Error(\n            \"onDragHandler called with unrecognized handlerName: \" + handlerName\n          );\n      }\n\n      const { x, y } = this.calcXY(newPosition.top, newPosition.left);\n\n      return handler.call(this, this.props.i, x, y, { e, node, newPosition });\n    };\n  }\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  onResizeHandler(handlerName: string) {\n    return (\n      e: Event,\n      { node, size }: { node: HTMLElement, size: Position }\n    ) => {\n      const handler = this.props[handlerName];\n      if (!handler) return;\n      const { cols, x, i, maxW, minW, maxH, minH } = this.props;\n\n      // Get new XY\n      let { w, h } = this.calcWH(size);\n\n      // Cap w at numCols\n      w = Math.min(w, cols - x);\n      // Ensure w is at least 1\n      w = Math.max(w, 1);\n\n      // Min/max capping\n      w = Math.max(Math.min(w, maxW), minW);\n      h = Math.max(Math.min(h, maxH), minH);\n\n      this.setState({ resizing: handlerName === \"onResizeStop\" ? null : size });\n\n      handler.call(this, i, w, h, { e, node, size });\n    };\n  }\n\n  render(): ReactNode {\n    const {\n      x,\n      y,\n      w,\n      h,\n      isDraggable,\n      isResizable,\n      useCSSTransforms\n    } = this.props;\n\n    const pos = this.calcPosition(x, y, w, h, this.state);\n    const child = React.Children.only(this.props.children);\n\n    // Create the child element. We clone the existing element but modify its className and style.\n    let newChild = React.cloneElement(child, {\n      className: classNames(\n        \"react-grid-item\",\n        child.props.className,\n        this.props.className,\n        {\n          static: this.props.static,\n          resizing: Boolean(this.state.resizing),\n          \"react-draggable\": isDraggable,\n          \"react-draggable-dragging\": Boolean(this.state.dragging),\n          cssTransforms: useCSSTransforms\n        }\n      ),\n      // We can set the width and height on the child, but unfortunately we can't set the position.\n      style: {\n        ...this.props.style,\n        ...child.props.style,\n        ...this.createStyle(pos)\n      }\n    });\n\n    // Resizable support. This is usually on but the user can toggle it off.\n    if (isResizable) newChild = this.mixinResizable(newChild, pos);\n\n    // Draggable support. This is always on, except for with placeholders.\n    if (isDraggable) newChild = this.mixinDraggable(newChild);\n\n    return newChild;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/GridItem.jsx","'use strict';\nmodule.exports = function() {\n  throw new Error(\"Don't instantiate Resizable directly! Use require('react-resizable').Resizable\");\n};\n\nmodule.exports.Resizable = require('./build/Resizable').default;\nmodule.exports.ResizableBox = require('./build/ResizableBox').default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-resizable/index.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// React.addons.cloneWithProps look-alike that merges style & className.\nmodule.exports = function cloneElement(element, props) {\n  if (props.style && element.props.style) {\n    props.style = _extends({}, element.props.style, props.style);\n  }\n  if (props.className && element.props.className) {\n    props.className = element.props.className + ' ' + props.className;\n  }\n  return _react2.default.cloneElement(element, props);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-resizable/build/cloneElement.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Resizable = require('./Resizable');\n\nvar _Resizable2 = _interopRequireDefault(_Resizable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// An example use of Resizable.\nvar ResizableBox = function (_React$Component) {\n  _inherits(ResizableBox, _React$Component);\n\n  function ResizableBox() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResizableBox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      width: _this.props.width,\n      height: _this.props.height\n    }, _this.onResize = function (e, data) {\n      var size = data.size;\n      var width = size.width,\n          height = size.height;\n\n\n      if (_this.props.onResize) {\n        e.persist && e.persist();\n        _this.setState(size, function () {\n          return _this.props.onResize && _this.props.onResize(e, data);\n        });\n      } else {\n        _this.setState(size);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ResizableBox.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.setState({\n        width: nextProps.width,\n        height: nextProps.height\n      });\n    }\n  };\n\n  ResizableBox.prototype.render = function render() {\n    // Basic wrapper around a Resizable instance.\n    // If you use Resizable directly, you are responsible for updating the child component\n    // with a new width and height.\n    var _props = this.props,\n        handleSize = _props.handleSize,\n        onResize = _props.onResize,\n        onResizeStart = _props.onResizeStart,\n        onResizeStop = _props.onResizeStop,\n        draggableOpts = _props.draggableOpts,\n        minConstraints = _props.minConstraints,\n        maxConstraints = _props.maxConstraints,\n        lockAspectRatio = _props.lockAspectRatio,\n        axis = _props.axis,\n        width = _props.width,\n        height = _props.height,\n        props = _objectWithoutProperties(_props, ['handleSize', 'onResize', 'onResizeStart', 'onResizeStop', 'draggableOpts', 'minConstraints', 'maxConstraints', 'lockAspectRatio', 'axis', 'width', 'height']);\n\n    return _react2.default.createElement(\n      _Resizable2.default,\n      {\n        handleSize: handleSize,\n        width: this.state.width,\n        height: this.state.height,\n        onResizeStart: onResizeStart,\n        onResize: this.onResize,\n        onResizeStop: onResizeStop,\n        draggableOpts: draggableOpts,\n        minConstraints: minConstraints,\n        maxConstraints: maxConstraints,\n        lockAspectRatio: lockAspectRatio,\n        axis: axis\n      },\n      _react2.default.createElement('div', _extends({ style: { width: this.state.width + 'px', height: this.state.height + 'px' } }, props))\n    );\n  };\n\n  return ResizableBox;\n}(_react2.default.Component);\n\nResizableBox.propTypes = {\n  height: _propTypes2.default.number,\n  width: _propTypes2.default.number\n};\nResizableBox.defaultProps = {\n  handleSize: [20, 20]\n};\nexports.default = ResizableBox;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-resizable/build/ResizableBox.js\n// module id = 18\n// module chunks = 0","// @flow\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isEqual from \"lodash.isequal\";\n\nimport {\n  cloneLayout,\n  synchronizeLayoutWithChildren,\n  validateLayout,\n  noop\n} from \"./utils\";\nimport {\n  getBreakpointFromWidth,\n  getColsFromBreakpoint,\n  findOrGenerateResponsiveLayout\n} from \"./responsiveUtils\";\nimport ReactGridLayout from \"./ReactGridLayout\";\nimport type { Props as RGLProps } from \"./ReactGridLayout\";\nimport type { Layout } from \"./utils\";\n\nconst type = obj => Object.prototype.toString.call(obj);\n\ntype State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number\n};\n\ntype Props<Breakpoint: string = string> = {\n  ...$Exact<RGLProps>,\n\n  // Responsive config\n  breakpoint: Breakpoint,\n  breakpoints: { [key: Breakpoint]: number },\n  cols: { [key: Breakpoint]: number },\n  layouts: { [key: Breakpoint]: Layout },\n  width: number,\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: (Layout, { [key: Breakpoint]: Layout }) => void,\n  onWidthChange: (\n    containerWidth: number,\n    margin: [number, number],\n    cols: number,\n    containerPadding: [number, number] | null\n  ) => void\n};\n\nexport default class ResponsiveReactGridLayout extends React.Component<\n  Props<>,\n  State\n> {\n  // This should only include propTypes needed in this code; RGL itself\n  // will do validation of the rest props passed to it.\n  static propTypes = {\n    //\n    // Basic props\n    //\n\n    // Optional, but if you are managing width yourself you may want to set the breakpoint\n    // yourself as well.\n    breakpoint: PropTypes.string,\n\n    // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n    breakpoints: PropTypes.object,\n\n    // # of cols. This is a breakpoint -> cols map\n    cols: PropTypes.object,\n\n    // layouts is an object mapping breakpoints to layouts.\n    // e.g. {lg: Layout, md: Layout, ...}\n    layouts(props: Props<>, propName: string) {\n      if (type(props[propName]) !== \"[object Object]\") {\n        throw new Error(\n          \"Layout property must be an object. Received: \" +\n            type(props[propName])\n        );\n      }\n      Object.keys(props[propName]).forEach(key => {\n        if (!(key in props.breakpoints)) {\n          throw new Error(\n            \"Each key in layouts must align with a key in breakpoints.\"\n          );\n        }\n        validateLayout(props.layouts[key], \"layouts.\" + key);\n      });\n    },\n\n    // The width of this component.\n    // Required in this propTypes stanza because generateInitialState() will fail without it.\n    width: PropTypes.number.isRequired,\n\n    //\n    // Callbacks\n    //\n\n    // Calls back with breakpoint and new # cols\n    onBreakpointChange: PropTypes.func,\n\n    // Callback so you can save the layout.\n    // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n    onLayoutChange: PropTypes.func,\n\n    // Calls back with (containerWidth, margin, cols, containerPadding)\n    onWidthChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n    cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n    layouts: {},\n    onBreakpointChange: noop,\n    onLayoutChange: noop,\n    onWidthChange: noop\n  };\n\n  state = this.generateInitialState();\n\n  generateInitialState(): State {\n    const { width, breakpoints, layouts, cols } = this.props;\n    const breakpoint = getBreakpointFromWidth(breakpoints, width);\n    const colNo = getColsFromBreakpoint(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    const compactType =\n      this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    const initialLayout = findOrGenerateResponsiveLayout(\n      layouts,\n      breakpoints,\n      breakpoint,\n      breakpoint,\n      colNo,\n      compactType\n    );\n\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props<*>) {\n    // Allow parent to set width or breakpoint directly.\n    if (\n      nextProps.width != this.props.width ||\n      nextProps.breakpoint !== this.props.breakpoint ||\n      !isEqual(nextProps.breakpoints, this.props.breakpoints) ||\n      !isEqual(nextProps.cols, this.props.cols)\n    ) {\n      this.onWidthChange(nextProps);\n    } else if (!isEqual(nextProps.layouts, this.props.layouts)) {\n      // Allow parent to set layouts directly.\n      const { breakpoint, cols } = this.state;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n      const newLayout = findOrGenerateResponsiveLayout(\n        nextProps.layouts,\n        nextProps.breakpoints,\n        breakpoint,\n        breakpoint,\n        cols,\n        nextProps.compactType\n      );\n      this.setState({ layout: newLayout });\n    }\n  }\n\n  // wrap layouts so we do not need to pass layouts to child\n  onLayoutChange = (layout: Layout) => {\n    this.props.onLayoutChange(layout, {\n      ...this.props.layouts,\n      [this.state.breakpoint]: layout\n    });\n  };\n\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  onWidthChange(nextProps: Props<*>) {\n    const { breakpoints, cols, layouts, compactType } = nextProps;\n    const newBreakpoint =\n      nextProps.breakpoint ||\n      getBreakpointFromWidth(nextProps.breakpoints, nextProps.width);\n\n    const lastBreakpoint = this.state.breakpoint;\n    const newCols: number = getColsFromBreakpoint(newBreakpoint, cols);\n\n    // Breakpoint change\n    if (\n      lastBreakpoint !== newBreakpoint ||\n      this.props.breakpoints !== breakpoints ||\n      this.props.cols !== cols\n    ) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in layouts))\n        layouts[lastBreakpoint] = cloneLayout(this.state.layout);\n\n      // Find or generate a new layout.\n      let layout = findOrGenerateResponsiveLayout(\n        layouts,\n        breakpoints,\n        newBreakpoint,\n        lastBreakpoint,\n        newCols,\n        compactType\n      );\n\n      // This adds missing items.\n      layout = synchronizeLayoutWithChildren(\n        layout,\n        nextProps.children,\n        newCols,\n        compactType\n      );\n\n      // Store the new layout.\n      layouts[newBreakpoint] = layout;\n\n      // callbacks\n      this.props.onLayoutChange(layout, layouts);\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: layout,\n        cols: newCols\n      });\n    }\n    //call onWidthChange on every change of width, not only on breakpoint changes\n    this.props.onWidthChange(\n      nextProps.width,\n      nextProps.margin,\n      newCols,\n      nextProps.containerPadding\n    );\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      breakpoint,\n      breakpoints,\n      cols,\n      layouts,\n      onBreakpointChange,\n      onLayoutChange,\n      onWidthChange,\n      ...other\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    return (\n      <ReactGridLayout\n        {...other}\n        onLayoutChange={this.onLayoutChange}\n        layout={this.state.layout}\n        cols={this.state.cols}\n      />\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ResponsiveReactGridLayout.jsx","// @flow\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\nimport type { ComponentType as ReactComponentType } from \"react\";\n\ntype WPProps = {\n  className?: string,\n  measureBeforeMount: boolean,\n  style?: Object\n};\n\ntype WPState = {\n  width: number\n};\n\n/*\n * A simple HOC that provides facility for listening to container resizes.\n */\nexport default function WidthProvider<\n  Props,\n  ComposedProps: { ...Props, ...WPProps }\n>(\n  ComposedComponent: ReactComponentType<Props>\n): ReactComponentType<ComposedProps> {\n  return class WidthProvider extends React.Component<ComposedProps, WPState> {\n    static defaultProps = {\n      measureBeforeMount: false\n    };\n\n    static propTypes = {\n      // If true, will not render children until mounted. Useful for getting the exact width before\n      // rendering, to prevent any unsightly resizing.\n      measureBeforeMount: PropTypes.bool\n    };\n\n    state = {\n      width: 1280\n    };\n\n    mounted: boolean = false;\n\n    componentDidMount() {\n      this.mounted = true;\n\n      window.addEventListener(\"resize\", this.onWindowResize);\n      // Call to properly set the breakpoint and resize the elements.\n      // Note that if you're doing a full-width element, this can get a little wonky if a scrollbar\n      // appears because of the grid. In that case, fire your own resize event, or set `overflow: scroll` on your body.\n      this.onWindowResize();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n      window.removeEventListener(\"resize\", this.onWindowResize);\n    }\n\n    onWindowResize = () => {\n      if (!this.mounted) return;\n      // eslint-disable-next-line\n      const node = ReactDOM.findDOMNode(this); // Flow casts this to Text | Element\n      if (node instanceof HTMLElement)\n        this.setState({ width: node.offsetWidth });\n    };\n\n    render() {\n      const { measureBeforeMount, ...rest } = this.props;\n      if (measureBeforeMount && !this.mounted) {\n        return (\n          <div className={this.props.className} style={this.props.style} />\n        );\n      }\n\n      return <ComposedComponent {...rest} {...this.state} />;\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/components/WidthProvider.jsx"],"sourceRoot":""}